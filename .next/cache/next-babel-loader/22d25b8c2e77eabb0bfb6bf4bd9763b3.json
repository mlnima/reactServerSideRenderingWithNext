{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './FileManagerControl.scss';\nimport { AppContext } from '../../../../context/AppContext';\n\nvar FileManagerControl = function FileManagerControl(props) {\n  var addressBar = useRef(null);\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onGoBackHandler = function onGoBackHandler(e) {\n    clearClickedItemHandler(e);\n    var path = contextData.filesData.path;\n    var splitPath = path.split('/');\n    var lastItemPlusSlash = '/' + splitPath[splitPath.length - 1];\n    var newPath = path.replace(lastItemPlusSlash, '');\n    contextData.setFilesData(_objectSpread({}, contextData.filesData, {\n      path: newPath,\n      file: ''\n    }));\n  };\n\n  var clearClickedItemHandler = function clearClickedItemHandler(e) {\n    contextData.setFilesData(_objectSpread({}, contextData.filesData, {\n      clickedItems: []\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"FileManagerControl\"\n  }, __jsx(\"button\", {\n    className: \"backBtn\",\n    onClick: function onClick(e) {\n      return onGoBackHandler(e);\n    }\n  }, \"Back\"), __jsx(\"input\", {\n    ref: addressBar,\n    className: \"ControlFilesItem\",\n    onClick: function onClick(e) {\n      return clearClickedItemHandler(e);\n    }\n  }));\n};\n\nexport default FileManagerControl;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FileManagerControl","props","addressBar","contextData","state","setState","onGoBackHandler","e","clearClickedItemHandler","path","filesData","splitPath","split","lastItemPlusSlash","length","newPath","replace","setFilesData","file","clickedItems"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,2BAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAChC,MAAMC,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMK,WAAW,GAAGN,UAAU,CAACE,UAAD,CAA9B;;AAFgC,kBAGJH,QAAQ,CAAC,EAAD,CAHJ;AAAA,MAGxBQ,KAHwB;AAAA,MAGjBC,QAHiB;;AAIhCV,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAK;AACzBC,IAAAA,uBAAuB,CAACD,CAAD,CAAvB;AACA,QAAIE,IAAI,GAAGN,WAAW,CAACO,SAAZ,CAAsBD,IAAjC;AACA,QAAIE,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,iBAAiB,GAAG,MAAMF,SAAS,CAACA,SAAS,CAACG,MAAV,GAAkB,CAAnB,CAAvC;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACO,OAAL,CAAaH,iBAAb,EAA+B,EAA/B,CAAd;AACAV,IAAAA,WAAW,CAACc,YAAZ,mBACOd,WAAW,CAACO,SADnB;AAEID,MAAAA,IAAI,EAACM,OAFT;AAGIG,MAAAA,IAAI,EAAC;AAHT;AAKH,GAXD;;AAaA,MAAMV,uBAAuB,GAAC,SAAxBA,uBAAwB,CAAAD,CAAC,EAAE;AAC7BJ,IAAAA,WAAW,CAACc,YAAZ,mBACOd,WAAW,CAACO,SADnB;AAEIS,MAAAA,YAAY,EAAC;AAFjB;AAIH,GALD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,iBAACZ,CAAD;AAAA,aAAKD,eAAe,CAACC,CAAD,CAApB;AAAA;AAArC,YADJ,EAEI;AAAO,IAAA,GAAG,EAAEL,UAAZ;AAAwB,IAAA,SAAS,EAAC,kBAAlC;AAAqD,IAAA,OAAO,EAAE,iBAAAK,CAAC;AAAA,aAAEC,uBAAuB,CAACD,CAAD,CAAzB;AAAA;AAA/D,IAFJ,CADJ;AAMH,CAlCD;;AAmCA,eAAeP,kBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './FileManagerControl.scss';\r\nimport { AppContext } from '../../../../context/AppContext'\r\n\r\nconst FileManagerControl = props => {\r\n    const addressBar = useRef(null)\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onGoBackHandler = (e)=>{\r\n        clearClickedItemHandler(e)\r\n        let path = contextData.filesData.path;\r\n        let splitPath = path.split('/');\r\n        let lastItemPlusSlash = '/' + splitPath[splitPath.length -1];\r\n        let newPath = path.replace(lastItemPlusSlash,'');\r\n        contextData.setFilesData({\r\n            ...contextData.filesData,\r\n            path:newPath,\r\n            file:''\r\n        })\r\n    };\r\n\r\n    const clearClickedItemHandler=e=>{\r\n        contextData.setFilesData({\r\n            ...contextData.filesData,\r\n            clickedItems:[]\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='FileManagerControl'>\r\n            <button className=\"backBtn\" onClick={(e)=>onGoBackHandler(e)}>Back</button>\r\n            <input ref={addressBar} className=\"ControlFilesItem\" onClick={e=>clearClickedItemHandler(e)}/>\r\n        </div>\r\n    );\r\n};\r\nexport default FileManagerControl;\r\n"]},"metadata":{},"sourceType":"module"}