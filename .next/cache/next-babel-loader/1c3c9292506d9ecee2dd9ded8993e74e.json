{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\nimport { AppContext } from '../../../../context/AppContext';\nimport { executor } from '../../../../_variables/ajaxVariables';\nimport { animateScroll } from 'react-scroll';\n\nconst terminal = props => {\n  const contextData = useContext(AppContext);\n  const logElement = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    command: 'dir',\n    log: ''\n  });\n\n  const onchangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onExecutorHandler = (e, command) => {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, state, {\n      loading: true\n    }));\n    executor(command).then(res => {\n      setState(_objectSpread({}, state, {\n        log: state.log + res.data.response\n      }));\n      contextData.dispatchState(_objectSpread({}, state, {\n        loading: false\n      }));\n    }).catch(err => {\n      console.log(err);\n      contextData.dispatchState(_objectSpread({}, state, {\n        loading: false\n      }));\n    });\n    setTimeout(() => {\n      animateScroll.scrollToBottom({\n        containerId: 'terminalLog'\n      });\n    }, 500);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"terminal-simulator\"\n  }, __jsx(\"h2\", null, \" Terminal :\"), __jsx(\"div\", {\n    className: \"quickAccess\"\n  }, __jsx(\"h3\", null, \"Quick Access\"), __jsx(\"button\", {\n    className: \"quickAccessBtn\",\n    onClick: e => onExecutorHandler(e, 'npm run-script build')\n  }, \"Build\")), __jsx(\"textarea\", {\n    ref: logElement,\n    id: \"terminalLog\",\n    value: state.log,\n    onChange: e => e.scrollTop = e.offsetHeight\n  }), __jsx(\"form\", {\n    className: \"terminalControl\",\n    onSubmit: e => onExecutorHandler(e, state.command)\n  }, __jsx(\"input\", {\n    name: \"command\",\n    type: \"text\",\n    onChange: e => onchangeHandler(e)\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"EXE\"))));\n};\n\nexport default terminal;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/tools/terminal/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","AppContext","executor","animateScroll","terminal","props","contextData","logElement","state","setState","command","log","onchangeHandler","e","target","name","value","onExecutorHandler","preventDefault","dispatchState","loading","then","res","data","response","catch","err","console","setTimeout","scrollToBottom","containerId","scrollTop","offsetHeight"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,QAAT,QAAyB,sCAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAMC,WAAW,GAAGR,UAAU,CAACG,UAAD,CAA9B;AACA,QAAMM,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM;AAAA,OAAES,KAAF;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC;AACjCa,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,GAAG,EAAC;AAF6B,GAAD,CAApC;;AAKA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AACzBJ,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFtB,OAAR;AAIH,GALD;;AAOA,QAAMC,iBAAiB,GAAG,CAACJ,CAAD,EAAGH,OAAH,KAAa;AACnCG,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,WAAW,CAACa,aAAZ,mBACOX,KADP;AAEIY,MAAAA,OAAO,EAAC;AAFZ;AAIAlB,IAAAA,QAAQ,CAACQ,OAAD,CAAR,CAAkBW,IAAlB,CAAuBC,GAAG,IAAE;AACxBb,MAAAA,QAAQ,mBACDD,KADC;AAEJG,QAAAA,GAAG,EAAEH,KAAK,CAACG,GAAN,GAAaW,GAAG,CAACC,IAAJ,CAASC;AAFvB,SAAR;AAIAlB,MAAAA,WAAW,CAACa,aAAZ,mBACOX,KADP;AAEIY,QAAAA,OAAO,EAAC;AAFZ;AAIH,KATD,EASGK,KATH,CASSC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAAChB,GAAR,CAAae,GAAb;AACApB,MAAAA,WAAW,CAACa,aAAZ,mBACOX,KADP;AAEIY,QAAAA,OAAO,EAAC;AAFZ;AAIH,KAfD;AAgBAQ,IAAAA,UAAU,CAAC,MAAI;AACXzB,MAAAA,aAAa,CAAC0B,cAAd,CAA6B;AAACC,QAAAA,WAAW,EAAE;AAAd,OAA7B;AACH,KAFS,EAER,GAFQ,CAAV;AAIH,GA1BD;;AA4BA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,gCADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iCADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEjB,CAAC,IAAEI,iBAAiB,CAACJ,CAAD,EAAG,sBAAH;AAAhE,aAFJ,CAFJ,EAMI;AAAU,IAAA,GAAG,EAAEN,UAAf;AAA2B,IAAA,EAAE,EAAC,aAA9B;AAA4C,IAAA,KAAK,EAAEC,KAAK,CAACG,GAAzD;AAA8D,IAAA,QAAQ,EAAEE,CAAC,IAAEA,CAAC,CAACkB,SAAF,GAAclB,CAAC,CAACmB;AAA3F,IANJ,EAOI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,QAAQ,EAAEnB,CAAC,IAAEI,iBAAiB,CAACJ,CAAD,EAAGL,KAAK,CAACE,OAAT;AAAhE,KACI;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAGG,CAAC,IAAID,eAAe,CAACC,CAAD;AAAjE,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAC;AAAb,WAFJ,CAPJ,CADJ,CADJ;AAgBH,CA3DD;;AA4DA,eAAeT,QAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../../components/layouts/AdminLayout'\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport { executor } from '../../../../_variables/ajaxVariables'\r\nimport { animateScroll } from 'react-scroll'\r\n\r\nconst terminal = props => {\r\n    const contextData = useContext(AppContext);\r\n    const logElement = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        command: 'dir',\r\n        log:''\r\n    });\r\n\r\n    const onchangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onExecutorHandler = (e,command)=>{\r\n        e.preventDefault()\r\n        contextData.dispatchState({\r\n            ...state,\r\n            loading:true\r\n        })\r\n        executor(command).then(res=>{\r\n            setState({\r\n                ...state,\r\n                log: state.log  + res.data.response\r\n            })\r\n            contextData.dispatchState({\r\n                ...state,\r\n                loading:false\r\n            })\r\n        }).catch(err=>{\r\n            console.log( err)\r\n            contextData.dispatchState({\r\n                ...state,\r\n                loading:false\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            animateScroll.scrollToBottom({containerId: 'terminalLog'})\r\n        },500)\r\n\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className='terminal-simulator'>\r\n                <h2> Terminal :</h2>\r\n                <div className='quickAccess'>\r\n                    <h3>Quick Access</h3>\r\n                    <button className='quickAccessBtn' onClick={e=>onExecutorHandler(e,'npm run-script build')}>Build</button>\r\n                </div>\r\n                <textarea ref={logElement} id='terminalLog' value={state.log} onChange={e=>e.scrollTop = e.offsetHeight} />\r\n                <form className=\"terminalControl\" onSubmit={e=>onExecutorHandler(e,state.command)}>\r\n                    <input name='command' type=\"text\" onChange={ e => onchangeHandler(e) }/>\r\n                    <button type='submit'>EXE</button>\r\n                </form>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default terminal;\r\n"]},"metadata":{},"sourceType":"module"}