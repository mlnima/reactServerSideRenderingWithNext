{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getMultipleSetting, getMultipleWidgetWithData } from \"../_variables/ajaxVariables\";\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { getAbsolutePath } from '../_variables/_variables';\nimport WidgetsRenderer from '../components/includes/WidgetsRenderer/WidgetsRenderer';\nimport { Sidebar } from '../components/includes/Sidebar/Sidebar';\nimport Footer from '../components/includes/Footer/Footer';\n\nconst Home = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  useEffect(() => {\n    if (props.identity.data.homePageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.data.homePageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(WidgetsRenderer, {\n    widgets: props.widgets,\n    position: \"home\"\n  })), __jsx(Sidebar, {\n    key: \"homePageSidebar\",\n    isActive: props.identity.data.homePageSidebar,\n    widgets: props.widgets,\n    position: \"homePageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nHome.getInitialProps = async ({\n  req\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let widgets;\n  let settings;\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['homePageSidebar', 'home', 'footer', 'header']\n  }, true, domainName);\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  return _objectSpread({\n    widgets\n  }, settings);\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","withRouter","getMultipleSetting","getMultipleWidgetWithData","SiteSettingSetter","getAbsolutePath","WidgetsRenderer","Sidebar","Footer","Home","props","state","setState","style","identity","data","homePageSidebar","gridArea","widgets","getInitialProps","req","domainName","settings","widgetsData","settingsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport { getMultipleSetting, getMultipleWidgetWithData } from \"../_variables/ajaxVariables\";\r\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport { getAbsolutePath } from '../_variables/_variables'\r\nimport WidgetsRenderer from '../components/includes/WidgetsRenderer/WidgetsRenderer'\r\nimport { Sidebar } from '../components/includes/Sidebar/Sidebar'\r\nimport Footer from '../components/includes/Footer/Footer'\r\n\r\nconst Home = props => {\r\n\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.identity.data.homePageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <div style={ state.style } className={ props.identity.data.homePageSidebar ? 'content withSidebar' : 'content withOutSidebar' }>\r\n                    <div className='HomePage'>\r\n                        <WidgetsRenderer widgets={ props.widgets } position='home'/>\r\n                    </div>\r\n                    <Sidebar key='homePageSidebar' isActive={ props.identity.data.homePageSidebar } widgets={ props.widgets } position='homePageSidebar'/>\r\n                </div>\r\n                <Footer widgets={ props.widgets } position='footer'/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({ req }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n\r\n    let widgets;\r\n    let settings;\r\n\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'homePageSidebar', 'home', 'footer','header' ] }, true, domainName)\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    return { widgets, ...settings }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}