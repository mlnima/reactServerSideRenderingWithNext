{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport './IsInSlideShow.scss';\nimport { AppContext } from \"../../../../../context/AppContext\";\n\nvar IsInSlideShow = function IsInSlideShow(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    isChecked: contextData.editingPostData.inSlideShow\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    contextData.dispatchEditingPostData(function (postData) {\n      return _objectSpread({}, postData, {\n        inSlideShow: state.isChecked\n      });\n    });\n  }, [state.isChecked]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, {\n      isChecked: e\n    }));\n    console.log(e);\n  };\n\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(Switch, {\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    },\n    checked: state.isChecked\n  })));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","AppContext","IsInSlideShow","props","contextData","isChecked","editingPostData","inSlideShow","state","setState","dispatchEditingPostData","postData","onChangeHandler","e","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3B,MAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;;AAD2B,kBAEDH,QAAQ,CAAC;AAC/BO,IAAAA,SAAS,EAAGD,WAAW,CAACE,eAAZ,CAA4BC;AADT,GAAD,CAFP;AAAA,MAEpBC,KAFoB;AAAA,MAEbC,QAFa;;AAK3BZ,EAAAA,SAAS,CAAC,YAAM;AACbO,IAAAA,WAAW,CAACM,uBAAZ,CAAoC,UAAAC,QAAQ;AAAA,+BACrCA,QADqC;AAExCJ,QAAAA,WAAW,EAACC,KAAK,CAACH;AAFsB;AAAA,KAA5C;AAIF,GALQ,EAKN,CAACG,KAAK,CAACH,SAAP,CALM,CAAT;;AAQA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAK;AACzBJ,IAAAA,QAAQ,mBACDD,KADC;AAEJH,MAAAA,SAAS,EAAEQ;AAFP,OAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,GAND;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA,KAAnB;AAAyC,IAAA,OAAO,EAAEL,KAAK,CAACH;AAAxD,IADJ,CAJJ,CADJ;AAUH,CA/BD;;AAgCA,eAAeH,aAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport Switch from \"react-switch\";\r\nimport './IsInSlideShow.scss';\r\nimport { AppContext } from \"../../../../../context/AppContext\";\r\n\r\n\r\nconst IsInSlideShow = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [state, setState] = useState({\r\n        isChecked : contextData.editingPostData.inSlideShow\r\n    });\r\n    useEffect(() => {\r\n       contextData.dispatchEditingPostData(postData=>({\r\n           ...postData,\r\n           inSlideShow:state.isChecked\r\n       }))\r\n    }, [state.isChecked]);\r\n\r\n\r\n    const onChangeHandler = (e)=>{\r\n        setState({\r\n            ...state,\r\n            isChecked: e\r\n        });\r\n        console.log(e )\r\n    };\r\n\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <Switch onChange={e=>onChangeHandler(e)} checked={state.isChecked} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}