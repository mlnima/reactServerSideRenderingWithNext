{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\n\nvar metaPage = function metaPage(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n  return __jsx(AppLayout, null, __jsx(\"div\", null, \"xxx\"));\n};\n\nmetaPage.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, metaData, metaDetail, identityData, navigationData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          metaData = [];\n          metaDetail = {\n            type: query.meta,\n            pageNo: 1,\n            size: 100,\n            searchForImageIn: 'categories'\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 5:\n          identityData = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 8:\n          navigationData = _context.sent;\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default metaPage;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/metaPage/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","metaPage","props","state","setState","getInitialProps","pathname","query","req","res","err","metaData","metaDetail","type","meta","pageNo","size","searchForImageIn","identityData","navigationData","identity","navigation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,kBACMN,QAAQ,CAAC,EAAD,CADd;AAAA,MACdO,KADc;AAAA,MACPC,QADO;;AAEtBT,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;AAEA,SACI,MAAC,SAAD,QACA,yBADA,CADJ;AAKH,CATD;;AAWAM,QAAQ,CAACI,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAGnBC,UAAAA,QAHmB,GAGR,EAHQ;AAIjBC,UAAAA,UAJiB,GAIL;AACdC,YAAAA,IAAI,EAAEN,KAAK,CAACO,IADE;AAEVC,YAAAA,MAAM,EAAE,CAFE;AAGdC,YAAAA,IAAI,EAAE,GAHQ;AAIdC,YAAAA,gBAAgB,EAAC;AAJH,WAJK;AAAA;AAAA,2CAUIjB,UAAU,CAAC,UAAD,CAVd;;AAAA;AAUjBkB,UAAAA,YAViB;AAAA;AAAA,2CAWMlB,UAAU,CAAC,YAAD,CAXhB;;AAAA;AAWjBmB,UAAAA,cAXiB;AAAA,2CAYhB;AAAEC,YAAAA,QAAQ,EAARA,QAAF;AAAYC,YAAAA,UAAU,EAAVA,UAAZ;AAAwBd,YAAAA,KAAK,EAALA;AAAxB,WAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAeA,eAAeN,QAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\n\r\nconst metaPage = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n    return (\r\n        <AppLayout>\r\n        <div>xxx</div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nmetaPage.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let metaData = []\r\n    const metaDetail ={\r\n        type: query.meta,\r\n            pageNo: 1,\r\n        size: 100,\r\n        searchForImageIn:'categories',\r\n    }\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    return { identity, navigation, query }\r\n}\r\n\r\nexport default metaPage;\r\n"]},"metadata":{},"sourceType":"module"}