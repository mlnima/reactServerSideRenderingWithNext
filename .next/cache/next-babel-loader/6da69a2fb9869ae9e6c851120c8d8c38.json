{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\nimport Quality from \"./Quality/Quality\";\nimport './VideoInformation.scss';\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\nimport Duration from \"./Duration/Duration\";\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\nimport { AppContext } from \"../../../../context/AppContext\";\nimport TextInput from \"./TextInput/TextInput\";\n\nvar VideoInformation = function VideoInformation(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    inSlideShow: false\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // useEffect(() => {\n  //     setState({ ...state, ...contextData.editingPostData })\n  // }, []);\n\n\n  useEffect(function () {\n    console.log(state);\n  }, [state]); // useEffect(() => {\n  //     setTimeout(() => {\n  //         contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\n  //     }, 10000)\n  // }, []);\n\n  var onSaveChanges = function onSaveChanges() {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, state));\n  };\n\n  var onchangeHandler = function onchangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onDurationChangeHandler = function onDurationChangeHandler(value) {\n    setState(_objectSpread({}, state, {\n      duration: value\n    }));\n  };\n\n  var onIsInSlideShowChangeHandler = function onIsInSlideShowChangeHandler(e) {\n    setState(_objectSpread({}, state, {\n      inSlideShow: e\n    }));\n  };\n\n  if (contextData.editingPostData.format === 'video') {\n    return __jsx(\"div\", {\n      className: \"VideoInformation\"\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return onSaveChanges();\n      }\n    }, \"Save\"), __jsx(IsInSlideShow, {\n      onChangeHandler: onIsInSlideShowChangeHandler,\n      isChecked: state.inSlideShow\n    }), __jsx(Quality, {\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"videoTrailerUrl\",\n      title: \"Video Url\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(VideoEmbedCode, {\n      name: \"videoEmbedCode\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(Duration, {\n      onDurationChangeHandler: onDurationChangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'views',\n      onChangeHandler: onchangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'likes',\n      onChangeHandler: onchangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'disLikes',\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"VideoTrailerUrl\",\n      title: \"Video Trailer Url\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"mainThumbnail\",\n      title: \"Main thumbnail\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInput, {\n      name: \"downloadLink\",\n      title: \"Download Link\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onSaveChanges();\n      }\n    }, \"Save\"));\n  } else {\n    return __jsx(\"h3\", null, \"This Post Type Does not Support this Feature \");\n  }\n};\n\nexport default VideoInformation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/VideoInformation.js"],"names":["React","useEffect","useState","useContext","IsInSlideShow","Quality","VideoUrls","VideoEmbedCode","Duration","ViewsLikesDisLikes","TextInputWithUploadBtn","AppContext","TextInput","VideoInformation","props","contextData","inSlideShow","state","setState","console","log","onSaveChanges","dispatchEditingPostData","editingPostData","onchangeHandler","e","target","name","value","onDurationChangeHandler","duration","onIsInSlideShowChangeHandler","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport './VideoInformation.scss'\r\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\r\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\r\nimport Duration from \"./Duration/Duration\";\r\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\r\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport TextInput from \"./TextInput/TextInput\";\r\n\r\nconst VideoInformation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        inSlideShow:false\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     setState({ ...state, ...contextData.editingPostData })\r\n    // }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(state)\r\n    }, [ state ]);\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\r\n    //     }, 10000)\r\n    // }, []);\r\n\r\n    const onSaveChanges = ()=>{\r\n       contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\r\n    };\r\n\r\n    const onchangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n    const onDurationChangeHandler = (value) => {\r\n        setState({\r\n            ...state,\r\n            duration: value\r\n        })\r\n    };\r\n\r\n    const onIsInSlideShowChangeHandler = (e)=>{\r\n        setState({\r\n            ...state,\r\n            inSlideShow: e\r\n        })\r\n    };\r\n\r\n    if (contextData.editingPostData.format === 'video') {\r\n        return (\r\n            <div className='VideoInformation' >\r\n                <button onClick={()=>onSaveChanges()}>Save</button>\r\n                <IsInSlideShow onChangeHandler={ onIsInSlideShowChangeHandler } isChecked={state.inSlideShow}/>\r\n                <Quality onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='videoTrailerUrl' title='Video Url' onChangeHandler={ onchangeHandler }/>\r\n                <VideoEmbedCode name='videoEmbedCode' onChangeHandler={ onchangeHandler }/>\r\n                <Duration onDurationChangeHandler={onDurationChangeHandler}/>\r\n                <ViewsLikesDisLikes name={ 'views' } onChangeHandler={ onchangeHandler }/>\r\n                <ViewsLikesDisLikes name={ 'likes' } onChangeHandler={ onchangeHandler }/>\r\n                <ViewsLikesDisLikes name={ 'disLikes' } onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='VideoTrailerUrl' title='Video Trailer Url' onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='mainThumbnail' title='Main thumbnail' onChangeHandler={ onchangeHandler }/>\r\n                <TextInput name='downloadLink' title='Download Link'  onChangeHandler={ onchangeHandler } />\r\n                <button onClick={()=>onSaveChanges()}>Save</button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <h3>This Post Type Does not Support this Feature </h3>\r\n        )\r\n    }\r\n\r\n};\r\nexport default VideoInformation;"]},"metadata":{},"sourceType":"module"}