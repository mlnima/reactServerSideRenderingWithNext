{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\nimport FA from 'react-fontawesome';\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\nimport './navigationAdmin.scss';\n\nconst navigation = props => {\n  const titleEl = useRef(null);\n  const urlEl = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    type: 'navigation',\n    data: []\n  });\n  useEffect(() => {\n    getSetting(state.type, false, window.location.origin).then(res => {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {\n          data: res.data.setting.data || []\n        }));\n      }\n    });\n  }, []);\n\n  const onSaveChangesHandler = () => {\n    updateSetting('navigation', state.data).then(() => {\n      getSetting(state.type).then(res => {\n        if (res.data.setting) {\n          setState(_objectSpread({}, state, {\n            data: res.data.setting.data || []\n          }));\n        }\n      });\n    });\n  };\n\n  const onDeleteItemHandler = e => {\n    setState(_objectSpread({}, state, {\n      data: state.data.filter(i => i.title !== e.target.name)\n    }));\n  };\n\n  const onAddItemHandler = () => {\n    const newItem = {\n      title: titleEl.current.value,\n      url: urlEl.current.value\n    };\n    setState(_objectSpread({}, state, {\n      data: [...state.data, newItem]\n    }));\n    titleEl.current.value = '';\n    urlEl.current.value = '';\n  };\n\n  const renderItems = state.data.map(item => {\n    return __jsx(NavigationItem, {\n      title: item.title,\n      url: item.url,\n      onDeleteItemHandler: onDeleteItemHandler\n    });\n  });\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-items\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-item\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    ref: titleEl,\n    type: \"text\",\n    name: \"title\"\n  })), __jsx(\"div\", {\n    className: \"add-navigation-item\"\n  }, __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    ref: urlEl,\n    type: \"text\",\n    name: \"url\"\n  })), __jsx(\"button\", {\n    onClick: () => onAddItemHandler()\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"items-preview\"\n  }, renderItems), __jsx(\"button\", {\n    className: \"saveBtn\",\n    onClick: () => onSaveChangesHandler()\n  }, \"Save\")));\n};\n\nexport default navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/navigation/index.js"],"names":["React","useEffect","useState","useRef","AdminLayout","getSetting","updateSetting","FA","NavigationItem","navigation","props","titleEl","urlEl","state","setState","type","data","window","location","origin","then","res","setting","onSaveChangesHandler","onDeleteItemHandler","e","filter","i","title","target","name","onAddItemHandler","newItem","current","value","url","renderItems","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\r\nimport FA from 'react-fontawesome'\r\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\r\nimport './navigationAdmin.scss';\r\n\r\nconst navigation = props => {\r\n    const titleEl = useRef(null)\r\n    const urlEl = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        data: []\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSetting(state.type, false, window.location.origin).then(res => {\r\n            if (res.data.setting) {\r\n                setState({\r\n                    ...state,\r\n                    data: res.data.setting.data || []\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n        updateSetting('navigation', state.data).then(() => {\r\n            getSetting(state.type).then(res => {\r\n                if (res.data.setting) {\r\n                    setState({\r\n                        ...state,\r\n                        data: res.data.setting.data || []\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    const onDeleteItemHandler = (e) => {\r\n        setState({\r\n            ...state,\r\n            data: state.data.filter(i => i.title !== e.target.name)\r\n        })\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n        const newItem = {\r\n            title: titleEl.current.value,\r\n            url: urlEl.current.value\r\n        };\r\n        setState({\r\n            ...state,\r\n            data: [ ...state.data, newItem ]\r\n        })\r\n\r\n        titleEl.current.value = '';\r\n        urlEl.current.value = ''\r\n    };\r\n\r\n    const renderItems = state.data.map(item => {\r\n        return (\r\n            <NavigationItem title={ item.title } url={ item.url } onDeleteItemHandler={ onDeleteItemHandler }/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <div className='add-navigation-items'>\r\n                    <div className='add-navigation-item'>\r\n                        <p>Title :</p>\r\n                        <input ref={ titleEl } type=\"text\" name='title'/>\r\n                    </div>\r\n                    <div className='add-navigation-item'>\r\n                        <p>Url :</p>\r\n                        <input ref={ urlEl } type=\"text\" name='url'/>\r\n                    </div>\r\n                    <button onClick={ () => onAddItemHandler() }>Add</button>\r\n                </div>\r\n                <div className='items-preview'>\r\n                    { renderItems }\r\n                </div>\r\n                <button className='saveBtn' onClick={ () => onSaveChangesHandler() }>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default navigation;"]},"metadata":{},"sourceType":"module"}