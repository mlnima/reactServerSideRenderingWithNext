{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\n\nconst Actors = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: props.data || []\n  });\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  const renderData = state.data.map(item => {\n    const path = '/' + state.type + '/' + item;\n    return __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", null, item, \"xx\"));\n  });\n\n  if (props.actors) {\n    return __jsx(\"div\", null, \"x\", renderData);\n  } else return null;\n};\n\nexport default Actors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/Actors/Actors.js"],"names":["React","useEffect","useState","useContext","Link","Actors","props","state","setState","data","console","log","renderData","map","item","path","type","actors"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAACH,KAAK,CAACG,IAAN,IAAc;AADY,GAAD,CAAlC;AAKAR,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,OAAO,CAACC,GAAR,CAAaL,KAAb;AACH,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA,QAAMM,UAAU,GAAGL,KAAK,CAACE,IAAN,CAAWI,GAAX,CAAeC,IAAI,IAAE;AACpC,UAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,IAAZ,GAAmB,GAAnB,GAAyBF,IAAtC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,IAAZ;AAAkB,MAAA,GAAG,EAAED;AAAvB,OAA6B,iBAAIA,IAAJ,OAA7B,CADJ;AAGH,GALkB,CAAnB;;AAOA,MAAIR,KAAK,CAACW,MAAV,EAAiB;AACb,WACI,wBAEKL,UAFL,CADJ;AAMH,GAPD,MAOM,OAAO,IAAP;AAET,CA1BD;;AA2BA,eAAeP,MAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport Link from \"next/link\";\r\nconst Actors = props => {\r\n    const [state, setState] = useState({\r\n        data:props.data || [],\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log( props)\r\n    },[props ]);\r\n\r\n    const renderData = state.data.map(item=>{\r\n        const path = '/' + state.type + '/' + item;\r\n        return(\r\n            <Link href={path} key={item}><a>{item}xx</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.actors){\r\n        return (\r\n            <div>\r\n                x\r\n                {renderData}\r\n            </div>\r\n        );\r\n    }else return null\r\n\r\n};\r\nexport default Actors;"]},"metadata":{},"sourceType":"module"}