{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../../context/AppContext';\n\nvar AdminDesignSettingColorType = function AdminDesignSettingColorType(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    contextData.dispatchSiteDesign(_objectSpread({}, contextData.siteDesign, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: \"AdminDesignSettingColorType\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", {\n    className: \"adminDesignSectionItemTitle\"\n  }, state.type.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n    name: state.type,\n    value: contextData.siteDesign[state.type],\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: [contextData.siteDesign[state.type]]\n    }\n  }))));\n};\n\nexport default AdminDesignSettingColorType;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/AdminDesignSettingColorType/AdminDesignSettingColorType.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","AdminDesignSettingColorType","props","contextData","state","setState","onChangeHandler","e","dispatchSiteDesign","siteDesign","target","name","value","type","replace","backgroundColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAAC,KAAK,EAAI;AACzC,MAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;;AADyC,kBAEbH,QAAQ,CAAC,EAAD,CAFK;AAAA,MAEjCO,KAFiC;AAAA,MAE1BC,QAF0B;;AAGzCT,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAIA,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAE;AACvBJ,IAAAA,WAAW,CAACK,kBAAZ,mBACOL,WAAW,CAACM,UADnB,sBAEKF,CAAC,CAACG,MAAF,CAASC,IAFd,EAEoBJ,CAAC,CAACG,MAAF,CAASE,KAF7B;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACQ;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAG,IAAA,SAAS,EAAC;AAAb,KAA6CR,KAAK,CAACS,IAAN,CAAWC,OAAX,CAAmB,UAAnB,EAA+B,KAA/B,CAA7C,OADJ,EAEI;AAAO,IAAA,IAAI,EAAGV,KAAK,CAACS,IAApB;AAA2B,IAAA,KAAK,EAAGV,WAAW,CAACM,UAAZ,CAAuBL,KAAK,CAACS,IAA7B,CAAnC;AAAwE,IAAA,QAAQ,EAAG,kBAAAN,CAAC;AAAA,aAAID,eAAe,CAACC,CAAD,CAAnB;AAAA;AAApF,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAG;AAClCQ,MAAAA,eAAe,EAAE,CAACZ,WAAW,CAACM,UAAZ,CAAuBL,KAAK,CAACS,IAA7B,CAAD;AADiB;AAAtC,IAHJ,CADJ,CADR,CADJ;AAaH,CA3BD;;AA4BA,eAAeZ,2BAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst AdminDesignSettingColorType = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    const onChangeHandler = e=>{\r\n        contextData.dispatchSiteDesign({\r\n            ...contextData.siteDesign,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='AdminDesignSettingColorType'>\r\n                <div className=\"adminDesignSectionItems\">\r\n                    <div className=\"adminDesignSectionItem\">\r\n                        <p className='adminDesignSectionItemTitle'>{ state.type.replace(/([A-Z])/g, \" $1\") } :</p>\r\n                        <input name={ state.type } value={ contextData.siteDesign[state.type] } onChange={ e => onChangeHandler(e) }/>\r\n                        <div className=\"previewColor\" style={ {\r\n                            backgroundColor: [contextData.siteDesign[state.type]]\r\n                        } }/>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\nexport default AdminDesignSettingColorType;\r\n"]},"metadata":{},"sourceType":"module"}