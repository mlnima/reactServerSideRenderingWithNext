{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { getComments } from '../../../_variables/ajaxPostsVariables';\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments';\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport AppLayout from '../../../components/layouts/AppLayout';\n\nconst comments = props => {\n  return __jsx(AdminLayout, null, __jsx(\"div\", null, __jsx(AdminCommentsControl, {\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCommentsData.pageNo,\n    totalCount: props.totalComments,\n    size: props.getCommentsData.size,\n    maxPage: Math.ceil(parseInt(props.totalComments) / parseInt(props.getCommentsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(AdminRenderComments, props)));\n};\n\ncomments.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let comments;\n  const getCommentsData = {\n    size: parseInt(query.size) || 30,\n    pageNo: parseInt(query.page) || 1,\n    keyword: query.keyword || '',\n    sort: query.sort || 'latest',\n    status: query.status || 'all'\n  };\n  const commentsData = await getComments(getCommentsData);\n  comments = commentsData.data;\n  return {\n    query,\n    pathname,\n    comments: comments.comments,\n    totalComments: comments.count,\n    getCommentsData\n  };\n};\n\nexport default comments;","map":null,"metadata":{},"sourceType":"module"}