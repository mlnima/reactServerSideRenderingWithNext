{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'; // import './categories.scss'import './categories.scss'\n\nvar categories = function categories(props) {\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n  var renderCategories = props.tagsSource.metas.map(function (meta) {\n    return __jsx(CategoryElement, {\n      key: meta._id,\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"categories\"\n  }, __jsx(SiteSettingSetter, props), renderCategories, __jsx(RenderMetaDataPages, _extends({\n    type: \"categories\"\n  }, props)))));\n};\n\ncategories.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, categoriesSource, identityData, navigationData, getCategoriesData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          getCategoriesData = {\n            type: 'category',\n            searchForImageIn: 'categories',\n            pageNo: _parseInt(query.page) || 1,\n            size: _parseInt(query.size) || _parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getMeta(getCategoriesData));\n\n        case 12:\n          categoriesData = _context.sent;\n          categoriesSource = categoriesData.data.metas ? categoriesData.data.metas : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            categoriesSource: categoriesSource,\n            getCategoriesData: getCategoriesData\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(categories);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","AppContext","getMeta","withRouter","CategoryElement","RenderMetaDataPages","SiteSettingSetter","categories","props","console","log","renderCategories","tagsSource","metas","map","meta","_id","imageUrl","noImageUrl","name","count","getInitialProps","pathname","query","req","res","err","identityData","navigationData","identity","data","setting","navigation","getCategoriesData","type","searchForImageIn","pageNo","page","size","tagsCountPerPage","sort","categoriesData","categoriesSource"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport withRouter from 'next/dist/client/with-router';\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\r\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n// import './categories.scss'import './categories.scss'\r\n\r\nconst categories = props => {\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n    const renderCategories = props.tagsSource.metas.map(meta => {\r\n        return (\r\n            <CategoryElement key={ meta._id } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div className='categories'>\r\n                    <SiteSettingSetter  { ...props }/>\r\n                    { renderCategories }\r\n                    <RenderMetaDataPages type='categories' { ...props }/>\r\n                </div>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let categoriesSource;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getCategoriesData = {\r\n        type: 'category',\r\n        searchForImageIn:'categories',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n    const categoriesData = await getMeta(getCategoriesData)\r\n    categoriesSource = categoriesData.data.metas ? categoriesData.data.metas : []\r\n    return { identity, navigation, query, categoriesSource,getCategoriesData }\r\n}\r\nexport default withRouter(categories);\r\n"]},"metadata":{},"sourceType":"module"}