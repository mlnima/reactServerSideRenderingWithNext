{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useContext, useState, useRef } from 'react';\nimport Head from \"next/head\";\nimport './AdminLayout.scss';\nimport '../../styles/styles.scss';\nimport TopBar from \"../adminIncludes/TopBar/TopBar\";\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { withRouter } from \"next/router\";\n\nvar Panel = function Panel(props) {\n  var contextData = useContext(AppContext);\n  var container = useRef(null);\n  var Admin = useRef(null);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      dispatchState = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth > 768) {\n      contextData.dispatchSettings(function (settings) {\n        return _objectSpread({}, settings, {\n          adminPanelSideBar: true\n        });\n      });\n    }\n  }, []); // useEffect(()=>{\n  //     if (contextData.userData.role !=='administrator'){\n  //         props.router.push('/')\n  //     }\n  // },[ props.router]);\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Website Title\"), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#000000\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"description of the site\"\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: \"key,word,for,SEO\"\n  }), \"/*\", __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"The Rock\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"video.movie\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"http://www.imdb.com/title/tt0117500/\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"http://ia.media-imdb.com/images/rock.jpg\"\n  }), \"https://ogp.me/ */\"), __jsx(\"div\", {\n    ref: container,\n    className: \"container\"\n  }, __jsx(TopBar, null), __jsx(SideBar, null), __jsx(\"div\", {\n    ref: Admin,\n    className: \"Admin\"\n  }, props.children)));\n};\n\nexport default withRouter(Panel);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/layouts/AdminLayout.js"],"names":["React","useEffect","useContext","useState","useRef","Head","TopBar","SideBar","AppContext","withRouter","Panel","props","contextData","container","Admin","state","dispatchState","window","innerWidth","dispatchSettings","settings","adminPanelSideBar","children"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,oBAAP;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnB,MAAMC,WAAW,GAAGV,UAAU,CAACM,UAAD,CAA9B;AACA,MAAMK,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;AACA,MAAMU,KAAK,GAAGV,MAAM,CAAC,IAAD,CAApB;;AAHmB,kBAIcD,QAAQ,CAAC,EAAD,CAJtB;AAAA,MAIXY,KAJW;AAAA,MAIJC,aAJI;;AAMnBf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIgB,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AACzBN,MAAAA,WAAW,CAACO,gBAAZ,CAA6B,UAAAC,QAAQ;AAAA,iCAC9BA,QAD8B;AAEjCC,UAAAA,iBAAiB,EAAE;AAFc;AAAA,OAArC;AAIH;AACJ,GAPQ,EAON,EAPM,CAAT,CANmB,CAenB;AACA;AACA;AACA;AACA;;AAEA,SACI,4BACI,MAAC,IAAD,QACI,qCADJ,EAEI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFJ,EAGI;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAHJ,EAII;AAAM,IAAA,OAAO,EAAC;AAAd,IAJJ,EAKI;AAAM,IAAA,IAAI,EAAC,6EAAX;AAAyF,IAAA,GAAG,EAAC;AAA7F,IALJ,EAMI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IANJ,EAOI;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAPJ,QASI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC;AAAlC,IATJ,EAUI;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAVJ,EAWI;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAC;AAAhC,IAXJ,EAYI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC;AAAlC,IAZJ,uBADJ,EAkBI;AAAK,IAAA,GAAG,EAAGR,SAAX;AAAuB,IAAA,SAAS,EAAC;AAAjC,KACI,MAAC,MAAD,OADJ,EAEI,MAAC,OAAD,OAFJ,EAGI;AAAK,IAAA,GAAG,EAAGC,KAAX;AAAmB,IAAA,SAAS,EAAC;AAA7B,KACMH,KAAK,CAACW,QADZ,CAHJ,CAlBJ,CADJ;AA6BH,CAlDD;;AAoDA,eAAeb,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport Head from \"next/head\";\r\nimport './AdminLayout.scss'\r\nimport '../../styles/styles.scss';\r\nimport TopBar from \"../adminIncludes/TopBar/TopBar\";\r\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport {withRouter} from \"next/router\";\r\n\r\nconst Panel = props => {\r\n    const contextData = useContext(AppContext);\r\n    const container = useRef(null);\r\n    const Admin = useRef(null);\r\n    const [ state, dispatchState ] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth > 768) {\r\n            contextData.dispatchSettings(settings => ({\r\n                ...settings,\r\n                adminPanelSideBar: true\r\n            }))\r\n        }\r\n    }, []);\r\n\r\n    // useEffect(()=>{\r\n    //     if (contextData.userData.role !=='administrator'){\r\n    //         props.router.push('/')\r\n    //     }\r\n    // },[ props.router]);\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Website Title</title>\r\n                <meta name=\"theme-color\" content=\"#000000\"/>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n                <meta charSet=\"utf-8\"/>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n                <meta name=\"description\" content=\"description of the site\"/>\r\n                <meta name=\"keywords\" content=\"key,word,for,SEO\"/>\r\n                /*\r\n                <meta property=\"og:title\" content=\"The Rock\" />\r\n                <meta property=\"og:type\" content=\"video.movie\" />\r\n                <meta property=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\" />\r\n                <meta property=\"og:image\" content=\"http://ia.media-imdb.com/images/rock.jpg\" />\r\n\r\n                https://ogp.me/\r\n                */\r\n            </Head>\r\n            <div ref={ container } className=\"container\">\r\n                <TopBar/>\r\n                <SideBar/>\r\n                <div ref={ Admin } className=\"Admin\">\r\n                    { props.children }\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Panel) ;\r\n"]},"metadata":{},"sourceType":"module"}