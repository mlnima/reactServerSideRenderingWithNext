{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { getComments } from '../../../_variables/ajaxPostsVariables';\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments';\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl';\n\nconst comments = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  return __jsx(AdminLayout, null, __jsx(\"div\", null, __jsx(AdminCommentsControl, null), __jsx(AdminRenderComments, props)));\n};\n\ncomments.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let comments;\n  const getCommentsData = {\n    size: parseInt(query.size) || 30,\n    pageNo: parseInt(query.page) || 1,\n    keyword: query.keyword || '',\n    sort: query.sort || 'latest' // status: 'published',\n\n  };\n  const commentsData = await getComments(getCommentsData);\n  comments = commentsData.data.comments;\n  return {\n    query,\n    pathname,\n    comments,\n    getCommentsData\n  };\n};\n\nexport default comments;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/comments/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","getComments","AdminRenderComments","AdminCommentsControl","comments","props","state","setState","getInitialProps","pathname","query","req","res","err","getCommentsData","size","parseInt","pageNo","page","keyword","sort","commentsData","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,OAAOC,mBAAP,MAAgC,kGAAhC;AACA,OAAOC,oBAAP,MAAiC,oGAAjC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEA,SACI,MAAC,WAAD,QACI,mBACI,MAAC,oBAAD,OADJ,EAIG,MAAC,mBAAD,EAAyBQ,KAAzB,CAJH,CADJ,CADJ;AAUH,CAbD;;AAeAD,QAAQ,CAACI,eAAT,GAA2B,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,GAAnB;AAAwBC,EAAAA,GAAxB;AAA6BC,EAAAA;AAA7B,CAAP,KAA6C;AACpE,MAAIT,QAAJ;AACA,QAAMU,eAAe,GAAG;AACpBC,IAAAA,IAAI,EAAEC,QAAQ,CAACN,KAAK,CAACK,IAAP,CAAR,IAAyB,EADX;AAEpBE,IAAAA,MAAM,EAAED,QAAQ,CAACN,KAAK,CAACQ,IAAP,CAAR,IAAwB,CAFZ;AAGpBC,IAAAA,OAAO,EAAET,KAAK,CAACS,OAAN,IAAiB,EAHN;AAIpBC,IAAAA,IAAI,EAAEV,KAAK,CAACU,IAAN,IAAc,QAJA,CAKpB;;AALoB,GAAxB;AAOA,QAAMC,YAAY,GAAG,MAAMpB,WAAW,CAACa,eAAD,CAAtC;AACAV,EAAAA,QAAQ,GAACiB,YAAY,CAACC,IAAb,CAAkBlB,QAA3B;AACA,SAAO;AAAGM,IAAAA,KAAH;AAASD,IAAAA,QAAT;AAAkBL,IAAAA,QAAlB;AAA2BU,IAAAA;AAA3B,GAAP;AACH,CAZD;;AAaA,eAAeV,QAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout'\r\nimport {getComments} from '../../../_variables/ajaxPostsVariables'\r\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments'\r\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl'\r\n\r\nconst comments = props => {\r\n    const [ state, setState ] = useState({});\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div>\r\n                <AdminCommentsControl\r\n\r\n                />\r\n               <AdminRenderComments {...props}/>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ncomments.getInitialProps = async ({ pathname, query, req, res, err }) =>{\r\n    let comments;\r\n    const getCommentsData = {\r\n        size: parseInt(query.size)  || 30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        keyword: query.keyword || '',\r\n        sort: query.sort || 'latest',\r\n        // status: 'published',\r\n    }\r\n    const commentsData = await getComments(getCommentsData)\r\n    comments=commentsData.data.comments\r\n    return {  query,pathname,comments,getCommentsData }\r\n}\r\nexport default comments;\r\n"]},"metadata":{},"sourceType":"module"}