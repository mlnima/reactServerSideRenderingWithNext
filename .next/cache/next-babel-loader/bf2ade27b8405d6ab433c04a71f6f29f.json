{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './FileManagerControl.scss';\n\nconst FileManagerControl = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const onGoBackHandler = e => {\n    clearClickedItemHandler(e);\n    let path = contextData.filesData.path;\n    let splitPath = path.split('/');\n    let lastItemPlusSlash = '/' + splitPath[splitPath.length - 1];\n    let newPath = path.replace(lastItemPlusSlash, '');\n    contextData.setFilesData(_objectSpread({}, contextData.filesData, {\n      path: newPath,\n      file: ''\n    }));\n  };\n\n  const clearClickedItemHandler = e => {\n    contextData.setFilesData(_objectSpread({}, contextData.filesData, {\n      clickedItems: []\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"FileManagerControl\"\n  }, __jsx(\"button\", {\n    className: \"fas fa-arrow-left backBtn\",\n    onClick: e => onGoBackHandler(e)\n  }), __jsx(\"input\", {\n    ref: addressBar,\n    className: \"ControlFilesItem\",\n    onClick: e => clearClickedItemHandler(e)\n  }));\n};\n\nexport default FileManagerControl;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl.js"],"names":["React","useEffect","useState","useContext","useRef","FileManagerControl","props","state","setState","onGoBackHandler","e","clearClickedItemHandler","path","contextData","filesData","splitPath","split","lastItemPlusSlash","length","newPath","replace","setFilesData","file","clickedItems","addressBar"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,2BAAP;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMQ,eAAe,GAAIC,CAAD,IAAK;AACzBC,IAAAA,uBAAuB,CAACD,CAAD,CAAvB;AACA,QAAIE,IAAI,GAAGC,WAAW,CAACC,SAAZ,CAAsBF,IAAjC;AACA,QAAIG,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,iBAAiB,GAAG,MAAMF,SAAS,CAACA,SAAS,CAACG,MAAV,GAAkB,CAAnB,CAAvC;AACA,QAAIC,OAAO,GAAGP,IAAI,CAACQ,OAAL,CAAaH,iBAAb,EAA+B,EAA/B,CAAd;AACAJ,IAAAA,WAAW,CAACQ,YAAZ,mBACOR,WAAW,CAACC,SADnB;AAEIF,MAAAA,IAAI,EAACO,OAFT;AAGIG,MAAAA,IAAI,EAAC;AAHT;AAKH,GAXD;;AAaA,QAAMX,uBAAuB,GAACD,CAAC,IAAE;AAC7BG,IAAAA,WAAW,CAACQ,YAAZ,mBACOR,WAAW,CAACC,SADnB;AAEIS,MAAAA,YAAY,EAAC;AAFjB;AAIH,GALD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAGb,CAAD,IAAKD,eAAe,CAACC,CAAD;AAA3E,IADJ,EAEI;AAAO,IAAA,GAAG,EAAEc,UAAZ;AAAwB,IAAA,SAAS,EAAC,kBAAlC;AAAqD,IAAA,OAAO,EAAEd,CAAC,IAAEC,uBAAuB,CAACD,CAAD;AAAxF,IAFJ,CADJ;AAMH,CAhCD;;AAiCA,eAAeL,kBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './FileManagerControl.scss';\r\n\r\nconst FileManagerControl = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onGoBackHandler = (e)=>{\r\n        clearClickedItemHandler(e)\r\n        let path = contextData.filesData.path;\r\n        let splitPath = path.split('/');\r\n        let lastItemPlusSlash = '/' + splitPath[splitPath.length -1];\r\n        let newPath = path.replace(lastItemPlusSlash,'');\r\n        contextData.setFilesData({\r\n            ...contextData.filesData,\r\n            path:newPath,\r\n            file:''\r\n        })\r\n    };\r\n\r\n    const clearClickedItemHandler=e=>{\r\n        contextData.setFilesData({\r\n            ...contextData.filesData,\r\n            clickedItems:[]\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='FileManagerControl'>\r\n            <button className=\"fas fa-arrow-left backBtn\" onClick={(e)=>onGoBackHandler(e)}/>\r\n            <input ref={addressBar} className=\"ControlFilesItem\" onClick={e=>clearClickedItemHandler(e)}/>\r\n        </div>\r\n    );\r\n};\r\nexport default FileManagerControl;\r\n"]},"metadata":{},"sourceType":"module"}