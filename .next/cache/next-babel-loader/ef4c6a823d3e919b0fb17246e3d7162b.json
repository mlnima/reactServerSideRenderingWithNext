{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport Link from 'next/link';\n\nconst FilterStatusBtn = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    buttons: ['all', 'published', 'draft', 'trash', 'pending']\n  });\n  useEffect(() => {}, []);\n\n  const onClickHandler = e => {\n    let status = e.target.name;\n    contextData.dispatchAdminPostsData(adminPostsData => _objectSpread({}, adminPostsData, {\n      status,\n      pageNo: 1,\n      author: 'all'\n    }));\n  };\n\n  let clickOnMineHandler = () => {// contextData.setPostsData({\n    //     ...contextData.postsData,\n    //     author:contextData.adminData._id\n    // })\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterStatusBtn\"\n  }, __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        status: 'all'\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"All\")), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        status: 'draft'\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"Draft\")), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        status: 'published'\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"Published\")), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        status: 'trash'\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"Trash\")));\n};\n\nexport default FilterStatusBtn;","map":null,"metadata":{},"sourceType":"module"}