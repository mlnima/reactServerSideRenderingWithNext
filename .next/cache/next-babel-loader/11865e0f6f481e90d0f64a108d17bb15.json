{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\nimport VideoPlayer from \"../../components/includes/Post/VideoPlayer/VideoPlayer\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport withRouter from \"next/dist/client/with-router\";\nimport Head from \"next/head\";\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from \"../../_variables/ajaxVariables\";\nimport { AppContext } from \"../../context/AppContext\";\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { Sidebar } from '../../components/includes/Sidebar/Sidebar';\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom';\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer';\nimport Footer from '../../components/includes/Footer/Footer';\nimport { getAbsolutePath } from '../../_variables/_variables';\n\nvar Post = function Post(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.identity.postPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n\n  var RenderMeta = function RenderMeta() {\n    if (props.post.title) {\n      return __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n        name: \"description\",\n        content: props.post.description\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: [].concat(_toConsumableArray(props.post.tags), _toConsumableArray(props.post.categories), _toConsumableArray(props.post.actors))\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: props.post.title\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: props.post.videoEmbedCode\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: props.post.mainThumbnail\n      }));\n    } else return null;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(RenderMeta, null), __jsx(\"div\", {\n    className: props.identity.data.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar'\n  }, __jsx(\"div\", {\n    style: state.style,\n    className: \"main\"\n  }, __jsx(VideoPlayer, props.post), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories,\n    id: props.post._id,\n    likes: props.post.likes,\n    disLikes: props.post.disLikes,\n    views: props.post.views,\n    videoEmbedCode: props.post.videoEmbedCode\n  }), __jsx(CommentsRenderer, {\n    comments: props.comments\n  }), __jsx(CommentFrom, {\n    documentId: props.post._id\n  })), __jsx(Sidebar, {\n    key: \"postPageSidebar\",\n    isActive: props.identity.data.postPageSidebar,\n    widgets: props.widgets,\n    position: \"postPageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nPost.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, domainName, postBody, post, widgets, settings, comments, postData, widgetsData, settingsData, commentsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          postBody = {\n            postTitle: query.postTitle\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getPost(postBody, true, domainName));\n\n        case 12:\n          postData = _context.sent;\n          post = postData.data.post;\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(getMultipleWidgetWithData({\n            widgets: ['postPageSidebar', 'footer', 'header']\n          }, true, domainName));\n\n        case 16:\n          widgetsData = _context.sent;\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(getMultipleSetting({\n            settings: ['identity', 'navigation', 'design']\n          }, true, domainName));\n\n        case 19:\n          settingsData = _context.sent;\n\n          if (!post) {\n            res.writeHead(404);\n            res.end();\n          }\n\n          if (!post) {\n            _context.next = 27;\n            break;\n          }\n\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(getComments({\n            onDocument: post._id\n          }, true, domainName));\n\n        case 24:\n          _context.t1 = _context.sent;\n          _context.next = 28;\n          break;\n\n        case 27:\n          _context.t1 = [];\n\n        case 28:\n          commentsData = _context.t1;\n          settings = settingsData.data.settings ? settingsData.data.settings : [];\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          comments = commentsData.data.comments ? commentsData.data.comments : [];\n          return _context.abrupt(\"return\", _objectSpread({\n            post: post,\n            query: query,\n            widgets: widgets,\n            comments: comments\n          }, settings));\n\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getComments","getPost","VideoPlayer","PostInfo","withRouter","Head","getSetting","getWidgetsWithData","getMultipleWidgetWithData","getMultipleSetting","AppContext","SiteSettingSetter","Sidebar","CommentFrom","CommentsRenderer","Footer","getAbsolutePath","Post","props","contextData","style","state","setState","identity","postPageSidebar","gridArea","RenderMeta","post","title","description","tags","categories","actors","postType","videoEmbedCode","mainThumbnail","data","_id","likes","disLikes","views","comments","widgets","getInitialProps","pathname","query","req","res","err","domainName","postBody","postTitle","postData","widgetsData","settings","settingsData","writeHead","end","onDocument","commentsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport VideoPlayer from \"../../components/includes/Post/VideoPlayer/VideoPlayer\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport Head from \"next/head\";\r\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from \"../../_variables/ajaxVariables\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport {Sidebar} from '../../components/includes/Sidebar/Sidebar'\r\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom'\r\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer'\r\nimport Footer from '../../components/includes/Footer/Footer'\r\nimport { getAbsolutePath } from '../../_variables/_variables'\r\n\r\nconst Post = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.identity.postPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n    const RenderMeta = () => {\r\n        if (props.post.title) {\r\n            return (\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories, ...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/ }\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <RenderMeta/>\r\n                <div className={ props.identity.data.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar' }>\r\n\r\n                    <div style={ state.style } className=\"main\">\r\n\r\n                        <VideoPlayer {...props.post}/>\r\n\r\n                        <PostInfo\r\n                            title={ props.post.title }\r\n                            description={ props.post.description }\r\n                            tags={ props.post.tags }\r\n                            actors={ props.post.actors }\r\n                            categories={ props.post.categories }\r\n                            id={ props.post._id }\r\n                            likes={ props.post.likes }\r\n                            disLikes={ props.post.disLikes }\r\n                            views={ props.post.views }\r\n                            videoEmbedCode={ props.post.videoEmbedCode }\r\n                        />\r\n                        <CommentsRenderer comments={ props.comments }/>\r\n                        <CommentFrom documentId={ props.post._id }/>\r\n\r\n                    </div>\r\n\r\n                    <Sidebar key='postPageSidebar' isActive={ props.identity.data.postPageSidebar } widgets={ props.widgets } position='postPageSidebar'/>\r\n                </div>\r\n                <Footer widgets={ props.widgets } position='footer'/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    const postBody = {\r\n        postTitle: query.postTitle,\r\n    };\r\n\r\n    let post;\r\n    let widgets;\r\n    let settings;\r\n    let comments;\r\n\r\n    // const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\r\n    const postData = await getPost(postBody,true,domainName)\r\n    post = postData.data.post\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'postPageSidebar', 'footer','header' ] }, true,domainName)\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true,domainName)\r\nif(!post){\r\n    res.writeHead(404)\r\n    res.end()\r\n}\r\n\r\n\r\n\r\n    const commentsData =  post ? await getComments({ onDocument: post._id },true,domainName):[]\r\n\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    comments = commentsData.data.comments ? commentsData.data.comments : []\r\n\r\n\r\n\r\n    return { post, query, widgets, comments, ...settings }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}