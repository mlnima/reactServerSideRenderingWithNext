{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './Videos.scss';\nimport { AppContext } from \"../../../context/AppContext\";\nimport VideoElement from \"../VideoElement/VideoElement\";\nimport Pagination from \"../Pagination/Pagination\";\nimport withRouter from \"next/dist/client/with-router\";\n\nconst Videos = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: postsData,\n    1: setPostsData\n  } = useState({\n    pageNo: 1,\n    size: 12,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'all',\n    author: 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    checkedPosts: []\n  });\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    contextData.functions.getPosts(postsData).then(res => {\n      setPosts(res.data.posts);\n      setPostsData(_objectSpread({}, postsData, {\n        totalPosts: res.data.totalCount\n      }));\n    });\n  }, []);\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  const renderPosts = posts.map(post => {\n    return __jsx(VideoElement, {\n      key: post._id,\n      state: post\n    });\n  });\n  return __jsx(\"div\", {\n    className: \"Videos\"\n  }, __jsx(\"div\", {\n    className: \"videoContent\"\n  }, renderPosts), __jsx(Pagination, _extends({}, props, {\n    postsData: postsData,\n    setPostsData: setPostsData\n  })));\n};\n\nVideos.getInitialProps = (_ref) => {\n  let {\n    req,\n    res,\n    match,\n    history,\n    location\n  } = _ref,\n      ctx = _objectWithoutProperties(_ref, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n\n  const contextData = useContext(AppContext);\n  let test = 1233;\n  console.log(123);\n  return {\n    test\n  };\n};\n\nexport default withRouter(Videos);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Videos/Videos.js"],"names":["React","useEffect","useState","useContext","AppContext","VideoElement","Pagination","withRouter","Videos","props","contextData","postsData","setPostsData","pageNo","size","totalPosts","postType","keyword","status","author","fields","checkedPosts","posts","setPosts","functions","getPosts","then","res","data","totalCount","console","log","renderPosts","map","post","_id","getInitialProps","req","match","history","location","ctx","test"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAMC,WAAW,GAAGP,UAAU,CAACC,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEO,SAAF;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC;AACzCW,IAAAA,MAAM,EAAE,CADiC;AAEzCC,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,UAAU,EAAE,CAH6B;AAIzCC,IAAAA,QAAQ,EAAE,KAJ+B;AAKzCC,IAAAA,OAAO,EAAE,EALgC;AAMzCC,IAAAA,MAAM,EAAE,KANiC;AAOzCC,IAAAA,MAAM,EAAE,KAPiC;AAQzCC,IAAAA,MAAM,EAAE,CAAE,OAAF,EAAW,eAAX,EAA4B,SAA5B,EAAuC,OAAvC,EAAgD,UAAhD,EAA4D,OAA5D,EAAqE,UAArE,CARiC;AASzCC,IAAAA,YAAY,EAAE;AAT2B,GAAD,CAA5C;AAWA,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAACc,SAAZ,CAAsBC,QAAtB,CAA+Bd,SAA/B,EAA0Ce,IAA1C,CAA+CC,GAAG,IAAI;AAElDJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASN,KAAV,CAAR;AACAV,MAAAA,YAAY,mBACLD,SADK;AAERI,QAAAA,UAAU,EAAEY,GAAG,CAACC,IAAJ,CAASC;AAFb,SAAZ;AAIH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA5B,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT;AAGA,QAAMuB,WAAW,GAAGV,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAClC,WACI,MAAC,YAAD;AAAc,MAAA,GAAG,EAAGA,IAAI,CAACC,GAAzB;AAA+B,MAAA,KAAK,EAAGD;AAAvC,MADJ;AAGH,GAJmB,CAApB;AAMA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACMF,WADN,CADJ,EAII,MAAC,UAAD,eAAiBvB,KAAjB;AAAyB,IAAA,SAAS,EAAGE,SAArC;AAAiD,IAAA,YAAY,EAAGC;AAAhE,KAJJ,CADJ;AAQH,CA1CD;;AA4CAJ,MAAM,CAAC4B,eAAP,GAA0B,UAAoD;AAAA,MAAnD;AAAEC,IAAAA,GAAF;AAAOV,IAAAA,GAAP;AAAYW,IAAAA,KAAZ;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAAmD;AAAA,MAAVC,GAAU;;AAC1E,QAAM/B,WAAW,GAAGP,UAAU,CAACC,UAAD,CAA9B;AACA,MAAIsC,IAAI,GAAE,IAAV;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,SAAO;AAAEW,IAAAA;AAAF,GAAP;AACH,CALD;;AAMA,eAAenC,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './Videos.scss';\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport VideoElement from \"../VideoElement/VideoElement\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\n\r\nconst Videos = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ postsData, setPostsData ] = useState({\r\n        pageNo: 1,\r\n        size: 12,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [ posts, setPosts ] = useState([]);\r\n    useEffect(() => {\r\n        contextData.functions.getPosts(postsData).then(res => {\r\n\r\n            setPosts(res.data.posts)\r\n            setPostsData({\r\n                ...postsData,\r\n                totalPosts: res.data.totalCount\r\n            })\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n    const renderPosts = posts.map(post => {\r\n        return (\r\n            <VideoElement key={ post._id } state={ post }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='Videos'>\r\n            <div className='videoContent'>\r\n                { renderPosts }\r\n            </div>\r\n            <Pagination { ...props } postsData={ postsData } setPostsData={ setPostsData }/>\r\n        </div>\r\n    );\r\n};\r\n\r\nVideos.getInitialProps =  ({ req, res, match, history, location, ...ctx }) => {\r\n    const contextData = useContext(AppContext);\r\n    let test= 1233\r\n    console.log(123 )\r\n    return { test  }\r\n};\r\nexport default withRouter(Videos);"]},"metadata":{},"sourceType":"module"}