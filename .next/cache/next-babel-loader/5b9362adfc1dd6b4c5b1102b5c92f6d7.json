{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport withRouter from \"next/dist/client/with-router\";\nimport axios from 'axios';\nimport { getAbsolutePath } from '../../_variables/_variables';\nimport { getMultipleSetting, getMultipleWidgetWithData } from '../../_variables/ajaxVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\n\nconst Register = props => {\n  const messageLabel = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    username: undefined,\n    email: undefined,\n    password: undefined,\n    password2: undefined\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    response: undefined,\n    type: undefined\n  });\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('/api/v1/users/register', state).then(res => {\n      if (type === 'success') {\n        messageLabel.current.style.backgroundColor = 'green';\n      } else {\n        messageLabel.current.style.backgroundColor = 'red';\n      }\n\n      setData(_objectSpread({}, data, {\n        response: res.data.response,\n        type: res.data.type\n      }));\n    }).catch(err => console.log(err));\n  };\n\n  return __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"Register authPage\"\n  }, __jsx(\"form\", {\n    className: \"authForm\",\n    onSubmit: e => onSubmitHandler(e)\n  }, __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"username\"), __jsx(\"input\", {\n    name: \"username\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"email\"), __jsx(\"input\", {\n    name: \"email\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"password\"), __jsx(\"input\", {\n    name: \"password\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"repeat password\"), __jsx(\"input\", {\n    name: \"password2\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"submitBtn\"\n  }, \"Register\"))));\n};\n\nRegister.getInitialProps = async ({\n  req\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let settings;\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  let widgets;\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['header']\n  }, true, domainName);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  return _objectSpread({}, settings, {\n    widgets\n  });\n};\n\nexport default withRouter(Register);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/auth/register.js"],"names":["React","useState","useRef","AppLayout","withRouter","axios","getAbsolutePath","getMultipleSetting","getMultipleWidgetWithData","SiteSettingSetter","Register","props","messageLabel","state","setState","username","undefined","email","password","password2","data","setData","response","type","onChangeHandler","e","target","name","value","onSubmitHandler","preventDefault","post","then","res","current","style","backgroundColor","catch","err","console","log","getInitialProps","req","domainName","settings","settingsData","widgets","widgetsData"],"mappings":"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","sourcesContent":["import React, { useState,useRef } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport axios from 'axios'\r\nimport { getAbsolutePath } from '../../_variables/_variables'\r\nimport { getMultipleSetting, getMultipleWidgetWithData } from '../../_variables/ajaxVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n\r\nconst Register = props => {\r\n    const messageLabel = useRef(null);\r\n    const [ state, setState ] = useState({\r\n        username: undefined,\r\n        email: undefined,\r\n        password: undefined,\r\n        password2: undefined\r\n    });\r\n    const [ data, setData ] = useState({\r\n        response:undefined,\r\n        type:undefined,\r\n    });\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        axios.post('/api/v1/users/register',state).then(res=>{\r\n            if (type === 'success'){\r\n                messageLabel.current.style.backgroundColor = 'green'\r\n            }else {\r\n                messageLabel.current.style.backgroundColor = 'red'\r\n            }\r\n\r\n            setData({\r\n                ...data,\r\n                response:res.data.response,\r\n                type:res.data.type,\r\n            })\r\n        }).catch(err=>console.log( err))\r\n    };\r\n\r\n    return (\r\n        <AppLayout>\r\n            <SiteSettingSetter { ...props }/>\r\n            <div className='Register authPage'>\r\n                <form className='authForm' onSubmit={e=>onSubmitHandler(e)}>\r\n                    <div className=\"authFormItem\">\r\n                        <p>username</p>\r\n                        <input name='username' onChange={ e => onChangeHandler(e) }/>\r\n                    </div>\r\n                    <div className=\"authFormItem\">\r\n                        <p>email</p>\r\n                        <input name='email' onChange={ e => onChangeHandler(e) }/>\r\n                    </div>\r\n                    <div className=\"authFormItem\">\r\n                        <p>password</p>\r\n                        <input name='password' onChange={ e => onChangeHandler(e) }/>\r\n                    </div>\r\n                    <div className=\"authFormItem\">\r\n                        <p>repeat password</p>\r\n                        <input name='password2' onChange={ e => onChangeHandler(e) }/>\r\n                    </div>\r\n                    <button type='submit' className='submitBtn'>Register</button>\r\n                </form>\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nRegister.getInitialProps = async ({ req }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n    let widgets;\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'header' ] }, true, domainName)\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    return { ...settings ,widgets}\r\n}\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}