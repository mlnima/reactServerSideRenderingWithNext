{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport './IsInSlideShow.scss';\n\nvar IsInSlideShow = function IsInSlideShow(props) {\n  var _useState = useState({\n    isChecked: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    setState(_objectSpread({}, state, {\n      isChecked: props.postData.inSlideShow || false\n    }));\n  }, [props.postData.inSlideShow]);\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(Switch, {\n    name: \"inSlideShow\",\n    onChange: function onChange(e) {\n      return props.onChangeHandler(e);\n    },\n    checked: state.isChecked\n  })));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","IsInSlideShow","props","isChecked","state","setState","postData","inSlideShow","e","onChangeHandler"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,kBACCJ,QAAQ,CAAC;AACjCK,IAAAA,SAAS,EAAE;AADsB,GAAD,CADT;AAAA,MACnBC,KADmB;AAAA,MACZC,QADY;;AAK3BR,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,mBACDD,KADC;AAEJD,MAAAA,SAAS,EAAGD,KAAK,CAACI,QAAN,CAAeC,WAAf,IAA8B;AAFtC,OAAR;AAIH,GALQ,EAKN,CAACL,KAAK,CAACI,QAAN,CAAeC,WAAhB,CALM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,QAAQ,EAAG,kBAAAC,CAAC;AAAA,aAEnCN,KAAK,CAACO,eAAN,CAAsBD,CAAtB,CAFmC;AAAA,KAAvC;AAGA,IAAA,OAAO,EAAGJ,KAAK,CAACD;AAHhB,IADJ,CAJJ,CADJ;AAaH,CAxBD;;AAyBA,eAAeF,aAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport './IsInSlideShow.scss';\r\n\r\nconst IsInSlideShow = props => {\r\n    const [ state, setState ] = useState({\r\n        isChecked: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            isChecked:  props.postData.inSlideShow || false\r\n        })\r\n    }, [props.postData.inSlideShow]);\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <Switch name='inSlideShow' onChange={ e =>\r\n\r\n                    props.onChangeHandler(e)\r\n              } checked={ state.isChecked }/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}