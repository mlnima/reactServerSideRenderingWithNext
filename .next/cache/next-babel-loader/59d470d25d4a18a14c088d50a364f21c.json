{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from 'react-fontawesome';\nimport Link from 'next/link';\nimport withRouter from 'next/dist/client/with-router';\n\nconst FilterPagination = props => {\n  const contextData = useContext(AppContext);\n  let currentPageInput = useRef(null);\n  let size = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    targetPage: 1\n  }); // const [ state, setState ] = useState({\n  //     totalPosts: 0,\n  //     perPage: 0,\n  //     totalPage: 0,\n  //     currentPage: 1\n  // });\n  // useEffect(()=>{\n  //     currentPageInput.current.value = contextData.postsData.pageNo\n  //     size.current.value = contextData.postsData.size\n  // },[contextData.postsData.pageNo]);\n\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      targetPage: props.getPostsData.pageNo\n    }));\n  }, [props]); // let nextPage = () => {\n  //\n  //     const nextPage = contextData.adminPostsData.pageNo + 1;\n  //     contextData.dispatchAdminPostsData({\n  //         ...contextData.adminPostsData,\n  //         pageNo: nextPage\n  //     })\n  //\n  //\n  // };\n  //\n  // let previousPage = () => {\n  //     if ((contextData.adminPostsData.pageNo - 1) <= 0) {\n  //         contextData.dispatchAdminPostsData({\n  //             ...contextData.adminPostsData,\n  //             pageNo: 1\n  //         })\n  //     } else {\n  //         contextData.dispatchAdminPostsData({\n  //             ...contextData.adminPostsData,\n  //             pageNo: contextData.adminPostsData.pageNo - 1\n  //         })\n  //     }\n  //\n  // };\n  //\n  // let lastPage = () => {\n  //     const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size)\n  //     contextData.dispatchAdminPostsData({\n  //         ...contextData.adminPostsData,\n  //         pageNo: lastPage\n  //     })\n  // };\n  //\n  // let firstPage = () => {\n  //     contextData.dispatchAdminPostsData({\n  //         ...contextData.adminPostsData,\n  //         pageNo: 1\n  //     })\n  // };\n  //\n  // let changePageNoManually = () => {\n  //     if (currentPageInput.current.value <= 0) {\n  //         contextData.dispatchAdminPostsData({\n  //             ...contextData.adminPostsData,\n  //             pageNo: 1\n  //         });\n  //         currentPageInput.current.value = 1\n  //     } else {\n  //         contextData.dispatchAdminPostsData({\n  //             ...contextData.adminPostsData,\n  //             pageNo: currentPageInput.current.value\n  //         })\n  //     }\n  // };\n  //\n  // let changeSizeHandler = () => {\n  //     contextData.dispatchAdminPostsData({\n  //         ...contextData.adminPostsData,\n  //         size: parseInt(size.current.value)\n  //     })\n  // }\n\n  useEffect(() => {\n    if (currentPageInput.current) {\n      console.log(currentPageInput.current.value);\n    }\n  }, [currentPageInput.current]);\n  return __jsx(\"div\", {\n    className: \"FilterPagination\"\n  }, __jsx(\"div\", {\n    className: \"pagesNavigation\"\n  }, __jsx(\"label\", {\n    className: \"totalPosts\"\n  }, props.postsSource.totalCount, \" items\"), __jsx(Link, {\n    key: \"...1\",\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-left\"\n  }))), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: props.getPostsData.pageNo + -1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-left\"\n  }))), __jsx(\"div\", null, __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    value: state.targetPage,\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: currentPageInput.current ? parseInt(currentPageInput.current.value) : 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, \"GO\"))), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: props.getPostsData.pageNo + 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-right\"\n  }))), __jsx(Link, {\n    key: `...${Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))}`,\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-right\"\n  })))));\n};\n\nFilterPagination.getInitialProps = ctx => {\n  return {\n    ctx\n  };\n};\n\nexport default withRouter(FilterPagination);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterPagination.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FA","Link","withRouter","FilterPagination","props","contextData","currentPageInput","size","state","setState","targetPage","getPostsData","pageNo","current","console","log","value","postsSource","totalCount","pathname","router","query","page","parseInt","Math","ceil","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport FA from 'react-fontawesome';\r\nimport Link from 'next/link'\r\nimport withRouter from 'next/dist/client/with-router'\r\nconst FilterPagination = props => {\r\n    const contextData = useContext(AppContext);\r\n    let currentPageInput = useRef(null);\r\n    let size = useRef(null);\r\n\r\n    const [state,setState] = useState({\r\n        targetPage:1\r\n    })\r\n\r\n    // const [ state, setState ] = useState({\r\n    //     totalPosts: 0,\r\n    //     perPage: 0,\r\n    //     totalPage: 0,\r\n    //     currentPage: 1\r\n    // });\r\n    // useEffect(()=>{\r\n    //     currentPageInput.current.value = contextData.postsData.pageNo\r\n    //     size.current.value = contextData.postsData.size\r\n    // },[contextData.postsData.pageNo]);\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            targetPage: props.getPostsData.pageNo\r\n        })\r\n    }, [props]);\r\n\r\n\r\n    // let nextPage = () => {\r\n    //\r\n    //     const nextPage = contextData.adminPostsData.pageNo + 1;\r\n    //     contextData.dispatchAdminPostsData({\r\n    //         ...contextData.adminPostsData,\r\n    //         pageNo: nextPage\r\n    //     })\r\n    //\r\n    //\r\n    // };\r\n    //\r\n    // let previousPage = () => {\r\n    //     if ((contextData.adminPostsData.pageNo - 1) <= 0) {\r\n    //         contextData.dispatchAdminPostsData({\r\n    //             ...contextData.adminPostsData,\r\n    //             pageNo: 1\r\n    //         })\r\n    //     } else {\r\n    //         contextData.dispatchAdminPostsData({\r\n    //             ...contextData.adminPostsData,\r\n    //             pageNo: contextData.adminPostsData.pageNo - 1\r\n    //         })\r\n    //     }\r\n    //\r\n    // };\r\n    //\r\n    // let lastPage = () => {\r\n    //     const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size)\r\n    //     contextData.dispatchAdminPostsData({\r\n    //         ...contextData.adminPostsData,\r\n    //         pageNo: lastPage\r\n    //     })\r\n    // };\r\n    //\r\n    // let firstPage = () => {\r\n    //     contextData.dispatchAdminPostsData({\r\n    //         ...contextData.adminPostsData,\r\n    //         pageNo: 1\r\n    //     })\r\n    // };\r\n    //\r\n    // let changePageNoManually = () => {\r\n    //     if (currentPageInput.current.value <= 0) {\r\n    //         contextData.dispatchAdminPostsData({\r\n    //             ...contextData.adminPostsData,\r\n    //             pageNo: 1\r\n    //         });\r\n    //         currentPageInput.current.value = 1\r\n    //     } else {\r\n    //         contextData.dispatchAdminPostsData({\r\n    //             ...contextData.adminPostsData,\r\n    //             pageNo: currentPageInput.current.value\r\n    //         })\r\n    //     }\r\n    // };\r\n    //\r\n    // let changeSizeHandler = () => {\r\n    //     contextData.dispatchAdminPostsData({\r\n    //         ...contextData.adminPostsData,\r\n    //         size: parseInt(size.current.value)\r\n    //     })\r\n    // }\r\n\r\n\r\nuseEffect(()=>{\r\n    if (currentPageInput.current){\r\n        console.log(currentPageInput.current.value )\r\n    }\r\n},[ currentPageInput.current]);\r\n\r\n\r\n    return (\r\n        <div className='FilterPagination'>\r\n            {/*<div className='pagesNavigation'>*/}\r\n            {/*    <label className='totalPosts'>{ contextData.adminPostsData.totalPosts } items</label>*/}\r\n            {/*    <button onClick={ () => firstPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-left\"/></button>*/}\r\n            {/*    <button onClick={ () => previousPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-left\"/></button>*/}\r\n            {/*    <input className='pageNumberInput' placeholder={ contextData.adminPostsData.pageNo}  ref={ currentPageInput } type='number' min={ 0 }/>*/}\r\n            {/*    <button onClick={ () => nextPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-right\"/></button>*/}\r\n            {/*    <button onClick={ () => lastPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-right\"/></button>*/}\r\n            {/*</div>*/}\r\n            <div className='pagesNavigation'>\r\n                <label className='totalPosts'>{ props.postsSource.totalCount } items</label>\r\n                <Link key='...1' href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-left\"/></a></Link>\r\n\r\n\r\n                <Link href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:props.getPostsData.pageNo +-1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-left\"/></a></Link>\r\n\r\n\r\n                <div >\r\n                    <input className='pageNumberInput' value={ state.targetPage}  ref={ currentPageInput } type='number' min={ 0 }/>\r\n                    <Link href={{\r\n                        pathname:props.pathname || props.router.pathname,query:{...props.query,page:currentPageInput.current?parseInt(currentPageInput.current.value):1}\r\n                    }}><a className='actionBtn'>GO</a></Link>\r\n                </div>\r\n\r\n\r\n\r\n                <Link href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:props.getPostsData.pageNo +1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-right\"/></a></Link>\r\n\r\n\r\n                <Link key={`...${Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))}`} href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-right\"/></a></Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterPagination.getInitialProps = (ctx) => {\r\n    return { ctx }\r\n};\r\nexport default withRouter(FilterPagination);"]},"metadata":{},"sourceType":"module"}