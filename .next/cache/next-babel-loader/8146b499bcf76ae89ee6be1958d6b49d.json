{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\n\nvar VideoPlayer = function VideoPlayer(props) {\n  useEffect(function () {\n    console.log(props);\n  }, [props]); //\"video/mp4\"\n\n  var WhatToRender = function WhatToRender() {\n    if (props.videoUrl) {\n      return __jsx(React.Fragment, null, __jsx(\"video\", null, __jsx(\"source\", {\n        src: props.videoUrl\n      })));\n    } else if (!props.videoUrl && props.iframeCode) {\n      return __jsx(\"iframe\", {\n        src: props.iframeCode,\n        frameBorder: \"0\",\n        width: \"640\",\n        height: \"360\",\n        scrolling: \"no\"\n      });\n    } else return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"video-player\"\n  }, __jsx(\"meta\", {\n    itemProp: \"name\",\n    content: props.title\n  }), __jsx(\"meta\", {\n    itemProp: \"description\",\n    content: props.description\n  }), __jsx(\"meta\", {\n    itemProp: \"duration\",\n    content: props.duration\n  }), __jsx(\"meta\", {\n    itemProp: \"thumbnailUrl\",\n    content: props.thumbnailUrl\n  }), __jsx(\"meta\", {\n    itemProp: \"embedURL\",\n    content: props.embedURL\n  }), __jsx(\"meta\", {\n    itemProp: \"uploadDate\",\n    content: props.uploadDate\n  }), __jsx(\"div\", {\n    className: \"responsive-player\"\n  }, __jsx(\"iframe\", {\n    src: props.videoEmbedCode,\n    frameBorder: \"0\",\n    width: \"640\",\n    height: \"360\",\n    scrolling: \"no\"\n  })));\n};\n\nexport default VideoPlayer;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/VideoPlayer/VideoPlayer.js"],"names":["React","useEffect","useState","useContext","VideoPlayer","props","console","log","WhatToRender","videoUrl","iframeCode","title","description","duration","thumbnailUrl","embedURL","uploadDate","videoEmbedCode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AACzBJ,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT,CADyB,CAI7B;;AACI,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,QAAKH,KAAK,CAACI,QAAX,EAAqB;AACjB,aACI,4BACI,qBACI;AAAQ,QAAA,GAAG,EAAGJ,KAAK,CAACI;AAApB,QADJ,CADJ,CADJ;AAOH,KARD,MAQO,IAAI,CAACJ,KAAK,CAACI,QAAP,IAAmBJ,KAAK,CAACK,UAA7B,EAAyC;AAC5C,aACI;AAAQ,QAAA,GAAG,EAAGL,KAAK,CAACK,UAApB;AAAiC,QAAA,WAAW,EAAC,GAA7C;AAAiD,QAAA,KAAK,EAAC,KAAvD;AAA6D,QAAA,MAAM,EAAC,KAApE;AAA0E,QAAA,SAAS,EAAC;AAApF,QADJ;AAGH,KAJM,MAIA,OAAO,IAAP;AACV,GAfD;;AAkBI,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAGL,KAAK,CAACM;AAAtC,IADJ,EAEI;AAAM,IAAA,QAAQ,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAGN,KAAK,CAACO;AAA7C,IAFJ,EAGI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAGP,KAAK,CAACQ;AAA1C,IAHJ,EAII;AAAM,IAAA,QAAQ,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAGR,KAAK,CAACS;AAA9C,IAJJ,EAKI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAGT,KAAK,CAACU;AAA1C,IALJ,EAMI;AAAM,IAAA,QAAQ,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAGV,KAAK,CAACW;AAA5C,IANJ,EAOI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI;AAAQ,IAAA,GAAG,EAAGX,KAAK,CAACY,cAApB;AAAqC,IAAA,WAAW,EAAC,GAAjD;AAAqD,IAAA,KAAK,EAAC,KAA3D;AAAiE,IAAA,MAAM,EAAC,KAAxE;AAA8E,IAAA,SAAS,EAAC;AAAxF,IAFJ,CAPJ,CADJ;AAkBP,CAzCD;;AA0CA,eAAeb,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\n\r\nconst VideoPlayer = props => {\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n//\"video/mp4\"\r\n    const WhatToRender = () => {\r\n\r\n        if ( props.videoUrl) {\r\n            return (\r\n                <>\r\n                    <video>\r\n                        <source src={ props.videoUrl }/>\r\n                    </video>\r\n                </>\r\n            )\r\n        } else if (!props.videoUrl && props.iframeCode) {\r\n            return (\r\n                <iframe src={ props.iframeCode } frameBorder=\"0\" width='640' height='360' scrolling=\"no\"/>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n  \r\n        return (\r\n            <div className='video-player'>\r\n                <meta itemProp=\"name\" content={ props.title }/>\r\n                <meta itemProp=\"description\" content={ props.description }/>\r\n                <meta itemProp=\"duration\" content={ props.duration }/>\r\n                <meta itemProp=\"thumbnailUrl\" content={ props.thumbnailUrl }/>\r\n                <meta itemProp=\"embedURL\" content={ props.embedURL }/>\r\n                <meta itemProp=\"uploadDate\" content={ props.uploadDate }/>\r\n                <div className=\"responsive-player\">\r\n                    {/*<WhatToRender/>*/}\r\n                    <iframe src={ props.videoEmbedCode } frameBorder=\"0\" width='640' height='360' scrolling=\"no\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n};\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}