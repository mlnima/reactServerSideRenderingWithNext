{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var likeValueCalculator = function likeValueCalculator(likes, dislikes) {\n  return likes > 0 && dislikes > 0 ? Math.round(likes * 100 / (likes + dislikes)) : likes === 0 && dislikes === 0 ? 0 : likes === 0 && dislikes > 0 ? 0 : likes > 0 && dislikes === 0 ? 100 : 0;\n};\nexport var getAbsolutePath = function getAbsolutePath(req) {\n  return _regeneratorRuntime.async(function getAbsolutePath$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(req.protocol);\n\n        case 2:\n          _context.t0 = _context.sent;\n          _context.t1 = _context.t0 + '://';\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(req.get('Host'));\n\n        case 6:\n          _context.t2 = _context.sent;\n          return _context.abrupt(\"return\", _context.t1 + _context.t2);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var generateAbsolutePath = function generateAbsolutePath() {\n  return window.location.protocol + '//' + window.location.host;\n};\nexport var clickPathGenerator = function clickPathGenerator(clickedItemName, pathFromContexts) {\n  if (pathFromContexts === '.') {\n    return './' + clickedItemName;\n  } else {\n    return pathFromContexts + '/' + clickedItemName;\n  }\n};\nexport var trimString = function trimString(string) {\n  return trimString();\n};\nexport var convertVariableNameToName = function convertVariableNameToName(name) {\n  name.replace(/([A-Z])/g, \" $1\");\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/_variables.js"],"names":["likeValueCalculator","likes","dislikes","Math","round","getAbsolutePath","req","protocol","get","generateAbsolutePath","window","location","host","clickPathGenerator","clickedItemName","pathFromContexts","trimString","string","convertVariableNameToName","name","replace"],"mappings":";AAAA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACpD,SAAQD,KAAK,GAAG,CAAR,IAAaC,QAAQ,GAAG,CAAzB,GAA+BC,IAAI,CAACC,KAAL,CAAYH,KAAK,GAAG,GAAT,IAAiBA,KAAK,GAAGC,QAAzB,CAAX,CAA/B,GACAD,KAAK,KAAK,CAAV,IAAeC,QAAQ,KAAK,CAA7B,GAAkC,CAAlC,GACKD,KAAK,KAAK,CAAV,IAAeC,QAAQ,GAAG,CAA3B,GAAgC,CAAhC,GACKD,KAAK,GAAG,CAAR,IAAaC,QAAQ,KAAK,CAA3B,GAAgC,GAAhC,GACI,CAJlB;AAMH,CAPM;AASP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdA,GAAG,CAACC,QADU;;AAAA;AAAA;AAAA,sCACC,KADD;AAAA;AAAA,2CACeD,GAAG,CAACE,GAAJ,CAAQ,MAAR,CADf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAIP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACtC,SAAOC,MAAM,CAACC,QAAP,CAAgBJ,QAAhB,GAA2B,IAA3B,GAAkCG,MAAM,CAACC,QAAP,CAAgBC,IAAzD;AACH,CAFM;AAIP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,eAAD,EAAiBC,gBAAjB,EAAoC;AAClE,MAAIA,gBAAgB,KAAK,GAAzB,EAA8B;AAC1B,WAAO,OAAOD,eAAd;AACH,GAFD,MAEO;AACH,WAAOC,gBAAgB,GAAG,GAAnB,GAAyBD,eAAhC;AACH;AACJ,CANM;AAQP,OAAO,IAAME,UAAU,GAAC,SAAXA,UAAW,CAACC,MAAD,EAAU;AAC9B,SAAOD,UAAU,EAAjB;AACH,CAFM;AAIP,OAAO,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD,EAAQ;AAC7CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAAb,EAAyB,KAAzB;AACH,CAFM","sourcesContent":["export const likeValueCalculator = (likes, dislikes) => {\r\n    return (likes > 0 && dislikes > 0) ? (Math.round((likes * 100) / (likes + dislikes)))\r\n        : (likes === 0 && dislikes === 0) ? 0\r\n            : (likes === 0 && dislikes > 0) ? 0\r\n                : (likes > 0 && dislikes === 0) ? 100\r\n                    : 0;\r\n\r\n}\r\n\r\nexport const getAbsolutePath = async (req) => {\r\n    return await req.protocol + '://' + await req.get('Host')\r\n}\r\n\r\nexport const generateAbsolutePath = () => {\r\n    return window.location.protocol + '//' + window.location.host\r\n}\r\n\r\nexport const clickPathGenerator = (clickedItemName,pathFromContexts)=>{\r\n    if (pathFromContexts === '.') {\r\n        return './' + clickedItemName\r\n    } else {\r\n        return pathFromContexts + '/' + clickedItemName\r\n    }\r\n};\r\n\r\nexport const trimString=(string)=>{\r\n    return trimString()\r\n}\r\n\r\nexport const convertVariableNameToName = (name)=>{\r\n    name.replace(/([A-Z])/g, \" $1\")\r\n}"]},"metadata":{},"sourceType":"module"}