{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport StarSvg from '../../../../static/images/fontawesome/star-solid.svg';\nimport TagSvg from '../../../../static/images/fontawesome/tag-solid.svg';\nimport CategorySvg from '../../../../static/images/fontawesome/folder-solid.svg';\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg';\n\nvar TagsAndCategoriesActors = function TagsAndCategoriesActors(props) {\n  var _useState = useState({\n    data: props.data || [],\n    type: props.type,\n    fontawesome: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var fontawesome = '';\n\n    switch (props.type) {\n      case 'actors':\n        fontawesome = 'star';\n        break;\n\n      case 'tags':\n        fontawesome = 'tags';\n        break;\n\n      case 'categories':\n        fontawesome = 'folder';\n        break;\n    }\n\n    setState(_objectSpread({}, state, {\n      fontawesome: fontawesome\n    }));\n  }, []); //\n  // useEffect(() => {\n  //     console.log( props)\n  //     console.log( state)\n  // }, []);\n\n  var renderData = props.data.map(function (item) {\n    var typeForUrl = state.type === 'categories' ? 'category' : state.type === 'tags' ? 'tag' : state.type === 'actors' ? 'actor' : 'tag';\n    var path = \"/posts?\".concat(typeForUrl, \"=\").concat(item);\n    var icon = state.type === 'categories' ? CategorySvg : state.type === 'tags' ? TagSvg : state.type === 'actors' ? StarSvg : TagSvg;\n    return __jsx(\"div\", {\n      key: item,\n      className: \"post-meta-item\"\n    }, __jsx(\"img\", {\n      className: \"fontawesomeSvgSmall\",\n      src: icon,\n      alt: \"\"\n    }), __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", {\n      className: state.type\n    }, item)));\n  });\n\n  if (props.data.length >= 1) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, __jsx(\"span\", null, \" \", state.type.charAt(0).toUpperCase() + state.type.substring(1), \":\"), __jsx(\"div\", {\n      className: \"content\"\n    }, renderData));\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/TagsAndCategoriesActors/TagsAndCategoriesActors.js"],"names":["React","useEffect","useState","useContext","Link","FA","StarSvg","TagSvg","CategorySvg","BarsSvg","TagsAndCategoriesActors","props","data","type","fontawesome","state","setState","renderData","map","item","typeForUrl","path","icon","length","charAt","toUpperCase","substring"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,OAAP,MAAoB,sDAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,OAAP,MAAoB,sDAApB;;AAGA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AAAA,kBACTT,QAAQ,CAAC;AACjCU,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,IAAc,EADa;AAEjCC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAFqB;AAGjCC,IAAAA,WAAW,EAAE;AAHoB,GAAD,CADC;AAAA,MAC7BC,KAD6B;AAAA,MACtBC,QADsB;;AAOrCf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIa,WAAW,GAAG,EAAlB;;AACA,YAASH,KAAK,CAACE,IAAf;AACI,WAAK,QAAL;AACIC,QAAAA,WAAW,GAAG,MAAd;AACA;;AACJ,WAAK,MAAL;AACIA,QAAAA,WAAW,GAAG,MAAd;AACA;;AACJ,WAAK,YAAL;AACIA,QAAAA,WAAW,GAAG,QAAd;AACA;AATR;;AAYAE,IAAAA,QAAQ,mBACDD,KADC;AAEJD,MAAAA,WAAW,EAAXA;AAFI,OAAR;AAIH,GAlBQ,EAkBN,EAlBM,CAAT,CAPqC,CA0BrC;AACA;AACA;AACA;AACA;;AAEA,MAAMG,UAAU,GAAGN,KAAK,CAACC,IAAN,CAAWM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACtC,QAAIC,UAAU,GAAGL,KAAK,CAACF,IAAN,KAAe,YAAf,GAA8B,UAA9B,GACXE,KAAK,CAACF,IAAN,KAAe,MAAf,GAAwB,KAAxB,GACIE,KAAK,CAACF,IAAN,KAAe,QAAf,GAA0B,OAA1B,GACI,KAHd;AAIA,QAAMQ,IAAI,oBAAcD,UAAd,cAA8BD,IAA9B,CAAV;AACA,QAAMG,IAAI,GAAGP,KAAK,CAACF,IAAN,KAAe,YAAf,GAA8BL,WAA9B,GACPO,KAAK,CAACF,IAAN,KAAe,MAAf,GAAwBN,MAAxB,GACIQ,KAAK,CAACF,IAAN,KAAe,QAAf,GAA0BP,OAA1B,GACIC,MAHd;AAIA,WACI;AAAK,MAAA,GAAG,EAAEY,IAAV;AAAgB,MAAA,SAAS,EAAC;AAA1B,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,GAAG,EAAGG,IAA3C;AAAkD,MAAA,GAAG,EAAC;AAAtD,MADJ,EAEI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAGD,IAAb;AAAoB,MAAA,GAAG,EAAGF;AAA1B,OAAiC;AAAG,MAAA,SAAS,EAAGJ,KAAK,CAACF;AAArB,OAA8BM,IAA9B,CAAjC,CAFJ,CADJ;AAMH,GAhBkB,CAAnB;;AAkBA,MAAIR,KAAK,CAACC,IAAN,CAAWW,MAAX,IAAqB,CAAzB,EAA4B;AACxB,WACI;AAAK,MAAA,SAAS,EAAGR,KAAK,CAACF,IAAN,GAAa;AAA9B,OACI,yBAASE,KAAK,CAACF,IAAN,CAAWW,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCV,KAAK,CAACF,IAAN,CAAWa,SAAX,CAAqB,CAArB,CAA9C,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACMT,UADN,CAFJ,CADJ;AAQH,GATD,MASO,OAAO,IAAP;AAEV,CA7DD;;AA8DA,eAAeP,uBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\nimport StarSvg from '../../../../static/images/fontawesome/star-solid.svg';\r\nimport TagSvg from '../../../../static/images/fontawesome/tag-solid.svg';\r\nimport CategorySvg from '../../../../static/images/fontawesome/folder-solid.svg';\r\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'\r\n\r\n\r\nconst TagsAndCategoriesActors = props => {\r\n    const [ state, setState ] = useState({\r\n        data: props.data || [],\r\n        type: props.type,\r\n        fontawesome: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        let fontawesome = '';\r\n        switch ( props.type ) {\r\n            case 'actors':\r\n                fontawesome = 'star'\r\n                break\r\n            case 'tags':\r\n                fontawesome = 'tags'\r\n                break\r\n            case 'categories':\r\n                fontawesome = 'folder'\r\n                break\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            fontawesome\r\n        })\r\n    }, []);\r\n    //\r\n    // useEffect(() => {\r\n    //     console.log( props)\r\n    //     console.log( state)\r\n    // }, []);\r\n\r\n    const renderData = props.data.map(item => {\r\n        let typeForUrl = state.type === 'categories' ? 'category'\r\n            : state.type === 'tags' ? 'tag'\r\n                : state.type === 'actors' ? 'actor'\r\n                    : 'tag'\r\n        const path = `/posts?${ typeForUrl }=${ item }`;\r\n        const icon = state.type === 'categories' ? CategorySvg\r\n            : state.type === 'tags' ? TagSvg\r\n                : state.type === 'actors' ? StarSvg\r\n                    : TagSvg\r\n        return (\r\n            <div key={item} className='post-meta-item'>\r\n                <img className='fontawesomeSvgSmall' src={ icon } alt=\"\"/>\r\n                <Link href={ path } key={ item }><a className={ state.type }>{ item }</a></Link>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if (props.data.length >= 1) {\r\n        return (\r\n            <div className={ state.type + ' tags-categories-actors' }>\r\n                <span> { state.type.charAt(0).toUpperCase() + state.type.substring(1) }:</span>\r\n                <div className=\"content\">\r\n                    { renderData }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default TagsAndCategoriesActors;"]},"metadata":{},"sourceType":"module"}