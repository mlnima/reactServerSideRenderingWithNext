{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { getPost } from '../../../_variables/ajaxPostsVariables';\nimport { getAbsolutePath } from '../../../_variables/_variables';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport TitleDescription from \"../../../components/adminIncludes/PostComponents/TitleDescription/TitleDescription\";\nimport ActionOnPost from \"../../../components/adminIncludes/PostComponents/ActionOnPost/ActionOnPost\";\nimport DropDownWidget from \"../../../components/adminIncludes/PostComponents/DropDownWidget/DropDownWidget\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport Format from \"../../../components/adminIncludes/PostComponents/Format/Format\";\nimport PostCategoriesTagsActors from \"../../../components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors\";\nimport VideoInformation from \"../../../components/adminIncludes/PostComponents/VideoInformation/VideoInformation\";\nimport withRouter from \"next/dist/client/with-router\";\n\nconst Index = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n\n  const onChangeHandler = e => {\n    // contextData.dispatchEditingPostData({\n    //     ...contextData.editingPostData,\n    //     [e.target.name]: e.target.value\n    // })\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    // contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...props.post })\n    setState(props.post);\n  }, []);\n  useEffect(() => {\n    console.log(props);\n    console.log(state);\n  }, [props, state]);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"Post\"\n  }, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(TitleDescription, {\n    postData: state,\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    component: VideoInformation,\n    title: \"Video Information\",\n    onChangeHandler: onChangeHandler\n  })), __jsx(\"div\", {\n    className: \"side\"\n  }, __jsx(DropDownWidget, {\n    postData: state,\n    component: ActionOnPost,\n    title: \"action\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    postData: state,\n    component: Format,\n    title: \"Format\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    postData: state,\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"categories\",\n    title: \"Post Category\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    postData: state,\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"tags\",\n    title: \"Post Tags\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    postData: state,\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"actors\",\n    title: \"Post Actors\",\n    onChangeHandler: onChangeHandler\n  })))));\n};\n\nIndex.getInitialProps = async ({\n  query,\n  req\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let post;\n  let postData;\n  let requestBody;\n\n  if (query.new) {\n    post = {};\n  } else if (query.postTitle || query.id) {\n    requestBody = {\n      postTitle: query.postTitle,\n      _id: query.id\n    };\n    postData = await getPost(requestBody, true, domainName);\n    post = postData.data ? postData.data.post : {};\n  }\n\n  return {\n    post,\n    query\n  };\n};\n\nexport default withRouter(Index);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/post/index.js"],"names":["React","useEffect","useState","useContext","useRef","getPost","getAbsolutePath","AdminLayout","TitleDescription","ActionOnPost","DropDownWidget","AppContext","Format","PostCategoriesTagsActors","VideoInformation","withRouter","Index","props","contextData","state","setState","onChangeHandler","e","target","name","value","post","console","log","query","new","getInitialProps","req","domainName","postData","requestBody","postTitle","id","_id","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { getPost } from '../../../_variables/ajaxPostsVariables';\r\nimport { getAbsolutePath } from '../../../_variables/_variables'\r\n\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport TitleDescription from \"../../../components/adminIncludes/PostComponents/TitleDescription/TitleDescription\";\r\nimport ActionOnPost from \"../../../components/adminIncludes/PostComponents/ActionOnPost/ActionOnPost\";\r\nimport DropDownWidget from \"../../../components/adminIncludes/PostComponents/DropDownWidget/DropDownWidget\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport Format from \"../../../components/adminIncludes/PostComponents/Format/Format\";\r\nimport PostCategoriesTagsActors from \"../../../components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors\";\r\nimport VideoInformation from \"../../../components/adminIncludes/PostComponents/VideoInformation/VideoInformation\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\n\r\nconst Index = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const [ state, setState ] = useState({})\r\n\r\n    const onChangeHandler = e => {\r\n        // contextData.dispatchEditingPostData({\r\n        //     ...contextData.editingPostData,\r\n        //     [e.target.name]: e.target.value\r\n        // })\r\n\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        // contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...props.post })\r\n        setState(props.post)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        console.log( state)\r\n    }, [props,state]);\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <div className='Post'>\r\n                    <div className=\"content\">\r\n                        <TitleDescription postData={state} onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget component={ VideoInformation } title='Video Information' onChangeHandler={ onChangeHandler }/>\r\n                    </div>\r\n\r\n                    <div className=\"side\">\r\n                        <DropDownWidget postData={state} component={ ActionOnPost } title='action' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget postData={state} component={ Format } title='Format' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget postData={state} isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='categories' title='Post Category' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget postData={state} isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='tags' title='Post Tags' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget postData={state} isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='actors' title='Post Actors' onChangeHandler={ onChangeHandler }/>\r\n                    </div>\r\n\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async ({ query, req }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : '';\r\n    let post;\r\n    let postData\r\n    let requestBody;\r\n\r\n    if (query.new) {\r\n        post = {}\r\n    } else if (query.postTitle || query.id) {\r\n        requestBody = {\r\n            postTitle: query.postTitle,\r\n            _id: query.id,\r\n        };\r\n        postData = await getPost(requestBody, true, domainName)\r\n        post = postData.data ? postData.data.post : {}\r\n    }\r\n\r\n    return { post, query }\r\n};\r\nexport default withRouter(Index);"]},"metadata":{},"sourceType":"module"}