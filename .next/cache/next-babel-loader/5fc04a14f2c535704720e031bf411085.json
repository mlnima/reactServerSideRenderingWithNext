{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport './IsInSlideShow.scss';\nimport { AppContext } from \"../../../../../context/AppContext\";\n\nconst IsInSlideShow = props => {\n  const contextData = useContext(AppContext); // const [state, setState] = useState({\n  //     isChecked : false\n  // });\n\n  const onChangeHandler = e => {\n    contextData.dispatchEditingPostData(postData => _objectSpread({}, postData, {\n      inSlideShow: e\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(Switch, {\n    onChange: e => onChangeHandler(e),\n    checked: !!contextData.editingPostData.inSlideShow\n  })));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","AppContext","IsInSlideShow","props","contextData","onChangeHandler","e","dispatchEditingPostData","postData","inSlideShow","editingPostData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B,CAD2B,CAE3B;AACA;AACA;;AAIA,QAAMI,eAAe,GAAIC,CAAD,IAAK;AACzBF,IAAAA,WAAW,CAACG,uBAAZ,CAAoCC,QAAQ,sBACrCA,QADqC;AAExCC,MAAAA,WAAW,EAACH;AAF4B,MAA5C;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,CAAC,IAAED,eAAe,CAACC,CAAD,CAApC;AAAyC,IAAA,OAAO,EAAE,CAAC,CAACF,WAAW,CAACM,eAAZ,CAA4BD;AAAhF,IADJ,CAJJ,CADJ;AAUH,CAzBD;;AA0BA,eAAeP,aAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport Switch from \"react-switch\";\r\nimport './IsInSlideShow.scss';\r\nimport { AppContext } from \"../../../../../context/AppContext\";\r\n\r\n\r\nconst IsInSlideShow = props => {\r\n    const contextData = useContext(AppContext);\r\n    // const [state, setState] = useState({\r\n    //     isChecked : false\r\n    // });\r\n\r\n\r\n\r\n    const onChangeHandler = (e)=>{\r\n        contextData.dispatchEditingPostData(postData=>({\r\n            ...postData,\r\n            inSlideShow:e\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <Switch onChange={e=>onChangeHandler(e)} checked={!!contextData.editingPostData.inSlideShow} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}