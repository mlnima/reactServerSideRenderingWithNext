{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport { getMultipleSetting } from '../_variables/ajaxVariables';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\n\nconst Error = ({\n  statusCode\n}) => {\n  return __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"p\", null, statusCode ? `An error ${statusCode} occurred on server` : 'An error occurred on client'));\n};\n\nError.getInitialProps = async ({\n  res,\n  err\n}) => {\n  let settings;\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return {\n    statusCode,\n    settings\n  };\n};\n\nexport default Error;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/_error.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","SiteSettingSetter","Error","statusCode","props","getInitialProps","res","err","settings","settingsData","domainName","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,OAAOC,iBAAP,MAA8B,8DAA9B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC9B,SACI,MAAC,SAAD,QACI,MAAC,iBAAD,EAAwBC,KAAxB,CADJ,EAEI,iBACMD,UAAU,GACL,YAAYA,UAAY,qBADnB,GAEN,6BAHV,CAFJ,CADJ;AAUH,CAXD;;AAaAD,KAAK,CAACG,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAE5C,MAAIC,QAAJ;AACA,QAAMC,YAAY,GAAG,MAAMT,kBAAkB,CAAC;AAAEQ,IAAAA,QAAQ,EAAE,CAAE,UAAF,EAAc,YAAd,EAA4B,QAA5B;AAAZ,GAAD,EAAuD,IAAvD,EAA6DE,UAA7D,CAA7C;AACAF,EAAAA,QAAQ,GAAGC,YAAY,CAACE,IAAb,CAAkBH,QAAlB,GAA6BC,YAAY,CAACE,IAAb,CAAkBH,QAA/C,GAA0D,EAArE;AACA,QAAML,UAAU,GAAGG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoBI,GAAG,GAAGA,GAAG,CAACJ,UAAP,GAAoB,GAAjE;AACA,SAAO;AAAEA,IAAAA,UAAF;AAAcK,IAAAA;AAAd,GAAP;AACH,CAPD;;AASA,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../components/layouts/AppLayout'\r\nimport { getMultipleSetting } from '../_variables/ajaxVariables'\r\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n\r\nconst Error = ({ statusCode }) => {\r\n    return (\r\n        <AppLayout>\r\n            <SiteSettingSetter { ...props }/>\r\n            <p>\r\n                { statusCode\r\n                    ? `An error ${ statusCode } occurred on server`\r\n                    : 'An error occurred on client' }\r\n            </p>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nError.getInitialProps = async ({ res, err }) => {\r\n\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    const statusCode = res ? res.statusCode : err ? err.statusCode : 404\r\n    return { statusCode, settings }\r\n}\r\n\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}