{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport _ from 'lodash';\nimport './AdminCommentItem.scss';\nimport { updateComment } from '../../../../../_variables/ajaxPostsVariables';\n\nvar AdminCommentItem = function AdminCommentItem(props) {\n  var _useState = useState({\n    hovered: false,\n    checked: false,\n    changed: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({}),\n      commentData = _useState2[0],\n      setCommentData = _useState2[1];\n\n  useEffect(function () {\n    setCommentData(props.data);\n  }, [props.data]);\n  useEffect(function () {\n    console.log(commentData);\n  }, [commentData]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setCommentData(_objectSpread({}, commentData, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSaveHandler = function onSaveHandler() {};\n\n  return __jsx(\"div\", {\n    key: props.data._id,\n    className: \"adminCommentsItem\",\n    onMouseOver: function onMouseOver() {\n      return setState(_objectSpread({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseOut: function onMouseOut() {\n      return setState(_objectSpread({}, state, {\n        hovered: false\n      }));\n    }\n  }, __jsx(\"div\", {\n    className: \"adminCommentsItemHead\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: state.checked,\n    onChange: function onChange() {\n      return state.checked ? setState(_objectSpread({}, state, {\n        checked: false\n      })) : setState(_objectSpread({}, state, {\n        checked: true\n      }));\n    }\n  }), __jsx(\"p\", null, props.data.author)), __jsx(\"div\", {\n    className: \"adminCommentsItemBody\"\n  }, __jsx(\"p\", null, props.data.postedDate), __jsx(\"p\", null, props.data.body), __jsx(\"div\", {\n    className: \"commentControl\"\n  }, __jsx(\"select\", {\n    name: \"status\",\n    value: commentData.status,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"approved\"\n  }, \"Approved\"), __jsx(\"option\", {\n    value: \"trash\"\n  }, \"Trash\"), __jsx(\"option\", {\n    value: \"spam\"\n  }, \"Spam\"), __jsx(\"option\", {\n    value: \"pending\"\n  }, \"Pending\")), __jsx(\"button\", {\n    onClick: function onClick() {\n      return updateComment({\n        _id: props.data._id,\n        update: commentData\n      });\n    }\n  }, \"Save Changes\"))));\n};\n\nexport default AdminCommentItem;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminCommentItem/AdminCommentItem.js"],"names":["React","useEffect","useState","useContext","useRef","_","updateComment","AdminCommentItem","props","hovered","checked","changed","state","setState","commentData","setCommentData","data","console","log","onChangeHandler","e","target","name","value","onSaveHandler","_id","author","postedDate","body","status","update"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport _ from 'lodash'\r\nimport './AdminCommentItem.scss'\r\nimport { updateComment } from '../../../../../_variables/ajaxPostsVariables'\r\n\r\nconst AdminCommentItem = props => {\r\n    const [ state, setState ] = useState({\r\n        hovered: false,\r\n        checked: false,\r\n        changed: false\r\n    });\r\n\r\n    const [ commentData, setCommentData ] = useState({})\r\n\r\n    useEffect(() => {\r\n        setCommentData(props.data)\r\n    }, [ props.data ]);\r\n\r\n    useEffect(() => {\r\n        console.log(commentData)\r\n    }, [ commentData ]);\r\n\r\n\r\n\r\n    const onChangeHandler = e => {\r\n        setCommentData({\r\n            ...commentData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSaveHandler = () => {\r\n\r\n    }\r\n    return (\r\n        <div key={ props.data._id } className='adminCommentsItem' onMouseOver={ () => setState({ ...state, hovered: true }) } onMouseOut={ () => setState({ ...state, hovered: false }) }>\r\n            <div className=\"adminCommentsItemHead\">\r\n                <input type='checkbox' checked={ state.checked } onChange={ () => state.checked ? setState({ ...state, checked: false }) : setState({ ...state, checked: true }) }/>\r\n                <p>{ props.data.author }</p>\r\n            </div>\r\n            <div className=\"adminCommentsItemBody\">\r\n                <p>{ props.data.postedDate }</p>\r\n                <p>{ props.data.body }</p>\r\n                <div className='commentControl'>\r\n                    <select name='status' value={ commentData.status  } onChange={ e => onChangeHandler(e) }>\r\n                        <option value='approved'>Approved</option>\r\n                        <option value='trash'>Trash</option>\r\n                        <option value='spam'>Spam</option>\r\n                        <option value='pending'>Pending</option>\r\n                    </select>\r\n                    <button onClick={ () => updateComment({\r\n                        _id: props.data._id,\r\n                        update: commentData\r\n                    }) }>Save Changes\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default AdminCommentItem;\r\n"]},"metadata":{},"sourceType":"module"}