{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport { getMultipleSetting } from '../_variables/ajaxVariables';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { getAbsolutePath } from '../_variables/_variables';\n\nconst Error = props => {\n  return __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"error-page\"\n  }, __jsx(\"h1\", {\n    className: \"error-page-message\"\n  }, props.statusCode ? `error ${props.statusCode} occurred on server` : 'An error occurred on client')));\n};\n\nError.getInitialProps = async ({\n  req,\n  res,\n  err\n}) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return {\n    statusCode\n  };\n};\n\nexport default Error;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/_error.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","SiteSettingSetter","getAbsolutePath","Error","props","statusCode","getInitialProps","req","res","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,OAAOC,iBAAP,MAA8B,8DAA9B;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB,SACI,MAAC,SAAD,QACI,MAAC,iBAAD,EAAwBA,KAAxB,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAI,IAAA,SAAS,EAAC;AAAd,KACMA,KAAK,CAACC,UAAN,GACK,SAASD,KAAK,CAACC,UAAY,qBADhC,GAEI,6BAHV,CADJ,CAFJ,CADJ;AAYH,CAdD;;AAgBAF,KAAK,CAACG,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAA6B;AACjD,QAAMJ,UAAU,GAAGG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoBI,GAAG,GAAGA,GAAG,CAACJ,UAAP,GAAoB,GAAjE;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAHD;;AAKA,eAAeF,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../components/layouts/AppLayout'\r\nimport { getMultipleSetting } from '../_variables/ajaxVariables'\r\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport { getAbsolutePath } from '../_variables/_variables'\r\n\r\nconst Error = props => {\r\n\r\n    return (\r\n        <AppLayout>\r\n            <SiteSettingSetter { ...props }/>\r\n            <div className='error-page'>\r\n                <h1 className='error-page-message'>\r\n                    { props.statusCode\r\n                        ? `error ${ props.statusCode } occurred on server`\r\n                        : 'An error occurred on client' }\r\n                </h1>\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nError.getInitialProps = async ({ req, res, err }) => {\r\n    const statusCode = res ? res.statusCode : err ? err.statusCode : 404\r\n    return { statusCode }\r\n}\r\n\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}