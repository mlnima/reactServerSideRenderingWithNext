{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\nimport FA from 'react-fontawesome';\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\n\nvar navigation = function navigation(props) {\n  var titleEl = useRef(null);\n  var urlEl = useRef(null);\n\n  var _useState = useState({\n    type: 'navigation',\n    data: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    getSetting(state.type).then(function (res) {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {\n          data: res.data.setting.data || []\n        }));\n      }\n    });\n  }, []);\n\n  var onSaveChangesHandler = function onSaveChangesHandler() {\n    updateSetting('navigation', state.data).then(function () {\n      getSetting(state.type).then(function (res) {\n        if (res.data.setting) {\n          setState(_objectSpread({}, state, {\n            data: res.data.setting.data || []\n          }));\n        }\n      });\n    });\n  };\n\n  var onDeleteItemHandler = function onDeleteItemHandler(e) {\n    setState(_objectSpread({}, state, {\n      data: state.data.filter(function (i) {\n        return i.title !== e.target.name;\n      })\n    }));\n  };\n\n  var onAddItemHandler = function onAddItemHandler() {\n    var newItem = {\n      title: titleEl.current.value,\n      url: urlEl.current.value\n    };\n    setState(_objectSpread({}, state, {\n      data: [].concat(_toConsumableArray(state.data), [newItem])\n    }));\n    titleEl.current.value = '';\n    urlEl.current.value = '';\n  };\n\n  var renderItems = state.data.map(function (item) {\n    return __jsx(NavigationItem, {\n      title: item.title,\n      url: item.url,\n      onDeleteItemHandler: onDeleteItemHandler\n    });\n  });\n  {\n    /*<div className='items-preview-item'>*/\n  }\n  {\n    /*    <div className=\"item-title\">*/\n  }\n  {\n    /*        <p>{ item.title }</p>*/\n  }\n  {\n    /*        <button><FA className='fontawesomeMedium' name={ 'bars' }/></button>*/\n  }\n  {\n    /*    </div>*/\n  }\n  {\n    /*    <button name={ item.title } onClick={ (e) => onDeleteItemHandler(e) }>Del</button>*/\n  }\n  {\n    /*    <p>{ item.url }</p>*/\n  }\n  {\n    /*</div>*/\n  }\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-items\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    ref: titleEl,\n    type: \"text\",\n    name: \"title\"\n  }), __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    ref: urlEl,\n    type: \"text\",\n    name: \"url\"\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onAddItemHandler();\n    }\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"items-preview\"\n  }, renderItems), __jsx(\"button\", {\n    className: \"saveBtn\",\n    onClick: function onClick() {\n      return onSaveChangesHandler();\n    }\n  }, \"Save\")));\n};\n\nexport default navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/navigation/index.js"],"names":["React","useEffect","useState","useRef","AdminLayout","getSetting","updateSetting","FA","NavigationItem","navigation","props","titleEl","urlEl","type","data","state","setState","then","res","setting","onSaveChangesHandler","onDeleteItemHandler","e","filter","i","title","target","name","onAddItemHandler","newItem","current","value","url","renderItems","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\r\nimport FA from 'react-fontawesome'\r\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\r\n\r\nconst navigation = props => {\r\n    const titleEl = useRef(null)\r\n    const urlEl = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        data: []\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSetting(state.type).then(res => {\r\n            if (res.data.setting) {\r\n                setState({\r\n                    ...state,\r\n                    data: res.data.setting.data || []\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n        updateSetting('navigation', state.data).then(() => {\r\n            getSetting(state.type).then(res => {\r\n                if (res.data.setting) {\r\n                    setState({\r\n                        ...state,\r\n                        data: res.data.setting.data || []\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    const onDeleteItemHandler = (e) => {\r\n        setState({\r\n            ...state,\r\n            data: state.data.filter(i => i.title !== e.target.name)\r\n        })\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n        const newItem = {\r\n            title: titleEl.current.value,\r\n            url: urlEl.current.value\r\n        };\r\n        setState({\r\n            ...state,\r\n            data: [ ...state.data, newItem ]\r\n        })\r\n\r\n        titleEl.current.value = '';\r\n        urlEl.current.value = ''\r\n    };\r\n\r\n    const renderItems = state.data.map(item => {\r\n        return (\r\n            <NavigationItem title={ item.title } url={ item.url } onDeleteItemHandler={ onDeleteItemHandler }/>\r\n        )\r\n    });\r\n\r\n    {/*<div className='items-preview-item'>*/\r\n    }\r\n    {/*    <div className=\"item-title\">*/\r\n    }\r\n    {/*        <p>{ item.title }</p>*/\r\n    }\r\n    {/*        <button><FA className='fontawesomeMedium' name={ 'bars' }/></button>*/\r\n    }\r\n    {/*    </div>*/\r\n    }\r\n    {/*    <button name={ item.title } onClick={ (e) => onDeleteItemHandler(e) }>Del</button>*/\r\n    }\r\n    {/*    <p>{ item.url }</p>*/\r\n    }\r\n\r\n    {/*</div>*/\r\n    }\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <div className='add-navigation-items'>\r\n                    <p>Title :</p>\r\n                    <input ref={ titleEl } type=\"text\" name='title'/>\r\n                    <p>Url :</p>\r\n                    <input ref={ urlEl } type=\"text\" name='url'/>\r\n                    <button onClick={ () => onAddItemHandler() }>Add</button>\r\n                </div>\r\n                <div className='items-preview'>\r\n                    { renderItems }\r\n                </div>\r\n                <button className='saveBtn' onClick={ () => onSaveChangesHandler() }>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default navigation;"]},"metadata":{},"sourceType":"module"}