{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nexport const AppContext = React.createContext();\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({});\n  const {\n    0: settings,\n    1: dispatchSettings\n  } = useState({\n    adminPanelSideBar: false,\n    test: false\n  });\n  const {\n    0: userData,\n    1: dispatchUserData\n  } = useState({});\n  const {\n    0: editingPostData,\n    1: dispatchEditingPostData\n  } = useState({});\n  const {\n    0: functions,\n    1: dispatchFunctions\n  } = useState({\n    getAndSetUserInfo: async () => {\n      if (localStorage.wt) {\n        await axios.post('/api/v1/users/getUserInfo', {\n          token: localStorage.wt\n        }).then(res => {\n          dispatchUserData(_objectSpread({}, userData, {}, res.data.userData));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    logOutUser: () => {\n      localStorage.removeItem('wt');\n      dispatchUserData({});\n      props.router.push('/');\n    },\n    goToAdminPanel: () => {\n      props.router.push('/admin');\n    },\n    goToHomePage: () => {// props.router.push('/')\n    },\n    savePosts: async data => {\n      const body = {\n        postData: data,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/createNewPost', body);\n    },\n    getPosts: async (limit, pageNo) => {\n      const body = {\n        limit,\n        pageNo\n      };\n      return axios.post('/api/v1/posts', body);\n    }\n  });\n  useEffect(() => {\n    functions.getAndSetUserInfo();\n  }, []);\n  useEffect(() => {\n    if (userData.username) {\n      if (props.router.pathname === '/auth/login' || props.router.pathname === '/auth/register') {\n        props.router.push('/');\n      }\n    }\n  }, [props.router.pathname]);\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state,\n      dispatchState,\n      settings,\n      dispatchSettings,\n      userData,\n      dispatchUserData,\n      functions,\n      editingPostData,\n      dispatchEditingPostData\n    }\n  }, props.children));\n};\n\nexport const AppProviderWithRouter = withRouter(AppProvider);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","withRouter","AppContext","createContext","AppProvider","props","state","dispatchState","settings","dispatchSettings","adminPanelSideBar","test","userData","dispatchUserData","editingPostData","dispatchEditingPostData","functions","dispatchFunctions","getAndSetUserInfo","localStorage","wt","post","token","then","res","data","catch","err","console","log","logOutUser","removeItem","router","push","goToAdminPanel","goToHomePage","savePosts","body","postData","getPosts","limit","pageNo","username","pathname","children","AppProviderWithRouter"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"next/router\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({});\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        test: false\r\n    });\r\n    const [ userData, dispatchUserData ] = useState({});\r\n    const [ editingPostData, dispatchEditingPostData ] = useState({});\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo: async () => {\r\n            if (localStorage.wt) {\r\n                await axios.post('/api/v1/users/getUserInfo', { token: localStorage.wt }).then(res => {\r\n                    dispatchUserData({ ...userData, ...res.data.userData });\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        logOutUser: () => {\r\n            localStorage.removeItem('wt');\r\n            dispatchUserData({})\r\n            props.router.push('/')\r\n        },\r\n        goToAdminPanel: () => {\r\n            props.router.push('/admin')\r\n        },\r\n        goToHomePage: () => {\r\n            // props.router.push('/')\r\n        },\r\n        savePosts: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/createNewPost', body)\r\n        },\r\n        getPosts: async (limit, pageNo) => {\r\n            const body = {\r\n                limit,\r\n                pageNo\r\n            };\r\n            return axios.post('/api/v1/posts', body)\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        functions.getAndSetUserInfo()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userData.username) {\r\n            if (props.router.pathname === '/auth/login' || props.router.pathname === '/auth/register') {\r\n                props.router.push('/')\r\n            }\r\n        }\r\n    }, [ props.router.pathname ]);\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions,\r\n                    editingPostData,\r\n                    dispatchEditingPostData\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AppProviderWithRouter = withRouter(AppProvider);"]},"metadata":{},"sourceType":"module"}