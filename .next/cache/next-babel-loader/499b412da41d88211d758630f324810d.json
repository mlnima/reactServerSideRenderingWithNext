{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../components/layouts/AppLayout';\nimport { getSetting, getWidgetsWithData } from '../../_variables/ajaxVariables';\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport withRouter from 'next/dist/client/with-router';\nimport Posts from '../../components/includes/Posts/Posts';\nimport Link from 'next/link';\nimport PaginationComponent from '../../components/includes/PaginationComponent/PaginationComponent';\n\nconst posts = props => {\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(\"div\", {\n    className: \"posts\"\n  }, __jsx(Posts, {\n    posts: props.postsSource.posts || []\n  })), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getPostsData.pageNo,\n    totalCount: props.postsSource.totalCount,\n    size: props.getPostsData.size,\n    maxPage: Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })))));\n};\n\nposts.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let postsSource;\n  let widgets;\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n  const widgetsData = await getWidgetsWithData('postsPageSidebar');\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  const getPostsData = {\n    size: parseInt(query.size) || parseInt(identity.postsCountPerPage) || 30,\n    pageNo: parseInt(query.page) || 1,\n    postType: query.type || 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    keyword: query.keyword || '',\n    author: query.author || 'all',\n    actor: query.actor || 'all',\n    status: 'published',\n    tag: query.tag || 'all',\n    category: query.category || 'all',\n    sort: query.sort || 'latest'\n  };\n  const postsData = await getPosts(getPostsData);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  postsSource = postsData.data ? postsData.data : [];\n  return {\n    identity,\n    navigation,\n    query,\n    postsSource,\n    getPostsData,\n    pathname,\n    widgets\n  };\n};\n\nexport default withRouter(posts);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/posts/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getWidgetsWithData","getMeta","getPosts","SiteSettingSetter","withRouter","Posts","Link","PaginationComponent","posts","props","console","log","postsSource","getPostsData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","getInitialProps","req","res","err","navigation","identity","widgets","identityData","navigationData","widgetsData","data","setting","postsCountPerPage","page","postType","type","fields","keyword","author","actor","status","tag","category","sort","postsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../components/layouts/AppLayout'\r\nimport { getSetting, getWidgetsWithData } from '../../_variables/ajaxVariables'\r\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport Posts from '../../components/includes/Posts/Posts'\r\nimport Link from 'next/link'\r\nimport PaginationComponent from '../../components/includes/PaginationComponent/PaginationComponent'\r\n\r\nconst posts = props => {\r\n    useEffect(() => {\r\n        console.log(props )\r\n\r\n\r\n    }, [props]);\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div className=\"content\">\r\n                    <div className=\"main\">\r\n                        <div className='posts'>\r\n                            <Posts posts={ props.postsSource.posts || [] }/>\r\n\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={ props.getPostsData.pageNo }\r\n                            totalCount={ props.postsSource.totalCount }\r\n                            size={ props.getPostsData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size)) }\r\n                            queryData={props.query || props.router.query}\r\n                            pathnameData={props.pathname ||props.router.pathname }\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nposts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let postsSource;\r\n    let widgets;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('postsPageSidebar')\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getPostsData = {\r\n        size: parseInt(query.size) || parseInt(identity.postsCountPerPage) || 30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        postType: query.type || 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        keyword: query.keyword || '',\r\n        author: query.author || 'all',\r\n        actor: query.actor || 'all',\r\n        status: 'published',\r\n        tag: query.tag || 'all',\r\n        category: query.category || 'all',\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    const postsData = await getPosts(getPostsData)\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    postsSource = postsData.data ? postsData.data : []\r\n    return { identity, navigation, query, postsSource, getPostsData,pathname, widgets }\r\n}\r\n\r\nexport default withRouter(posts);\r\n"]},"metadata":{},"sourceType":"module"}