{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nexport const AppContext = React.createContext();\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({});\n  const {\n    0: settings,\n    1: dispatchSettings\n  } = useState({\n    adminPanelSideBar: false,\n    test: false\n  });\n  const {\n    0: userData,\n    1: dispatchUserData\n  } = useState({\n    username: undefined\n  });\n  const {\n    0: functions,\n    1: dispatchFunctions\n  } = useState({\n    getAndSetUserInfo: async () => {\n      return await axios.post('/api/v1/users/getUserInfo', {\n        token: localStorage.wt\n      });\n    }\n  });\n  useEffect(() => {\n    if (localStorage.wt) {\n      functions.getAndSetUserInfo().then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n        localStorage.removeItem('wt');\n      });\n    }\n  }, []); // useEffect(() => {\n  //     if (localStorage.wt) {\n  //         functions.getUserInfo().then(res => {\n  //             functions.setUserInfo(res)\n  //             state.functions.requestForGoingOnline();\n  //             props.history.push('/chat')\n  //         }).catch(() => {\n  //             localStorage.removeItem('wt');\n  //             if (props.location.pathname === '/chat' ){\n  //                 props.history.push('/')\n  //             }\n  //         })\n  //     }else {\n  //         if (props.location.pathname === '/chat' ){\n  //             props.history.push('/')\n  //         }\n  //     }\n  // }, [props.location.pathname]);\n\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state,\n      dispatchState,\n      settings,\n      dispatchSettings,\n      userData,\n      dispatchUserData,\n      functions\n    }\n  }, props.children));\n};\n\nexport const AppProviderWithRouter = AppProvider;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","AppContext","createContext","AppProvider","props","state","dispatchState","settings","dispatchSettings","adminPanelSideBar","test","userData","dispatchUserData","username","undefined","functions","dispatchFunctions","getAndSetUserInfo","post","token","localStorage","wt","then","res","console","log","catch","err","removeItem","children","AppProviderWithRouter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGP,KAAK,CAACQ,aAAN,EAAnB;;AAEP,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAAA,OAAEU,QAAF;AAAA,OAAYC;AAAZ,MAAiCX,QAAQ,CAAC;AAC5CY,IAAAA,iBAAiB,EAAE,KADyB;AAE5CC,IAAAA,IAAI,EAAE;AAFsC,GAAD,CAA/C;AAIA,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAAiCf,QAAQ,CAAC;AAC5CgB,IAAAA,QAAQ,EAAEC;AADkC,GAAD,CAA/C;AAGA,QAAM;AAAA,OAAEC,SAAF;AAAA,OAAaC;AAAb,MAAmCnB,QAAQ,CAAC;AAC9CoB,IAAAA,iBAAiB,EAAE,YAAU;AACzB,aAAO,MAAMjB,KAAK,CAACkB,IAAN,CAAW,2BAAX,EAAwC;AAAEC,QAAAA,KAAK,EAAEC,YAAY,CAACC;AAAtB,OAAxC,CAAb;AACH;AAH6C,GAAD,CAAjD;AAMA1B,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIyB,YAAY,CAACC,EAAjB,EAAoB;AAChBN,MAAAA,SAAS,CAACE,iBAAV,GAA8BK,IAA9B,CAAmCC,GAAG,IAAE;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD,EAEGG,KAFH,CAESC,GAAG,IAAE;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAaE,GAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,CAAwB,IAAxB;AACH,OALD;AAMH;AACJ,GATQ,EASP,EATO,CAAT,CAhByB,CA4BzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SACI,mBACI,MAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAG;AACJvB,MAAAA,KADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,gBAJI;AAKJG,MAAAA,QALI;AAMJC,MAAAA,gBANI;AAOJG,MAAAA;AAPI;AADZ,KAWMX,KAAK,CAACyB,QAXZ,CADJ,CADJ;AAiBH,CAlED;;AAoEA,OAAO,MAAMC,qBAAqB,GAAG3B,WAA9B","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({});\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        test: false\r\n    });\r\n    const [ userData, dispatchUserData ] = useState({\r\n        username: undefined\r\n    });\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo: async ()=>{\r\n            return await axios.post('/api/v1/users/getUserInfo', { token: localStorage.wt })\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if (localStorage.wt){\r\n            functions.getAndSetUserInfo().then(res=>{\r\n                console.log(res )\r\n            }).catch(err=>{\r\n                console.log( err);\r\n                localStorage.removeItem('wt')\r\n            })\r\n        }\r\n    },[ ]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (localStorage.wt) {\r\n    //         functions.getUserInfo().then(res => {\r\n    //             functions.setUserInfo(res)\r\n    //             state.functions.requestForGoingOnline();\r\n    //             props.history.push('/chat')\r\n    //         }).catch(() => {\r\n    //             localStorage.removeItem('wt');\r\n    //             if (props.location.pathname === '/chat' ){\r\n    //                 props.history.push('/')\r\n    //             }\r\n    //         })\r\n    //     }else {\r\n    //         if (props.location.pathname === '/chat' ){\r\n    //             props.history.push('/')\r\n    //         }\r\n    //     }\r\n    // }, [props.location.pathname]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AppProviderWithRouter = AppProvider;"]},"metadata":{},"sourceType":"module"}