{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport Filters from \"../../../components/adminIncludes/PostsComponents/Filters/Filters\";\nimport PostsDataTable from \"../../../components/adminIncludes/PostsComponents/PostsDataTable/PostsDataTable\";\nimport { getAbsolutePath } from '../../../_variables/_variables';\nimport { getPosts } from '../../../_variables/ajaxPostsVariables';\nimport Link from 'next/link';\nimport AppLayout from '../../../components/layouts/AppLayout';\n\nvar adminPosts = function adminPosts(props) {\n  // useEffect(() => {\n  //     console.log( props)\n  // }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(Link, {\n    href: \"/admin/post?new=1\"\n  }, __jsx(\"a\", {\n    className: \"newPostLinkAdminPanel\"\n  }, \"New Post\")), __jsx(\"div\", {\n    className: \"Posts\"\n  }, __jsx(Filters, props), __jsx(PostsDataTable, props))));\n};\n\nadminPosts.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, domainName, postsSource, getPostsData, postsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          getPostsData = {\n            size: parseInt(query.size) || 30,\n            pageNo: parseInt(query.page) || 1,\n            postType: query.type || 'all',\n            fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n            keyword: query.keyword || '',\n            author: query.author || 'all',\n            actor: query.actor || 'all',\n            status: query.status || 'all',\n            tag: query.tag || 'all',\n            category: query.category || 'all',\n            sort: query.sort || 'latest'\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getPosts(getPostsData, true, domainName));\n\n        case 12:\n          postsData = _context.sent;\n          postsSource = postsData.data ? postsData.data : [];\n          return _context.abrupt(\"return\", {\n            query: query,\n            postsSource: postsSource,\n            getPostsData: getPostsData,\n            pathname: pathname\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default adminPosts;","map":null,"metadata":{},"sourceType":"module"}