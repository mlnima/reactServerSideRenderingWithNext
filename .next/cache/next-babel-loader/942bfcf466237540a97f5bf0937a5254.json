{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport { getMultipleSetting } from '../_variables/ajaxVariables';\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode;\n  return __jsx(AppLayout, null, __jsx(\"p\", null, statusCode ? \"An error \".concat(statusCode, \" occurred on server\") : 'An error occurred on client'));\n};\n\nError.getInitialProps = function _callee(_ref2) {\n  var res, err, settings, settingsData, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, err = _ref2.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getMultipleSetting({\n            settings: ['identity', 'navigation', 'design']\n          }, true, domainName));\n\n        case 3:\n          settingsData = _context.sent;\n          statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Error;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/_error.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","Error","statusCode","getInitialProps","res","err","settings","domainName","settingsData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAC7B,SACI,MAAC,SAAD,QACA,iBACKA,UAAU,sBACOA,UADP,2BAEL,6BAHV,CADA,CADJ;AASH,CAVD;;AAYAD,KAAK,CAACE,eAAN,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAAA;AAAA,2CAGQL,kBAAkB,CAAC;AAAEM,YAAAA,QAAQ,EAAE,CAAE,UAAF,EAAc,YAAd,EAA4B,QAA5B;AAAZ,WAAD,EAAuD,IAAvD,EAA6DC,UAA7D,CAH1B;;AAAA;AAGbC,UAAAA,YAHa;AAKbN,UAAAA,UALa,GAKAE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,GAL9C;AAAA,2CAMZ;AAAEA,YAAAA,UAAU,EAAVA;AAAF,WANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../components/layouts/AppLayout'\r\nimport { getMultipleSetting } from '../_variables/ajaxVariables'\r\n\r\nconst Error = ({ statusCode })=> {\r\n    return (\r\n        <AppLayout>\r\n        <p>\r\n            {statusCode\r\n                ? `An error ${statusCode} occurred on server`\r\n                : 'An error occurred on client'}\r\n        </p>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nError.getInitialProps =async ({ res, err }) => {\r\n\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n\r\n    const statusCode = res ? res.statusCode : err ? err.statusCode : 404\r\n    return { statusCode }\r\n}\r\n\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}