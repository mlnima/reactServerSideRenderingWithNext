{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './FileManagerControl.scss';\nimport { AppContext } from '../../../../context/AppContext';\nimport UploadFileBtn from '../../UploadFileBtn/uploadFileBtn';\n\nconst FileManagerControl = props => {\n  const addressBar = useRef(null);\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const onGoBackHandler = e => {\n    clearClickedItemHandler(e);\n    let path = props.data.path;\n    let splitPath = path.split('/');\n    let lastItemPlusSlash = '/' + splitPath[splitPath.length - 1];\n    let newPath = path.replace(lastItemPlusSlash, '');\n    props.setStateHandler('path', newPath);\n  };\n\n  const clearClickedItemHandler = e => {// contextData.setFilesData({\n    //     ...contextData.filesData,\n    //     clickedItems:[]\n    // });\n  };\n\n  return __jsx(\"div\", {\n    className: \"FileManagerControl\"\n  }, __jsx(\"div\", {\n    className: \"file-Manager-control-address-bar\"\n  }, __jsx(\"button\", {\n    className: \"backBtn\",\n    onClick: e => onGoBackHandler(e)\n  }, \"Back\"), __jsx(\"input\", {\n    ref: addressBar,\n    className: \"ControlFilesItem\",\n    onClick: e => clearClickedItemHandler(e),\n    value: props.data.path\n  })), __jsx(\"div\", {\n    className: \"file-Manager-control-quick-access\"\n  }, __jsx(\"button\", {\n    onClick: () => props.setStateHandler('path', '.')\n  }, \"Root\"), __jsx(\"button\", {\n    onClick: () => props.setStateHandler('path', './static/uploads/image')\n  }, \"Images\")));\n};\n\nexport default FileManagerControl;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","UploadFileBtn","FileManagerControl","props","addressBar","contextData","state","setState","onGoBackHandler","e","clearClickedItemHandler","path","data","splitPath","split","lastItemPlusSlash","length","newPath","replace","setStateHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,2BAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAChC,QAAMC,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMM,WAAW,GAAGP,UAAU,CAACE,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEM,KAAF;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGI,QAAMY,eAAe,GAAIC,CAAD,IAAK;AAC7BC,IAAAA,uBAAuB,CAACD,CAAD,CAAvB;AACA,QAAIE,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAWD,IAAtB;AACA,QAAIE,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,iBAAiB,GAAG,MAAMF,SAAS,CAACA,SAAS,CAACG,MAAV,GAAkB,CAAnB,CAAvC;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACO,OAAL,CAAaH,iBAAb,EAA+B,EAA/B,CAAd;AACAZ,IAAAA,KAAK,CAACgB,eAAN,CAAsB,MAAtB,EAA6BF,OAA7B;AACH,GAPG;;AASJ,QAAMP,uBAAuB,GAACD,CAAC,IAAE,CAC7B;AACA;AACA;AACA;AACH,GALD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAGA,CAAD,IAAKD,eAAe,CAACC,CAAD;AAAzD,YADJ,EAEI;AAAO,IAAA,GAAG,EAAEL,UAAZ;AAAwB,IAAA,SAAS,EAAC,kBAAlC;AAAqD,IAAA,OAAO,EAAEK,CAAC,IAAEC,uBAAuB,CAACD,CAAD,CAAxF;AAA6F,IAAA,KAAK,EAAEN,KAAK,CAACS,IAAN,CAAWD;AAA/G,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACM;AAAQ,IAAA,OAAO,EAAE,MAAIR,KAAK,CAACgB,eAAN,CAAsB,MAAtB,EAA6B,GAA7B;AAArB,YADN,EAEM;AAAQ,IAAA,OAAO,EAAE,MAAIhB,KAAK,CAACgB,eAAN,CAAsB,MAAtB,EAA6B,wBAA7B;AAArB,cAFN,CALJ,CADJ;AAYH,CApCD;;AAqCA,eAAejB,kBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './FileManagerControl.scss';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport UploadFileBtn from '../../UploadFileBtn/uploadFileBtn'\r\n\r\nconst FileManagerControl = props => {\r\n    const addressBar = useRef(null)\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n        const onGoBackHandler = (e)=>{\r\n        clearClickedItemHandler(e)\r\n        let path = props.data.path;\r\n        let splitPath = path.split('/');\r\n        let lastItemPlusSlash = '/' + splitPath[splitPath.length -1];\r\n        let newPath = path.replace(lastItemPlusSlash,'');\r\n        props.setStateHandler('path',newPath)\r\n    };\r\n\r\n    const clearClickedItemHandler=e=>{\r\n        // contextData.setFilesData({\r\n        //     ...contextData.filesData,\r\n        //     clickedItems:[]\r\n        // });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='FileManagerControl'>\r\n            <div className='file-Manager-control-address-bar'>\r\n                <button className=\"backBtn\" onClick={(e)=>onGoBackHandler(e)}>Back</button>\r\n                <input ref={addressBar} className=\"ControlFilesItem\" onClick={e=>clearClickedItemHandler(e)} value={props.data.path}/>\r\n            </div>\r\n            <div className=\"file-Manager-control-quick-access\">\r\n                  <button onClick={()=>props.setStateHandler('path','.')}>Root</button>\r\n                  <button onClick={()=>props.setStateHandler('path','./static/uploads/image')}>Images</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default FileManagerControl;\r\n"]},"metadata":{},"sourceType":"module"}