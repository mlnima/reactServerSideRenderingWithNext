{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\nimport Quality from \"./Quality/Quality\";\nimport './VideoInformation.scss';\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\nimport Duration from \"./Duration/Duration\";\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\nimport { AppContext } from \"../../../../context/AppContext\";\nimport TextInput from \"./TextInput/TextInput\";\nimport RenderIframe from \"./RenderIframe/RenderIframe\";\nimport ImagePreview from \"./ImagePreview/ImagePreview\";\n\nvar VideoInformation = function VideoInformation(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    inSlideShow: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onSaveChanges = function onSaveChanges() {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, state));\n  };\n\n  var onchangeHandler = function onchangeHandler(e) {// setState({\n    //     ...state,\n    //     [e.target.name]: e.target.value\n    // })\n  };\n\n  var onDurationChangeHandler = function onDurationChangeHandler(value) {\n    setState(_objectSpread({}, state, {\n      duration: value\n    }));\n  };\n\n  var onIsInSlideShowChangeHandler = function onIsInSlideShowChangeHandler(e) {\n    setState(_objectSpread({}, state, {\n      inSlideShow: e\n    }));\n  };\n\n  if (props.postData.postType === 'video') {\n    return __jsx(\"div\", {\n      className: \"VideoInformation\"\n    }, __jsx(\"div\", {\n      className: \"saveBtn\"\n    }, __jsx(\"button\", {\n      className: \"SaveVideoDataBtn\",\n      onClick: function onClick() {\n        return onSaveChanges();\n      }\n    }, \"Save Video Data\")), __jsx(IsInSlideShow, _extends({}, props, {\n      onChangeHandler: onIsInSlideShowChangeHandler,\n      isChecked: state.inSlideShow\n    })), __jsx(Quality, props), __jsx(TextInputWithUploadBtn, _extends({}, props, {\n      name: \"videoTrailerUrl\",\n      title: \"Video Url\"\n    })), __jsx(VideoEmbedCode, _extends({}, props, {\n      name: \"videoEmbedCode\"\n    })), __jsx(RenderIframe, props), __jsx(Duration, _extends({}, props, {\n      onDurationChangeHandler: onDurationChangeHandler\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'views',\n      value: state.views || 0\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'likes',\n      value: state.likes || 0\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'disLikes',\n      value: state.disLikes || 0\n    })), __jsx(TextInputWithUploadBtn, _extends({}, props, {\n      name: \"VideoTrailerUrl\",\n      title: \"Video Trailer Url\"\n    })), __jsx(TextInputWithUploadBtn, _extends({}, props, {\n      name: \"mainThumbnail\",\n      title: \"Main thumbnail\"\n    })), __jsx(ImagePreview, props), __jsx(TextInput, _extends({}, props, {\n      name: \"downloadLink\",\n      title: \"Download Link\"\n    })), __jsx(\"div\", {\n      className: \"saveBtn\"\n    }, __jsx(\"button\", {\n      className: \"SaveVideoDataBtn\",\n      onClick: function onClick() {\n        return onSaveChanges();\n      }\n    }, \"Save Video Data\")));\n  } else {\n    return __jsx(\"h3\", null, \"This Post Type Does not Support this Feature \");\n  }\n};\n\nexport default VideoInformation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/VideoInformation.js"],"names":["React","useEffect","useState","useContext","IsInSlideShow","Quality","VideoUrls","VideoEmbedCode","Duration","ViewsLikesDisLikes","TextInputWithUploadBtn","AppContext","TextInput","RenderIframe","ImagePreview","VideoInformation","props","contextData","inSlideShow","state","setState","onSaveChanges","dispatchEditingPostData","editingPostData","onchangeHandler","e","onDurationChangeHandler","value","duration","onIsInSlideShowChangeHandler","postData","postType","views","likes","disLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport './VideoInformation.scss'\r\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\r\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\r\nimport Duration from \"./Duration/Duration\";\r\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\r\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport TextInput from \"./TextInput/TextInput\";\r\nimport RenderIframe from \"./RenderIframe/RenderIframe\";\r\nimport ImagePreview from \"./ImagePreview/ImagePreview\";\r\n\r\nconst VideoInformation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        inSlideShow: false\r\n    });\r\n\r\n    const onSaveChanges = () => {\r\n        contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\r\n    };\r\n\r\n    const onchangeHandler = e => {\r\n        // setState({\r\n        //     ...state,\r\n        //     [e.target.name]: e.target.value\r\n        // })\r\n    };\r\n    const onDurationChangeHandler = (value) => {\r\n\r\n        setState({\r\n            ...state,\r\n            duration: value\r\n        })\r\n    };\r\n    const onIsInSlideShowChangeHandler = (e) => {\r\n        setState({\r\n            ...state,\r\n            inSlideShow: e\r\n        })\r\n    };\r\n\r\n    if (props.postData.postType === 'video') {\r\n        return (\r\n            <div className='VideoInformation'>\r\n                <div className=\"saveBtn\">\r\n                    <button className='SaveVideoDataBtn' onClick={ () => onSaveChanges() }>Save Video Data</button>\r\n                </div>\r\n\r\n                <IsInSlideShow {...props} onChangeHandler={ onIsInSlideShowChangeHandler } isChecked={ state.inSlideShow }/>\r\n\r\n\r\n\r\n                <Quality {...props} />\r\n                <TextInputWithUploadBtn {...props} name='videoTrailerUrl' title='Video Url' />\r\n                <VideoEmbedCode {...props} name='videoEmbedCode' />\r\n                <RenderIframe {...props}/>\r\n                <Duration {...props} onDurationChangeHandler={ onDurationChangeHandler }/>\r\n                <ViewsLikesDisLikes {...props} name={ 'views' } value={state.views||0} />\r\n                <ViewsLikesDisLikes {...props} name={ 'likes' } value={state.likes||0} />\r\n                <ViewsLikesDisLikes {...props} name={ 'disLikes' } value={state.disLikes||0} />\r\n                <TextInputWithUploadBtn {...props} name='VideoTrailerUrl' title='Video Trailer Url' />\r\n                <TextInputWithUploadBtn {...props} name='mainThumbnail' title='Main thumbnail' />\r\n                <ImagePreview {...props}/>\r\n                <TextInput {...props} name='downloadLink' title='Download Link' />\r\n                <div className=\"saveBtn\">\r\n                    <button className='SaveVideoDataBtn' onClick={ () => onSaveChanges() }>Save Video Data</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <h3>This Post Type Does not Support this Feature </h3>\r\n        )\r\n    }\r\n\r\n};\r\nexport default VideoInformation;"]},"metadata":{},"sourceType":"module"}