{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\nimport { DelayInput } from 'react-delay-input';\nimport './customScript.scss';\nimport { AppContext } from '../../../../context/AppContext';\nimport { getAbsolutePath } from '../../../../_variables/_variables';\nimport { getSetting } from '../../../../_variables/ajaxVariables';\nimport settings from '../general';\n\nvar customScript = function customScript(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    customScripts: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({\n    scriptName: '',\n    scriptBody: ''\n  }),\n      newScript = _useState2[0],\n      setNewScript = _useState2[1];\n\n  useEffect(function () {\n    setState({\n      customScripts: contextData.siteIdentity.customScripts || []\n    });\n  }, [contextData.siteIdentity.customScripts]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    contextData.dispatchSiteIdentity(_objectSpread({}, contextData.siteIdentity, {\n      customScript: e.target.value\n    }));\n  };\n\n  var onSaveHandler = function onSaveHandler() {\n    contextData.functions.updateSetting('identity', contextData.siteIdentity).then(function () {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  }; // useEffect(() => {\n  //     console.log(contextData.siteIdentity )\n  // }, [contextData.siteIdentity]);\n\n\n  var onNewScriptChangeHandler = function onNewScriptChangeHandler(e) {\n    setNewScript(_objectSpread({}, newScript, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onAddHandler = function onAddHandler(e) {\n    e.preventDefault();\n    var newScriptData = [].concat(_toConsumableArray(contextData.customScripts), [newScript]);\n    contextData.dispatchSiteIdentity(_objectSpread({}, contextData.siteIdentity, {\n      customScripts: newScriptData\n    }));\n  }; //[ ...contextData.customScripts, newScript ]\n\n\n  var renderScripts = contextData.siteIdentity.customScripts.map(function (script) {\n    return __jsx(\"div\", {\n      className: \"customScriptPageItem\"\n    }, __jsx(\"p\", null, script.scriptName), __jsx(DelayInput, {\n      element: \"textarea\",\n      className: \"customScript\",\n      name: \"videoEmbedCode\",\n      value: script.scriptBody,\n      delayTimeout: 1000,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onSaveHandler();\n      }\n    }, \"Save\"));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"addCustomScriptForm\",\n    onSubmit: function onSubmit(e) {\n      return onAddHandler(e);\n    }\n  }, __jsx(\"input\", {\n    name: \"scriptName\",\n    placeholder: \"Script Name\",\n    onChange: function onChange(e) {\n      return onNewScriptChangeHandler(e);\n    }\n  }), __jsx(\"textarea\", {\n    name: \"scriptBody\",\n    className: \"addScriptTextarea\",\n    placeholder: \"Script with out Script Tag\",\n    onChange: function onChange(e) {\n      return onNewScriptChangeHandler(e);\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"customScripts\"\n  }, renderScripts));\n};\n\nexport default customScript;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/customScript/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","DelayInput","AppContext","getAbsolutePath","getSetting","settings","customScript","props","contextData","customScripts","state","setState","scriptName","scriptBody","newScript","setNewScript","siteIdentity","onChangeHandler","e","dispatchSiteIdentity","target","value","onSaveHandler","functions","updateSetting","then","dispatchState","loading","onNewScriptChangeHandler","name","onAddHandler","preventDefault","newScriptData","renderScripts","map","script"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1B,MAAMC,WAAW,GAAGV,UAAU,CAACI,UAAD,CAA9B;;AAD0B,kBAGEL,QAAQ,CAAC;AACjCY,IAAAA,aAAa,EAAC;AADmB,GAAD,CAHV;AAAA,MAGlBC,KAHkB;AAAA,MAGXC,QAHW;;AAAA,mBAOUd,QAAQ,CAAC;AACzCe,IAAAA,UAAU,EAAE,EAD6B;AAEzCC,IAAAA,UAAU,EAAE;AAF6B,GAAD,CAPlB;AAAA,MAOlBC,SAPkB;AAAA,MAOPC,YAPO;;AAY1BnB,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,QAAQ,CAAC;AACLF,MAAAA,aAAa,EAAED,WAAW,CAACQ,YAAZ,CAAyBP,aAAzB,IAA0C;AADpD,KAAD,CAAR;AAGH,GAJQ,EAIN,CAAED,WAAW,CAACQ,YAAZ,CAAyBP,aAA3B,CAJM,CAAT;;AAMA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AACzBV,IAAAA,WAAW,CAACW,oBAAZ,mBACOX,WAAW,CAACQ,YADnB;AAEIV,MAAAA,YAAY,EAAEY,CAAC,CAACE,MAAF,CAASC;AAF3B;AAIH,GALD;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBd,IAAAA,WAAW,CAACe,SAAZ,CAAsBC,aAAtB,CAAoC,UAApC,EAAgDhB,WAAW,CAACQ,YAA5D,EAA0ES,IAA1E,CAA+E,YAAM;AACjFjB,MAAAA,WAAW,CAACkB,aAAZ,mBACOlB,WAAW,CAACE,KADnB;AAEIiB,QAAAA,OAAO,EAAE;AAFb;AAIH,KALD;AAMH,GAPD,CAzB0B,CAiC1B;AACA;AACA;;;AAEA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAV,CAAC,EAAI;AAClCH,IAAAA,YAAY,mBACLD,SADK,sBAEPI,CAAC,CAACE,MAAF,CAASS,IAFF,EAESX,CAAC,CAACE,MAAF,CAASC,KAFlB,GAAZ;AAIH,GALD;;AAOA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAAAZ,CAAC,EAAI;AACtBA,IAAAA,CAAC,CAACa,cAAF;AACA,QAAMC,aAAa,gCAAQxB,WAAW,CAACC,aAApB,IAAoCK,SAApC,EAAnB;AACAN,IAAAA,WAAW,CAACW,oBAAZ,mBACOX,WAAW,CAACQ,YADnB;AAEIP,MAAAA,aAAa,EAAEuB;AAFnB;AAIH,GAPD,CA5C0B,CAoD9B;;;AACI,MAAMC,aAAa,GAAGzB,WAAW,CAACQ,YAAZ,CAAyBP,aAAzB,CAAuCyB,GAAvC,CAA2C,UAAAC,MAAM,EAAI;AACvE,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,iBAAKA,MAAM,CAACvB,UAAZ,CADJ,EAEI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,UAApB;AAA+B,MAAA,SAAS,EAAC,cAAzC;AAAwD,MAAA,IAAI,EAAC,gBAA7D;AAA8E,MAAA,KAAK,EAAGuB,MAAM,CAACtB,UAA7F;AAA0G,MAAA,YAAY,EAAG,IAAzH;AAAgI,MAAA,QAAQ,EAAG,kBAAAK,CAAC;AAAA,eAAID,eAAe,CAACC,CAAD,CAAnB;AAAA;AAA5I,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAG;AAAA,eAAMI,aAAa,EAAnB;AAAA;AAAlB,cAHJ,CADJ;AAOH,GARqB,CAAtB;AAUA,SACI,MAAC,WAAD,QAEI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAsC,IAAA,QAAQ,EAAE,kBAAAJ,CAAC;AAAA,aAAIY,YAAY,CAACZ,CAAD,CAAhB;AAAA;AAAjD,KACI;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,WAAW,EAAC,aAArC;AAAmD,IAAA,QAAQ,EAAG,kBAAAA,CAAC;AAAA,aAAIU,wBAAwB,CAACV,CAAD,CAA5B;AAAA;AAA/D,IADJ,EAEI;AAAU,IAAA,IAAI,EAAC,YAAf;AAA4B,IAAA,SAAS,EAAC,mBAAtC;AAA0D,IAAA,WAAW,EAAC,4BAAtE;AAAmG,IAAA,QAAQ,EAAG,kBAAAA,CAAC;AAAA,aAAIU,wBAAwB,CAACV,CAAD,CAA5B;AAAA;AAA/G,IAFJ,EAGI;AAAQ,IAAA,IAAI,EAAC;AAAb,WAHJ,CAFJ,EAOI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKe,aADL,CAPJ,CADJ;AAiBH,CAhFD;;AAkFA,eAAe3B,YAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\r\nimport { DelayInput } from 'react-delay-input';\r\nimport './customScript.scss';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport { getAbsolutePath } from '../../../../_variables/_variables'\r\nimport { getSetting } from '../../../../_variables/ajaxVariables'\r\nimport settings from '../general'\r\n\r\nconst customScript = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const [ state, setState ] = useState({\r\n        customScripts:[]\r\n    })\r\n\r\n    const [ newScript, setNewScript ] = useState({\r\n        scriptName: '',\r\n        scriptBody: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            customScripts: contextData.siteIdentity.customScripts || []\r\n        })\r\n    }, [ contextData.siteIdentity.customScripts ]);\r\n\r\n    const onChangeHandler = e => {\r\n        contextData.dispatchSiteIdentity({\r\n            ...contextData.siteIdentity,\r\n            customScript: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSaveHandler = () => {\r\n        contextData.functions.updateSetting('identity', contextData.siteIdentity).then(() => {\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n    // useEffect(() => {\r\n    //     console.log(contextData.siteIdentity )\r\n    // }, [contextData.siteIdentity]);\r\n\r\n    const onNewScriptChangeHandler = e => {\r\n        setNewScript({\r\n            ...newScript,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onAddHandler = e => {\r\n        e.preventDefault()\r\n        const newScriptData = [ ...contextData.customScripts , newScript ]\r\n        contextData.dispatchSiteIdentity({\r\n            ...contextData.siteIdentity,\r\n            customScripts: newScriptData\r\n        })\r\n    }\r\n//[ ...contextData.customScripts, newScript ]\r\n    const renderScripts = contextData.siteIdentity.customScripts.map(script => {\r\n        return (\r\n            <div className='customScriptPageItem'>\r\n                <p>{ script.scriptName }</p>\r\n                <DelayInput element=\"textarea\" className='customScript' name='videoEmbedCode' value={ script.scriptBody } delayTimeout={ 1000 } onChange={ e => onChangeHandler(e) }/>\r\n                <button onClick={ () => onSaveHandler() }>Save</button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AdminLayout>\r\n\r\n            <form className='addCustomScriptForm' onSubmit={e => onAddHandler(e)}>\r\n                <input name='scriptName' placeholder='Script Name' onChange={ e => onNewScriptChangeHandler(e) }/>\r\n                <textarea name='scriptBody' className='addScriptTextarea' placeholder='Script with out Script Tag' onChange={ e => onNewScriptChangeHandler(e) }/>\r\n                <button type='submit' >Add</button>\r\n            </form>\r\n            <div className='customScripts'>\r\n                {renderScripts}\r\n            </div>\r\n            {/*<div className='customScriptPage'>*/}\r\n            {/*    <DelayInput element=\"textarea\" className='customScript' name='videoEmbedCode' value={ contextData.siteIdentity.customScript } delayTimeout={ 1000 } onChange={ e => onChangeHandler(e) }/>*/}\r\n            {/*    <button onClick={ () => onSaveHandler() }>Save</button>*/}\r\n            {/*</div>*/}\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default customScript;\r\n"]},"metadata":{},"sourceType":"module"}