{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './AdminRenderComments.scss';\nimport AdminCommentItem from './AdminCommentItem/AdminCommentItem';\n\nvar AdminRenderComments = function AdminRenderComments(props) {\n  var _useState = useState(''),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  var _useState2 = useState([]),\n      checkedItems = _useState2[0],\n      setCheckedItems = _useState2[1];\n\n  useEffect(function () {\n    console.log(checkedItems);\n  }, [checkedItems]);\n\n  var onChangeHandler = function onChangeHandler(e, id) {\n    e.target.checked ? setCheckedItems([].concat(_toConsumableArray(checkedItems), [id])) : setCheckedItems(checkedItems.filter(function (i) {\n      return i !== id;\n    }));\n  };\n\n  var renderComments = props.comments.map(function (comment) {\n    var HoveredHandler = function HoveredHandler() {\n      if (hovered === comment._id) {\n        return __jsx(\"div\", {\n          className: \"commentControl\"\n        }, __jsx(\"button\", null, \"Approve\"), __jsx(\"button\", null, \"Delete\"), __jsx(\"button\", null, \"Spam\"), __jsx(\"button\", null, \"Pending\"));\n      } else return null;\n    }; // return (\n    //     <div key={ props.comments.indexOf(comment) } className='adminCommentsItem' onMouseOver={ () => setHovered(comment._id) }>\n    //         <div className=\"adminCommentsItemHead\">\n    //             <input type='checkbox' checked={ checkedItems.includes(comment._id) } onChange={ e => onChangeHandler(e, comment._id) }/>\n    //             <p>{ comment.author }</p>\n    //         </div>\n    //         <div className=\"adminCommentsItemBody\">\n    //             <p>{ comment.body }</p>\n    //             <HoveredHandler/>\n    //         </div>\n    //     </div>\n    // )\n\n\n    return __jsx(AdminCommentItem, {\n      data: comment\n    });\n  });\n  return __jsx(\"div\", {\n    className: \"AdminRenderComments\"\n  }, renderComments);\n};\n\nexport default AdminRenderComments;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments.js"],"names":["React","useEffect","useState","useContext","useRef","AdminCommentItem","AdminRenderComments","props","hovered","setHovered","checkedItems","setCheckedItems","console","log","onChangeHandler","e","id","target","checked","filter","i","renderComments","comments","map","comment","HoveredHandler","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,4BAAP;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAAA,kBAEDL,QAAQ,CAAC,EAAD,CAFP;AAAA,MAEzBM,OAFyB;AAAA,MAEhBC,UAFgB;;AAAA,mBAGSP,QAAQ,CAAC,EAAD,CAHjB;AAAA,MAGzBQ,YAHyB;AAAA,MAGXC,eAHW;;AAKjCV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,GAFQ,EAEN,CAAEA,YAAF,CAFM,CAAT;;AAIA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAIC,EAAJ,EAAW;AAC/BD,IAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GACIP,eAAe,8BAAMD,YAAN,IAAoBM,EAApB,GADnB,GAEIL,eAAe,CAACD,YAAY,CAACS,MAAb,CAAoB,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,EAAV;AAAA,KAArB,CAAD,CAFnB;AAGH,GAJD;;AAQA,MAAMK,cAAc,GAAGd,KAAK,CAACe,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO,EAAI;AACjD,QAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,UAAIjB,OAAO,KAAKgB,OAAO,CAACE,GAAxB,EAA6B;AACzB,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI,gCADJ,EAEI,+BAFJ,EAGI,6BAHJ,EAII,gCAJJ,CADJ;AAQH,OATD,MASO,OAAO,IAAP;AAEV,KAZD,CADiD,CAcjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WACI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF;AAAxB,MADJ;AAGH,GA7BsB,CAAvB;AA8BA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACMH,cADN,CADJ;AAKH,CApDD;;AAqDA,eAAef,mBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './AdminRenderComments.scss'\r\nimport AdminCommentItem from './AdminCommentItem/AdminCommentItem'\r\n\r\nconst AdminRenderComments = props => {\r\n\r\n    const [ hovered, setHovered ] = useState('')\r\n    const [ checkedItems, setCheckedItems ] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log(checkedItems)\r\n    }, [ checkedItems ]);\r\n\r\n    const onChangeHandler = (e, id) => {\r\n        e.target.checked ?\r\n            setCheckedItems([ ...checkedItems, id ]) :\r\n            setCheckedItems(checkedItems.filter(i => i !== id))\r\n    }\r\n\r\n\r\n\r\n    const renderComments = props.comments.map(comment => {\r\n        const HoveredHandler = () => {\r\n            if (hovered === comment._id) {\r\n                return (\r\n                    <div className='commentControl'>\r\n                        <button>Approve</button>\r\n                        <button>Delete</button>\r\n                        <button>Spam</button>\r\n                        <button>Pending</button>\r\n                    </div>\r\n                )\r\n            } else return null\r\n\r\n        }\r\n        // return (\r\n        //     <div key={ props.comments.indexOf(comment) } className='adminCommentsItem' onMouseOver={ () => setHovered(comment._id) }>\r\n        //         <div className=\"adminCommentsItemHead\">\r\n        //             <input type='checkbox' checked={ checkedItems.includes(comment._id) } onChange={ e => onChangeHandler(e, comment._id) }/>\r\n        //             <p>{ comment.author }</p>\r\n        //         </div>\r\n        //         <div className=\"adminCommentsItemBody\">\r\n        //             <p>{ comment.body }</p>\r\n        //             <HoveredHandler/>\r\n        //         </div>\r\n        //     </div>\r\n        // )\r\n        return(\r\n            <AdminCommentItem data={comment}/>\r\n        )\r\n    })\r\n    return (\r\n        <div className='AdminRenderComments'>\r\n            { renderComments }\r\n        </div>\r\n    );\r\n};\r\nexport default AdminRenderComments;\r\n"]},"metadata":{},"sourceType":"module"}