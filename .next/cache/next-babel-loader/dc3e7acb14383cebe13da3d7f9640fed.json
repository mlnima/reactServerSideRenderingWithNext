{"ast":null,"code":"export const likeValueCalculator = (likes, dislikes) => {\n  return likes > 0 && dislikes > 0 ? Math.round(likes * 100 / (likes + dislikes)) : likes === 0 && dislikes === 0 ? 0 : likes === 0 && dislikes > 0 ? 0 : likes > 0 && dislikes === 0 ? 100 : 0;\n};\nexport const getAbsolutePath = async req => {\n  return (await req.protocol) + '://' + (await req.get('Host'));\n};\nexport const generateAbsolutePath = () => {\n  return window.location.protocol + '//' + window.location.host;\n};\nexport const clickPathGenerator = (clickedItemName, pathFromContexts) => {\n  if (pathFromContexts === '.') {\n    return './' + clickedItemName;\n  } else {\n    return pathFromContexts + '/' + clickedItemName;\n  }\n};\nexport const trimString = string => {\n  return trimString();\n};\nexport const convertVariableNameToName = name => {\n  return name.replace(/([A-Z])/g, \" $1\").charAt(0).toUpperCase() + name.replace(/([A-Z])/g, \" $1\").slice(1);\n};\nexport const fileTypeDetector = fileName => {\n  const splitFileName = fileName.split('.');\n  const fileFormat = splitFileName[splitFileName.length - 1].toLowerCase();\n  let finalFormat = '';\n  const fileFormats = {\n    image: ['jpg', 'png', 'jpeg', 'svg'],\n    video: ['mp4', '3gp'],\n    document: ['js', 'css', 'env', 'scss'],\n    application: ['exe'],\n    archive: ['zip', 'rar']\n  }; // const images = [ '.jpg', '.png', 'jpeg', 'svg' ]\n  // const video = [ '.mp4', '.3gp' ]\n  // const documents = [ '.js', '.css', '.env', '.scss' ]\n\n  Object.keys(fileFormats).forEach(formatArr => {\n    if (fileFormats[formatArr].includes(fileFormat)) {\n      finalFormat = formatArr;\n    }\n  }); // console.log(finalFormat )\n\n  return finalFormat;\n};","map":null,"metadata":{},"sourceType":"module"}