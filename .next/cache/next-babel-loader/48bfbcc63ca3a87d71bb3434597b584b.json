{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text';\nimport PaginationComponent from '../components/includes/PaginationComponent/PaginationComponent';\n\nconst Home = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.identity.title || '',\n    themeColor: props.identity.themeColor || '',\n    description: props.identity.description || '',\n    keywords: props.identity.keywords || [],\n    homePageH1: props.identity.homePageH1 || 'H1 element'\n  });\n  useEffect(() => {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(siteIdentity => _objectSpread({}, siteIdentity, {}, props.identity));\n    }\n  }, [props]);\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  const renderWidgets = props.widgets.map(widget => {\n    switch (widget.type) {\n      case 'posts':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          component: Posts,\n          posts: widget.posts,\n          title: widget.title,\n          redirectLink: widget.redirectLink,\n          redirectToTitle: widget.redirectToTitle,\n          pagination: widget.pagination\n        });\n        break;\n\n      case 'text':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          title: widget.title,\n          mainLinkUrl: \"/posts/\",\n          redirectToTitle: \"More videos\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, state.title), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: state.themeColor\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: state.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: state.keywords\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(\"h1\", null, state.homePageH1), renderWidgets));\n};\n\nHome.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  // let posts;\n  let navigation;\n  let identity;\n  let widgets; // let data = {\n  //     pageNo: query.pageNo ? parseInt(query.pageNo) : 1,\n  //     size: 30,\n  //     totalPosts: 0,\n  //     postType: 'all',\n  //     keyword: '',\n  //     status: 'published',\n  //     author: 'all',\n  //     fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\n  //     checkedPosts: [],\n  // };\n\n  try {\n    const identityData = await getSetting('identity');\n    const navigationData = await getSetting('navigation');\n    const widgetsData = await getWidgetsWithData('all');\n    identity = identityData.data.setting ? identityData.data.setting.data : {};\n    navigation = navigationData.data.setting ? navigationData.data.setting : {};\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    identity,\n    navigation,\n    widgets\n  };\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","Widget","Posts","withRouter","getPosts","Head","axios","getSetting","getWidgets","getWidgetsWithData","Text","PaginationComponent","Home","props","contextData","state","setState","title","identity","themeColor","description","keywords","homePageH1","navigation","dispatchNavigationData","data","dispatchSiteIdentity","siteIdentity","console","log","renderWidgets","widgets","map","widget","type","_id","text","textAlign","posts","redirectLink","redirectToTitle","pagination","getInitialProps","pathname","query","req","res","err","identityData","navigationData","widgetsData","setting","e","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport Widget from \"../components/includes/Widget/Widget\";\r\nimport Posts from \"../components/includes/Posts/Posts\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\r\nimport Head from \"next/head\";\r\nimport axios from \"axios\";\r\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\r\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text'\r\nimport PaginationComponent from '../components/includes/PaginationComponent/PaginationComponent'\r\n\r\nconst Home = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        title: props.identity.title || '',\r\n        themeColor: props.identity.themeColor || '',\r\n        description: props.identity.description || '',\r\n        keywords: props.identity.keywords || [],\r\n        homePageH1: props.identity.homePageH1 || 'H1 element'\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n    }, [ props ]);\r\n\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n\r\n    const renderWidgets = props.widgets.map(widget => {\r\n        switch ( widget.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } component={ Posts } posts={ widget.posts } title={ widget.title } redirectLink={ widget.redirectLink } redirectToTitle={ widget.redirectToTitle }\r\n                            pagination={ widget.pagination }/>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } title={ widget.title } mainLinkUrl='/posts/' redirectToTitle='More videos'/>\r\n                )\r\n                break\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{ state.title }</title>\r\n                <meta name=\"theme-color\" content={ state.themeColor }/>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n                <meta charSet=\"utf-8\"/>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n                <meta name=\"description\" content={ state.description }/>\r\n                <meta name=\"keywords\" content={ state.keywords }/>\r\n                <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n            </Head>\r\n            <div className='HomePage'>\r\n                <h1>{ state.homePageH1 }</h1>\r\n                { renderWidgets }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    // let posts;\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n    // let data = {\r\n    //     pageNo: query.pageNo ? parseInt(query.pageNo) : 1,\r\n    //     size: 30,\r\n    //     totalPosts: 0,\r\n    //     postType: 'all',\r\n    //     keyword: '',\r\n    //     status: 'published',\r\n    //     author: 'all',\r\n    //     fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n    //     checkedPosts: [],\r\n    // };\r\n\r\n    try {\r\n\r\n        const identityData = await getSetting('identity');\r\n        const navigationData = await getSetting('navigation');\r\n        const widgetsData = await getWidgetsWithData('all')\r\n\r\n        identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n        navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n        widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    } catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { identity, navigation, widgets }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}