{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport { AppContext } from \"../../../../context/AppContext\"; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nvar Navigation = function Navigation(props) {\n  var contextData = useContext(AppContext);\n  var navigation = useRef(null);\n\n  var _useState = useState({\n    isOpen: false,\n    items: []\n  }),\n      navigationData = _useState[0],\n      setNavigationData = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(function () {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n      } else {\n        navigation.current.style.display = 'none';\n      }\n    }\n  }, [navigationData.isOpen]);\n  useEffect(function () {\n    setNavigationData(_objectSpread({}, navigationData, {\n      items: contextData.navigationData\n    }));\n  }, [contextData.navigationData]);\n\n  var onNavigationMobileBtnClickHandler = function onNavigationMobileBtnClickHandler() {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  useEffect(function () {\n    console.log(navigationData);\n  }, [navigationData]);\n  var renderNavigationItems = navigationData.items.map(function (item) {\n    return __jsx(Link, {\n      href: item.url\n    }, __jsx(\"a\", null, item.title));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    className: \"navigationMobileBtn\",\n    onClick: function onClick() {\n      return onNavigationMobileBtnClickHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: navigationData.isOpen ? 'times' : 'bars'\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Home\")), __jsx(Link, {\n    href: \"/categories\"\n  }, __jsx(\"a\", null, \"Categories\")), __jsx(Link, {\n    href: \"/tags\"\n  }, __jsx(\"a\", null, \"Tags\"))));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Navigation/Navigation.js"],"names":["React","useState","useRef","useEffect","useContext","Link","FA","AppContext","Navigation","props","contextData","navigation","isOpen","items","navigationData","setNavigationData","window","innerWidth","current","style","display","onNavigationMobileBtnClickHandler","console","log","renderNavigationItems","map","item","url","title"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\n// import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\r\n\r\nconst Navigation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const navigation = useRef(null)\r\n    const [ navigationData, setNavigationData ] = useState({\r\n        isOpen: false,\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 768) {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: false\r\n            });\r\n\r\n        } else {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: true\r\n            })\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (navigation.current) {\r\n            if (navigationData.isOpen) {\r\n                navigation.current.style.display = 'flex'\r\n            } else {\r\n                navigation.current.style.display = 'none'\r\n            }\r\n        }\r\n    }, [ navigationData.isOpen ]);\r\n\r\n    useEffect(() => {\r\n        setNavigationData({\r\n            ...navigationData,\r\n            items: contextData.navigationData\r\n        })\r\n    }, [ contextData.navigationData ]);\r\n\r\n    const onNavigationMobileBtnClickHandler = () => {\r\n        navigationData.isOpen ? setNavigationData({ ...navigationData, isOpen: false }) : setNavigationData({ ...navigationData, isOpen: true })\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(navigationData )\r\n    },[navigationData ]);\r\n\r\n    const renderNavigationItems = navigationData.items.map(item=>{\r\n        return(\r\n            <Link href={item.url}><a>{item.title}</a></Link>\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <button className='navigationMobileBtn' onClick={ () => onNavigationMobileBtnClickHandler() }><FA className='fontawesomeMedium' name={ navigationData.isOpen ? 'times' : 'bars' }/></button>\r\n\r\n            <div ref={ navigation } className='Navigation'>\r\n                <Link href='/'><a>Home</a></Link>\r\n                <Link href='/categories'><a>Categories</a></Link>\r\n                <Link href='/tags'><a>Tags</a></Link>\r\n                {/*{renderNavigationItems}*/}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}