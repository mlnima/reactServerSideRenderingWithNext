{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nimport dataDecoder from '../server/tools/dataDecoder';\nimport { withRouter } from \"next/router\";\nexport const AppContext = React.createContext();\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({\n    loading: false,\n    videoPreviewID: ''\n  });\n  const {\n    0: alert,\n    1: dispatchAlert\n  } = useState({\n    active: false,\n    alertMessage: '',\n    type: ''\n  }); // const[absolutePath,dispatchAbsolutePath]=useState('http://localhost:3000/')\n\n  const {\n    0: siteIdentity,\n    1: dispatchSiteIdentity\n  } = useState({\n    title: 'site title',\n    themeColor: '#000',\n    description: 'site description',\n    keywords: [],\n    customScripts: []\n  });\n  const {\n    0: siteDesign,\n    1: dispatchSiteDesign\n  } = useState({});\n  const {\n    0: settings,\n    1: dispatchSettings\n  } = useState({\n    adminPanelSideBar: false,\n    textEditorCurrentFile: '',\n    textEditorEditMode: false\n  });\n  const {\n    0: galleryData,\n    1: setGalleryData\n  } = useState({\n    path: './static'\n  });\n  const {\n    0: userData,\n    1: dispatchUserData\n  } = useState({});\n  const {\n    0: navigationData,\n    1: dispatchNavigationData\n  } = useState([]);\n  const {\n    0: editingPostData,\n    1: dispatchEditingPostData\n  } = useState({\n    categories: [],\n    actors: [],\n    tags: [],\n    title: '',\n    author: '',\n    description: '',\n    disLikes: 0,\n    mainThumbnail: '',\n    videoTrailerUrl: '',\n    videoEmbedCode: '',\n    likes: 0,\n    quality: '',\n    status: '',\n    postType: '',\n    sourceSite: '',\n    views: 0\n  });\n  const {\n    0: adminPosts,\n    1: dispatchAdminPosts\n  } = useState([]);\n  const {\n    0: adminPostsData,\n    1: dispatchAdminPostsData\n  } = useState({\n    pageNo: 1,\n    size: 30,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'all',\n    author: 'all',\n    fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n    checkedPosts: []\n  });\n  const {\n    0: widgetsSettings,\n    1: dispatchWidgetsSettings\n  } = useState({\n    widgets: []\n  }); // const [ adminWidgets, dispatchAdminWidgets ] = useState({\n  //     home:[],\n  //     homePageSidebar:[],\n  //     postPageSidebar:[],\n  //     postsPageSidebar:[],\n  //     footer:[],\n  //     tagsPageSidebar:[],\n  //     categoriesPageSidebar:[],\n  //     actorsPageSidebar:[],\n  //     header:[]\n  // });\n\n  const {\n    0: siteWidgets,\n    1: setSiteWidgets\n  } = useState([]);\n  const {\n    0: videoPostsDataForClient,\n    1: dispatchVideoPostsDataForClient\n  } = useState({\n    pageNo: 1,\n    size: 12,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'all',\n    author: 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    checkedPosts: []\n  });\n  const {\n    0: functions,\n    1: dispatchFunctions\n  } = useState({\n    getAndSetUserInfo: async () => {\n      if (localStorage.wt) {\n        await axios.post('/api/v1/users/getUserInfo', {\n          token: localStorage.wt\n        }).then(res => {\n          dispatchUserData(_objectSpread({}, userData, {}, res.data.userData));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    logOutUser: () => {\n      localStorage.removeItem('wt');\n      dispatchUserData({});\n      props.router.push('/');\n    },\n    goToAdminPanel: () => {\n      props.router.push('/admin');\n    },\n    goToHomePage: () => {// props.router.push('/')\n    },\n    savePosts: async data => {\n      const body = {\n        postData: data,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/createNewPost', body);\n    },\n    updatePost: async data => {\n      const body = {\n        postData: data,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/updatePost', body);\n    },\n    getPosts: async data => {\n      const body = _objectSpread({}, data);\n\n      return await axios.post('/api/v1/posts', body);\n    },\n    //exported to variables file ----\n    getPost: async _id => {\n      const body = {\n        _id,\n        token: localStorage.wt\n      };\n      return await axios.post('/api/v1/posts/post', body);\n    },\n    setEditingPostData: (name, value) => {\n      dispatchEditingPostData(editingPostData => _objectSpread({}, editingPostData, {\n        [name]: value\n      }));\n    },\n    bulkActionPost: (ids, status) => {\n      dispatchState(_objectSpread({}, state, {\n        loading: true\n      }));\n      const body = {\n        ids,\n        status,\n        token: localStorage.wt\n      };\n      axios.post('/api/v1/posts/postsBulkAction', body).then(() => {\n        props.router.push({\n          pathname: props.router.pathname,\n          query: _objectSpread({}, props.router.query)\n        });\n        dispatchState(_objectSpread({}, state, {\n          loading: false\n        }));\n      }).catch(() => {\n        dispatchState(_objectSpread({}, state, {\n          loading: false\n        }));\n      });\n    },\n    deletePost: id => {\n      const body = {\n        _id: id,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/deletePost', body);\n    },\n    updateSetting: async (type, data) => {\n      const body = {\n        token: localStorage.wt,\n        type,\n        data\n      };\n      return await axios.post(window.location.origin + '/api/v1/settings/update', body);\n    }\n  });\n  useEffect(() => {\n    const testData = dataDecoder({\n      test: 'man nima hastam'\n    }, process.env.REACT_APP_JWT_KEY);\n    console.log(testData);\n    functions.getAndSetUserInfo();\n  }, []);\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state,\n      dispatchState,\n      settings,\n      dispatchSettings,\n      userData,\n      dispatchUserData,\n      functions,\n      editingPostData,\n      dispatchEditingPostData,\n      adminPosts,\n      dispatchAdminPosts,\n      adminPostsData,\n      dispatchAdminPostsData,\n      videoPostsDataForClient,\n      dispatchVideoPostsDataForClient,\n      navigationData,\n      dispatchNavigationData,\n      dispatchSiteIdentity,\n      siteIdentity,\n      widgetsSettings,\n      dispatchWidgetsSettings,\n      siteDesign,\n      dispatchSiteDesign,\n      alert,\n      dispatchAlert,\n      siteWidgets,\n      setSiteWidgets // adminWidgets,\n      // dispatchAdminWidgets\n\n    }\n  }, props.children));\n};\n\nexport const AppProviderWithRouter = withRouter(AppProvider);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","dataDecoder","withRouter","AppContext","createContext","AppProvider","props","state","dispatchState","loading","videoPreviewID","alert","dispatchAlert","active","alertMessage","type","siteIdentity","dispatchSiteIdentity","title","themeColor","description","keywords","customScripts","siteDesign","dispatchSiteDesign","settings","dispatchSettings","adminPanelSideBar","textEditorCurrentFile","textEditorEditMode","galleryData","setGalleryData","path","userData","dispatchUserData","navigationData","dispatchNavigationData","editingPostData","dispatchEditingPostData","categories","actors","tags","author","disLikes","mainThumbnail","videoTrailerUrl","videoEmbedCode","likes","quality","status","postType","sourceSite","views","adminPosts","dispatchAdminPosts","adminPostsData","dispatchAdminPostsData","pageNo","size","totalPosts","keyword","fields","checkedPosts","widgetsSettings","dispatchWidgetsSettings","widgets","siteWidgets","setSiteWidgets","videoPostsDataForClient","dispatchVideoPostsDataForClient","functions","dispatchFunctions","getAndSetUserInfo","localStorage","wt","post","token","then","res","data","catch","err","console","log","logOutUser","removeItem","router","push","goToAdminPanel","goToHomePage","savePosts","body","postData","updatePost","getPosts","getPost","_id","setEditingPostData","name","value","bulkActionPost","ids","pathname","query","deletePost","id","updateSetting","window","location","origin","testData","test","process","env","REACT_APP_JWT_KEY","children","AppProviderWithRouter"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\nimport dataDecoder from '../server/tools/dataDecoder'\r\n\r\nimport { withRouter } from \"next/router\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({\r\n        loading: false,\r\n        videoPreviewID: '',\r\n    });\r\n    const [ alert, dispatchAlert ] = useState({\r\n        active: false,\r\n        alertMessage: '',\r\n        type: ''\r\n    })\r\n\r\n    // const[absolutePath,dispatchAbsolutePath]=useState('http://localhost:3000/')\r\n    const [ siteIdentity, dispatchSiteIdentity ] = useState({\r\n        title: 'site title',\r\n        themeColor: '#000',\r\n        description: 'site description',\r\n        keywords: [],\r\n        customScripts: []\r\n    });\r\n    const [ siteDesign, dispatchSiteDesign ] = useState({});\r\n\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        textEditorCurrentFile: '',\r\n        textEditorEditMode: false\r\n    });\r\n\r\n    const [ galleryData, setGalleryData ] = useState({\r\n        path: './static'\r\n    })\r\n\r\n    const [ userData, dispatchUserData ] = useState({});\r\n    const [ navigationData, dispatchNavigationData ] = useState([]);\r\n    const [ editingPostData, dispatchEditingPostData ] = useState({\r\n        categories: [],\r\n        actors: [],\r\n        tags: [],\r\n        title: '',\r\n        author: '',\r\n        description: '',\r\n        disLikes: 0,\r\n        mainThumbnail: '',\r\n        videoTrailerUrl: '',\r\n        videoEmbedCode: '',\r\n        likes: 0,\r\n        quality: '',\r\n        status: '',\r\n        postType: '',\r\n        sourceSite: '',\r\n        views: 0,\r\n    });\r\n    const [ adminPosts, dispatchAdminPosts ] = useState([]);\r\n    const [ adminPostsData, dispatchAdminPostsData ] = useState({\r\n        pageNo: 1,\r\n        size: 30,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [ widgetsSettings, dispatchWidgetsSettings ] = useState({\r\n        widgets: [],\r\n    });\r\n\r\n    // const [ adminWidgets, dispatchAdminWidgets ] = useState({\r\n    //     home:[],\r\n    //     homePageSidebar:[],\r\n    //     postPageSidebar:[],\r\n    //     postsPageSidebar:[],\r\n    //     footer:[],\r\n    //     tagsPageSidebar:[],\r\n    //     categoriesPageSidebar:[],\r\n    //     actorsPageSidebar:[],\r\n    //     header:[]\r\n    // });\r\n\r\n    const [ siteWidgets, setSiteWidgets ] = useState([])\r\n\r\n    const [ videoPostsDataForClient, dispatchVideoPostsDataForClient ] = useState({\r\n        pageNo: 1,\r\n        size: 12,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    });\r\n\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo: async () => {\r\n            if (localStorage.wt) {\r\n                await axios.post('/api/v1/users/getUserInfo', { token: localStorage.wt }).then(res => {\r\n                    dispatchUserData({ ...userData, ...res.data.userData });\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        logOutUser: () => {\r\n            localStorage.removeItem('wt');\r\n            dispatchUserData({})\r\n            props.router.push('/')\r\n        },\r\n        goToAdminPanel: () => {\r\n            props.router.push('/admin')\r\n        },\r\n        goToHomePage: () => {\r\n            // props.router.push('/')\r\n        },\r\n        savePosts: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/createNewPost', body)\r\n        },\r\n        updatePost: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/updatePost', body)\r\n        },\r\n        getPosts: async (data) => {\r\n            const body = {\r\n                ...data,\r\n            };\r\n            return await axios.post('/api/v1/posts', body)\r\n        },\r\n        //exported to variables file ----\r\n        getPost: async (_id) => {\r\n            const body = {\r\n                _id,\r\n                token: localStorage.wt\r\n            };\r\n            return await axios.post('/api/v1/posts/post', body)\r\n        },\r\n        setEditingPostData: (name, value) => {\r\n            dispatchEditingPostData(editingPostData => ({\r\n                ...editingPostData,\r\n                [name]: value\r\n            }))\r\n        },\r\n        bulkActionPost: (ids, status) => {\r\n            dispatchState({\r\n                ...state,\r\n                loading: true\r\n            });\r\n            const body = {\r\n                ids,\r\n                status,\r\n                token: localStorage.wt\r\n            };\r\n            axios.post('/api/v1/posts/postsBulkAction', body).then(() => {\r\n                props.router.push({ pathname: props.router.pathname, query: { ...props.router.query } })\r\n                dispatchState({\r\n                    ...state,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(() => {\r\n                dispatchState({\r\n                    ...state,\r\n                    loading: false\r\n                });\r\n            })\r\n        },\r\n\r\n        deletePost: (id) => {\r\n            const body = {\r\n                _id: id,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/deletePost', body)\r\n        },\r\n        updateSetting: async (type, data) => {\r\n            const body = {\r\n                token: localStorage.wt,\r\n                type,\r\n                data\r\n            };\r\n            return await axios.post(window.location.origin + '/api/v1/settings/update', body)\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n       const testData = dataDecoder({test:'man nima hastam'},process.env.REACT_APP_JWT_KEY)\r\n        console.log( testData)\r\n        functions.getAndSetUserInfo()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions,\r\n                    editingPostData,\r\n                    dispatchEditingPostData,\r\n                    adminPosts,\r\n                    dispatchAdminPosts,\r\n                    adminPostsData,\r\n                    dispatchAdminPostsData,\r\n                    videoPostsDataForClient,\r\n                    dispatchVideoPostsDataForClient,\r\n                    navigationData,\r\n                    dispatchNavigationData,\r\n                    dispatchSiteIdentity,\r\n                    siteIdentity,\r\n                    widgetsSettings,\r\n                    dispatchWidgetsSettings,\r\n                    siteDesign,\r\n                    dispatchSiteDesign,\r\n                    alert,\r\n                    dispatchAlert,\r\n                    siteWidgets,\r\n                    setSiteWidgets,\r\n                    // adminWidgets,\r\n                    // dispatchAdminWidgets\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const AppProviderWithRouter = withRouter(AppProvider);\r\n\r\n"]},"metadata":{},"sourceType":"module"}