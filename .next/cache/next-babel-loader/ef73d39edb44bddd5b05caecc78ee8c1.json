{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\n\nvar TagsAndCategoriesActors = function TagsAndCategoriesActors(props) {\n  var _useState = useState({\n    data: props.data || [],\n    type: props.type || 'tags'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    setState(_objectSpread({}, state, {\n      data: [].concat(_toConsumableArray(state.data), ['test'])\n    }));\n  }, []);\n  var renderData = state.data.map(function (item) {\n    var path = '/' + state.type + '/' + item;\n    return __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", null, item, \"xx\"));\n  });\n\n  if (props.data) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, renderData);\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/TagsAndCategoriesActors/TagsAndCategoriesActors.js"],"names":["React","useEffect","useState","useContext","Link","TagsAndCategoriesActors","props","data","type","state","setState","renderData","map","item","path"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AAAA,kBACXJ,QAAQ,CAAC;AAC/BK,IAAAA,IAAI,EAACD,KAAK,CAACC,IAAN,IAAc,EADY;AAE/BC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,IAAY;AAFa,GAAD,CADG;AAAA,MAC9BC,KAD8B;AAAA,MACvBC,QADuB;;AAQrCT,EAAAA,SAAS,CAAC,YAAI;AAClBS,IAAAA,QAAQ,mBACDD,KADC;AAEJF,MAAAA,IAAI,+BAAME,KAAK,CAACF,IAAZ,IAAiB,MAAjB;AAFA,OAAR;AAIK,GALQ,EAKP,EALO,CAAT;AASA,MAAMI,UAAU,GAAGF,KAAK,CAACF,IAAN,CAAWK,GAAX,CAAe,UAAAC,IAAI,EAAE;AACpC,QAAMC,IAAI,GAAG,MAAML,KAAK,CAACD,IAAZ,GAAmB,GAAnB,GAAyBK,IAAtC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,IAAZ;AAAkB,MAAA,GAAG,EAAED;AAAvB,OAA6B,iBAAIA,IAAJ,OAA7B,CADJ;AAGH,GALkB,CAAnB;;AAOA,MAAIP,KAAK,CAACC,IAAV,EAAe;AACX,WACI;AAAK,MAAA,SAAS,EAAEE,KAAK,CAACD,IAAN,GAAa;AAA7B,OACKG,UADL,CADJ;AAKH,GAND,MAMM,OAAO,IAAP;AAET,CAhCD;;AAiCA,eAAeN,uBAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport Link from \"next/link\";\r\nconst TagsAndCategoriesActors = props => {\r\n    const [state, setState] = useState({\r\n        data:props.data || [],\r\n        type: props.type||'tags'\r\n    });\r\n\r\n\r\n\r\n    useEffect(()=>{\r\nsetState({\r\n    ...state,\r\n    data: [...state.data,'test']\r\n})\r\n    },[ ]);\r\n\r\n\r\n\r\n    const renderData = state.data.map(item=>{\r\n        const path = '/' + state.type + '/' + item;\r\n        return(\r\n            <Link href={path} key={item}><a>{item}xx</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.data){\r\n        return (\r\n            <div className={state.type + ' tags-categories-actors'}>\r\n                {renderData}\r\n            </div>\r\n        );\r\n    }else return null\r\n\r\n};\r\nexport default TagsAndCategoriesActors;"]},"metadata":{},"sourceType":"module"}