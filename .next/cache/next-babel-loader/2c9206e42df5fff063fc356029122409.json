{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../../../context/AppContext';\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables';\n\nvar WidgetModel = function WidgetModel(props) {\n  var contextData = useContext(AppContext);\n  var title = useRef(null);\n  var categories = useRef(null);\n  var tags = useRef(null);\n  var count = useRef(null);\n  var pagination = useRef(null);\n  var redirectLink = useRef(null);\n\n  var _useState = useState({\n    title: props.data.title || '',\n    categories: props.data.categories || [],\n    tags: props.data.tags || [],\n    count: props.data.count || 6,\n    pagination: props.data.pagination || false,\n    redirectLink: props.data.redirectLink || '',\n    type: props.data.type || 'posts',\n    position: props.data.position || 'home',\n    sortBy: props.data.position || '-id',\n    text: props.data.text || '',\n    textAlign: props.data.text || 'center',\n    customHtml: props.data.customHtml || ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onDeleteHandler = function onDeleteHandler() {\n    deleteWidgets(props.data._id).then(function () {\n      contextData.dispatchWidgetsSettings({\n        widgets: contextData.widgetsSettings.widgets.filter(function (w) {\n          return w._id !== props.data._id;\n        })\n      });\n    });\n  };\n\n  var onSaveHandler = function onSaveHandler() {\n    updateWidgets(props.data._id, state).then(function (res) {\n      // let newData = res.data.updatedWidgets\n      // setState({ ...state, ...newData })\n      getWidgets('all').then(function (res) {\n        contextData.dispatchWidgetsSettings({\n          widgets: _toConsumableArray(res.data.widgets)\n        });\n      });\n    });\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onNewCategoryAddHandler = function onNewCategoryAddHandler() {\n    setState(_objectSpread({}, state, {\n      categories: [].concat(_toConsumableArray(state.categories), [categories.current.value])\n    }));\n    categories.current.value = '';\n  };\n\n  var onNewTagAddHandler = function onNewTagAddHandler() {\n    setState(_objectSpread({}, state, {\n      tags: [].concat(_toConsumableArray(state.tags), [tags.current.value])\n    }));\n    tags.current.value = '';\n  };\n\n  var deleteTagHandler = function deleteTagHandler(e) {\n    setState(_objectSpread({}, state, {\n      tags: state.tags.filter(function (tag) {\n        return tag !== e.target.name;\n      })\n    }));\n  };\n\n  var deleteCategoryHandler = function deleteCategoryHandler(e) {\n    setState(_objectSpread({}, state, {\n      categories: state.categories.filter(function (category) {\n        return category !== e.target.name;\n      })\n    }));\n  };\n\n  var renderTags = state.tags.map(function (tag) {\n    return __jsx(\"button\", {\n      name: tag,\n      onClick: function onClick(e) {\n        return deleteTagHandler(e);\n      }\n    }, tag, \"X\");\n  });\n  var renderCategories = state.categories.map(function (category) {\n    return __jsx(\"button\", {\n      name: category,\n      onClick: function onClick(e) {\n        return deleteCategoryHandler(e);\n      }\n    }, category, \"X\");\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      var items = ['count'];\n      items.forEach(function (item) {\n        if ([item].current) {\n          [item].current.value = state[item];\n        }\n      });\n    }, 2000);\n  }, []);\n\n  var RenderOptionByFormat = function RenderOptionByFormat() {\n    switch (state.type) {\n      case 'posts':\n        return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Sort By:\"), __jsx(\"select\", {\n          name: \"sortBy\",\n          value: state.sortBy,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }, __jsx(\"option\", {\n          value: \"id\"\n        }, \"ID\"), __jsx(\"option\", {\n          value: \"views\"\n        }, \"Views\"), __jsx(\"option\", {\n          value: \"likes\"\n        }, \"Likes\")), __jsx(\"p\", null, \"Categories:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: categories,\n          name: \"category\",\n          className: \"category\",\n          placeholder: \"Categories\"\n        }), __jsx(\"button\", {\n          onClick: function onClick() {\n            return onNewCategoryAddHandler();\n          }\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderCategories), __jsx(\"p\", null, \"Tags:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: tags,\n          className: \"tags\",\n          name: \"tags\",\n          placeholder: \"Tags\"\n        }), __jsx(\"button\", {\n          onClick: function onClick() {\n            return onNewTagAddHandler();\n          }\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderTags), __jsx(\"p\", null, \"Count:\"), __jsx(\"input\", {\n          ref: count,\n          name: \"count\",\n          type: \"number\",\n          className: \"count\",\n          placeholder: \"count\",\n          value: state.count,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }), __jsx(\"span\", null, \"Pagination:\"), __jsx(\"select\", {\n          name: \"pagination\",\n          value: state.pagination,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }, __jsx(\"option\", {\n          value: false\n        }, \"false\"), __jsx(\"option\", {\n          value: true\n        }, \"true\")));\n        break;\n\n      case 'text':\n        return __jsx(React.Fragment, null);\n        break;\n\n      default:\n        return null;\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"widgetModel\"\n  }, __jsx(\"div\", {\n    className: \"widgetInfo\"\n  }, __jsx(\"label\", {\n    className: \"widgetId\"\n  }, __jsx(\"p\", null, \"ID :\"), \" \", __jsx(\"p\", null, props.data._id))), __jsx(\"p\", null, \"Title:\"), __jsx(\"input\", {\n    name: \"title\",\n    ref: title,\n    className: \"title\",\n    placeholder: \"Title\",\n    value: state.title,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"p\", null, \"Type:\"), __jsx(\"select\", {\n    name: \"type\",\n    value: state.type,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"posts\"\n  }, \"Posts\"), __jsx(\"option\", {\n    value: \"text\"\n  }, \"Text\")), __jsx(\"p\", null, \"Position:\"), __jsx(\"select\", {\n    name: \"position\",\n    value: state.position,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"home\"\n  }, \"Home\"), __jsx(\"option\", {\n    value: \"sidebar\"\n  }, \"Sidebar\"), __jsx(\"option\", {\n    value: \"postPageSideBar\"\n  }, \"postPageSideBar\"), __jsx(\"option\", {\n    value: \"footer\"\n  }, \"footer\")), __jsx(\"p\", null, \"Text:\"), __jsx(\"textarea\", {\n    name: \"text\",\n    value: state.text,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"p\", null, \"Text Align:\"), __jsx(\"select\", {\n    name: \"textAlign\",\n    value: state.textAlign,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"left\"\n  }, \"Left\"), __jsx(\"option\", {\n    value: \"center\"\n  }, \"Center\"), __jsx(\"option\", {\n    value: \"right\"\n  }, \"Right\")), __jsx(RenderOptionByFormat, null), __jsx(\"p\", null, \"Redirect Link:\"), __jsx(\"input\", {\n    className: \"redirectLink\",\n    name: \"redirectLink\",\n    placeholder: \"Redirect\",\n    value: state.redirectLink,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"control\"\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return onSaveHandler();\n    }\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onDeleteHandler();\n    }\n  }, \"Delete\")));\n};\n\nexport default WidgetModel;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/widgetsModel/WidgetModel/WidgetModel.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","deleteWidgets","getWidgets","updateWidgets","WidgetModel","props","contextData","title","categories","tags","count","pagination","redirectLink","data","type","position","sortBy","text","textAlign","customHtml","state","setState","onDeleteHandler","_id","then","dispatchWidgetsSettings","widgets","widgetsSettings","filter","w","onSaveHandler","res","onChangeHandler","e","target","name","value","onNewCategoryAddHandler","current","onNewTagAddHandler","deleteTagHandler","tag","deleteCategoryHandler","category","renderTags","map","renderCategories","setTimeout","items","forEach","item","RenderOptionByFormat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables'\r\n\r\nconst WidgetModel = props => {\r\n    const contextData = useContext(AppContext);\r\n    const title = useRef(null)\r\n    const categories = useRef(null)\r\n    const tags = useRef(null)\r\n    const count = useRef(null)\r\n    const pagination = useRef(null)\r\n    const redirectLink = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        title: props.data.title || '',\r\n        categories: props.data.categories || [],\r\n        tags: props.data.tags || [],\r\n        count: props.data.count || 6,\r\n        pagination: props.data.pagination || false,\r\n        redirectLink: props.data.redirectLink || '',\r\n        type: props.data.type || 'posts',\r\n        position: props.data.position || 'home',\r\n        sortBy: props.data.position || '-id',\r\n        text: props.data.text || '',\r\n        textAlign:props.data.text || 'center',\r\n        customHtml: props.data.customHtml || ''\r\n    });\r\n\r\n    const onDeleteHandler = () => {\r\n        deleteWidgets(props.data._id).then(() => {\r\n            contextData.dispatchWidgetsSettings({\r\n                widgets: contextData.widgetsSettings.widgets.filter(w => w._id !== props.data._id)\r\n            })\r\n        })\r\n    }\r\n    const onSaveHandler = () => {\r\n        updateWidgets(props.data._id, state).then(res => {\r\n            // let newData = res.data.updatedWidgets\r\n            // setState({ ...state, ...newData })\r\n            getWidgets('all').then(res => {\r\n                contextData.dispatchWidgetsSettings({\r\n                    widgets: [ ...res.data.widgets ]\r\n                })\r\n            })\r\n        })\r\n    }\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const onNewCategoryAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            categories: [ ...state.categories, categories.current.value ]\r\n        })\r\n        categories.current.value = ''\r\n    }\r\n    const onNewTagAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            tags: [ ...state.tags, tags.current.value ]\r\n        })\r\n        tags.current.value = ''\r\n    }\r\n    const deleteTagHandler = e => {\r\n        setState({\r\n            ...state,\r\n            tags: state.tags.filter(tag => tag !== e.target.name)\r\n        })\r\n    }\r\n    const deleteCategoryHandler = e => {\r\n        setState({\r\n            ...state,\r\n            categories: state.categories.filter(category => category !== e.target.name)\r\n        })\r\n    }\r\n\r\n    const renderTags = state.tags.map(tag => {\r\n        return (\r\n            <button name={ tag } onClick={ e => deleteTagHandler(e) }>{ tag }X</button>\r\n        )\r\n    })\r\n    const renderCategories = state.categories.map(category => {\r\n        return (\r\n            <button name={ category } onClick={ e => deleteCategoryHandler(e) }>{ category }X</button>\r\n        )\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        setTimeout(()=>{\r\n            let items= ['count']\r\n            items.forEach(item=>{\r\n                if ([item].current){\r\n                    [item].current.value=state[item]\r\n                }\r\n            })\r\n        },2000)\r\n\r\n    },[])\r\n\r\n    const RenderOptionByFormat = () => {\r\n        switch ( state.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <>\r\n                        <p>Sort By:</p>\r\n                        <select name='sortBy' value={ state.sortBy } onChange={ e => onChangeHandler(e) }>\r\n                            <option value='id'>ID</option>\r\n                            <option value='views'>Views</option>\r\n                            <option value='likes'>Likes</option>\r\n                        </select>\r\n                        <p>Categories:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ categories } name='category' className='category' placeholder='Categories'/>\r\n                            <button onClick={ () => onNewCategoryAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderCategories }\r\n                        </div>\r\n                        <p>Tags:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ tags } className='tags' name='tags' placeholder='Tags'/>\r\n                            <button onClick={ () => onNewTagAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderTags }\r\n                        </div>\r\n                        <p>Count:</p>\r\n                        <input ref={count} name='count' type='number' className='count' placeholder='count' value={state.count}  onChange={ e => onChangeHandler(e) }/>\r\n                        <span>Pagination:</span>\r\n                        <select name='pagination' value={ state.pagination } onChange={ e => onChangeHandler(e) }>\r\n                            <option value={ false }>false</option>\r\n                            <option value={ true }>true</option>\r\n                        </select>\r\n                    </>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n                break\r\n            default:\r\n                return null\r\n                break\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='widgetModel'>\r\n            <div className='widgetInfo'>\r\n                <label className='widgetId'><p>ID :</p> <p>{ props.data._id }</p></label>\r\n            </div>\r\n            <p>Title:</p>\r\n            <input name='title' ref={ title } className='title' placeholder='Title' value={ state.title } onChange={ e => onChangeHandler(e) }/>\r\n            <p>Type:</p>\r\n            <select name='type' value={ state.type } onChange={ e => onChangeHandler(e) }>\r\n                <option value='posts'>Posts</option>\r\n                <option value='text'>Text</option>\r\n            </select>\r\n            <p>Position:</p>\r\n            <select name='position' value={ state.position } onChange={ e => onChangeHandler(e) }>\r\n                <option value='home'>Home</option>\r\n                <option value='sidebar'>Sidebar</option>\r\n                <option value='postPageSideBar'>postPageSideBar</option>\r\n                <option value='footer'>footer</option>\r\n            </select>\r\n            <p>Text:</p>\r\n            <textarea name='text' value={state.text} onChange={e=>onChangeHandler(e)}/>\r\n            <p>Text Align:</p>\r\n            <select name='textAlign' value={ state.textAlign } onChange={ e => onChangeHandler(e) }>\r\n                <option value='left'>Left</option>\r\n                <option value='center'>Center</option>\r\n                <option value='right'>Right</option>\r\n            </select>\r\n            <RenderOptionByFormat/>\r\n            <p>Redirect Link:</p>\r\n            <input className='redirectLink' name='redirectLink' placeholder='Redirect' value={ state.redirectLink } onChange={ e => onChangeHandler(e) }/>\r\n            <div className='control'>\r\n                <button onClick={ () => onSaveHandler() }>Save</button>\r\n                <button onClick={ () => onDeleteHandler() }>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default WidgetModel;\r\n"]},"metadata":{},"sourceType":"module"}