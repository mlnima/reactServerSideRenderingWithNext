{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\n\nconst RenderIframe = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: false\n  });\n\n  if (!state.open && props.postData.videoEmbedCode) {\n    return __jsx(\"button\", {\n      onClick: () => state.open ? setState(_objectSpread({}, state, {\n        open: false\n      })) : setState(_objectSpread({}, state, {\n        open: true\n      }))\n    }, \"Preview Embed Video\");\n  } else if (state.open && props.postData.videoEmbedCode) {\n    return __jsx(\"div\", {\n      className: \"VideoEmbedCode VideoInformationSection\"\n    }, __jsx(\"div\", {\n      className: \"title\"\n    }, __jsx(\"p\", null, \"Video Iframe Preview\"), __jsx(\"button\", {\n      onClick: () => state.open ? setState(_objectSpread({}, state, {\n        open: false\n      })) : setState(_objectSpread({}, state, {\n        open: true\n      }))\n    }, \"Hide Embed Video\")), __jsx(\"div\", {\n      className: \"editor\"\n    }, __jsx(\"iframe\", {\n      src: props.postData.videoEmbedCode\n    })));\n  } else return null;\n};\n\nexport default RenderIframe;","map":null,"metadata":{},"sourceType":"module"}