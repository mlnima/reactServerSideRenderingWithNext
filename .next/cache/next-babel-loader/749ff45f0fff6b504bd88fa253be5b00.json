{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'; // import './categories.scss'import './categories.scss'\n\nconst categories = props => {\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  const renderCategories = props.categoriesSource.metas.map(meta => {\n    return __jsx(CategoryElement, {\n      key: meta._id,\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"categories\"\n  }, __jsx(SiteSettingSetter, props), renderCategories, __jsx(RenderMetaDataPages, _extends({\n    type: \"categories\"\n  }, props)))));\n};\n\ncategories.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let categoriesSource;\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  const getCategoriesData = {\n    type: 'category',\n    searchForImageIn: 'categories',\n    pageNo: parseInt(query.page) || 1,\n    size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) || 30,\n    sort: query.sort || 'latest'\n  };\n  const categoriesData = await getMeta(getCategoriesData);\n  categoriesSource = categoriesData.data ? categoriesData.data : [];\n  return {\n    identity,\n    navigation,\n    query,\n    categoriesSource,\n    getCategoriesData\n  };\n};\n\nexport default withRouter(categories);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","AppContext","getMeta","withRouter","CategoryElement","RenderMetaDataPages","SiteSettingSetter","categories","props","console","log","renderCategories","categoriesSource","metas","map","meta","_id","imageUrl","noImageUrl","name","count","getInitialProps","pathname","query","req","res","err","navigation","identity","identityData","navigationData","data","setting","getCategoriesData","type","searchForImageIn","pageNo","parseInt","page","size","tagsCountPerPage","sort","categoriesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport withRouter from 'next/dist/client/with-router';\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\r\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n// import './categories.scss'import './categories.scss'\r\n\r\nconst categories = props => {\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n    const renderCategories = props.categoriesSource.metas.map(meta => {\r\n        return (\r\n            <CategoryElement key={ meta._id } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div className='categories'>\r\n                    <SiteSettingSetter  { ...props }/>\r\n                    { renderCategories }\r\n                    <RenderMetaDataPages type='categories' { ...props }/>\r\n                </div>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let categoriesSource;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getCategoriesData = {\r\n        type: 'category',\r\n        searchForImageIn:'categories',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n    const categoriesData = await getMeta(getCategoriesData)\r\n    categoriesSource = categoriesData.data ? categoriesData.data : []\r\n    return { identity, navigation, query, categoriesSource,getCategoriesData }\r\n}\r\nexport default withRouter(categories);\r\n"]},"metadata":{},"sourceType":"module"}