{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport './categories.scss';\n\nconst categories = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    metaData: []\n  });\n  useEffect(() => {\n    if (props.categories) {\n      setState(_objectSpread({}, state, {\n        metaData: props.categories\n      }));\n    } else {\n      getMeta({\n        type: query.meta,\n        pageNo: 1,\n        size: 100\n      }).then(res => {\n        setState(_objectSpread({}, state, {\n          metaData: res.data.meta\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(props);\n  }, []);\n  useEffect(() => {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(siteIdentity => _objectSpread({}, siteIdentity, {}, props.identity));\n    }\n  }, [props]);\n  const renderCategories = state.metaData.map(meta => {\n    return __jsx(CategoryElement, {\n      key: meta._id,\n      name: meta.name\n    });\n  });\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"categories\"\n  }, renderCategories));\n};\n\ncategories.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let categories = [];\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n\n  if (query.meta) {\n    const categoriesData = await getMeta({\n      type: query.meta,\n      pageNo: 1,\n      size: 100\n    });\n    categories = categoriesData.data.meta ? categoriesData.data.meta : [];\n  }\n\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  return {\n    identity,\n    navigation,\n    query,\n    categories\n  };\n};\n\nexport default withRouter(categories);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","AppContext","getMeta","withRouter","CategoryElement","categories","props","contextData","state","setState","metaData","type","query","meta","pageNo","size","then","res","data","catch","err","console","log","navigation","dispatchNavigationData","identity","dispatchSiteIdentity","siteIdentity","renderCategories","map","_id","name","getInitialProps","pathname","req","identityData","navigationData","categoriesData","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport withRouter from 'next/dist/client/with-router';\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\r\nimport './categories.scss'\r\n\r\nconst categories = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData: []\r\n    });\r\n    useEffect(() => {\r\n        if (props.categories){\r\n            setState({\r\n                ...state,\r\n                metaData: props.categories\r\n            })\r\n        }else {\r\n            getMeta({\r\n                type: query.meta,\r\n                pageNo: 1,\r\n                size: 100\r\n            }).then(res=>{\r\n                setState({\r\n                    ...state,\r\n                    metaData: res.data.meta\r\n                })\r\n            }).catch(err=>{\r\n                console.log( err)\r\n            })\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderCategories = state.metaData.map(meta => {\r\n        return (\r\n            <CategoryElement key={meta._id} name={meta.name}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='categories'>\r\n                { renderCategories }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let categories = []\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n\r\n    if (query.meta) {\r\n        const categoriesData = await getMeta({\r\n            type: query.meta,\r\n            pageNo: 1,\r\n            size: 100\r\n        })\r\n        categories = categoriesData.data.meta ? categoriesData.data.meta : []\r\n    }\r\n\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    return { identity, navigation, query, categories }\r\n}\r\nexport default withRouter(categories);\r\n"]},"metadata":{},"sourceType":"module"}