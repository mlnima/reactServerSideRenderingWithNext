{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../../../context/AppContext\";\n\nconst FilterPagination = props => {\n  let contextData = useContext(AppContext);\n  let currentPageInput = useRef(null);\n  let size = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    totalPosts: 0,\n    perPage: 0,\n    totalPage: 0,\n    currentPage: 1\n  });\n  useEffect(() => {\n    currentPageInput.current.value = contextData.postsData.pageNo;\n    size.current.value = contextData.postsData.size;\n  }, [contextData.postsData.pageNo]);\n\n  let nextPage = () => {\n    contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n      pageNo: contextData.postsData.pageNo + 1\n    }));\n  };\n\n  let previousPage = () => {\n    if (contextData.postsData.pageNo - 1 <= 0) {\n      contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n        pageNo: 1\n      }));\n    } else {\n      contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n        pageNo: contextData.postsData.pageNo - 1\n      }));\n    }\n  };\n\n  let lastPage = () => {\n    contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n      pageNo: Math.floor(contextData.postsData.totalCount / contextData.postsData.size)\n    }));\n  };\n\n  let firstPage = () => {\n    contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n      pageNo: 1\n    }));\n  };\n\n  let changePageNoManually = () => {\n    if (currentPageInput.current.value <= 0) {\n      contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n        pageNo: 1\n      }));\n      currentPageInput.current.value = 1;\n    } else {\n      contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n        pageNo: currentPageInput.current.value\n      }));\n    }\n  };\n\n  let changeSizeHandler = () => {\n    contextData.setPostsData(_objectSpread({}, contextData.postsData, {\n      size: parseInt(size.current.value)\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterPagination\"\n  }, __jsx(\"label\", {\n    className: \"totalCount\"\n  }, contextData.postsData.totalCount), __jsx(\"button\", {\n    onClick: () => firstPage(),\n    className: \"actionBtn\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-angle-double-left\"\n  })), __jsx(\"button\", {\n    onClick: () => previousPage(),\n    className: \"actionBtn\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-angle-left\"\n  })), __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(\"button\", {\n    onClick: () => changePageNoManually()\n  }, \"Go\"), __jsx(\"label\", null, \"of \", Math.floor(contextData.postsData.totalCount / contextData.postsData.size)), __jsx(\"button\", {\n    onClick: () => nextPage(),\n    className: \"actionBtn\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-angle-right\"\n  })), __jsx(\"button\", {\n    onClick: () => lastPage(),\n    className: \"actionBtn\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-angle-double-right\"\n  })), __jsx(\"select\", {\n    ref: size,\n    defaultValue: contextData.postsData.size,\n    onChange: () => changeSizeHandler()\n  }, __jsx(\"option\", {\n    value: 5\n  }, \"5\"), __jsx(\"option\", {\n    value: 10\n  }, \"10\"), __jsx(\"option\", {\n    value: 20\n  }, \"20\"), __jsx(\"option\", {\n    value: 50\n  }, \"50\"), __jsx(\"option\", {\n    value: 100\n  }, \"100\"), __jsx(\"option\", {\n    value: 200\n  }, \"200\"), __jsx(\"option\", {\n    value: 500\n  }, \"500\")));\n};\n\nexport default FilterPagination;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterPagination.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FilterPagination","props","contextData","currentPageInput","size","state","setState","totalPosts","perPage","totalPage","currentPage","current","value","postsData","pageNo","nextPage","setPostsData","previousPage","lastPage","Math","floor","totalCount","firstPage","changePageNoManually","changeSizeHandler","parseInt"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext,useRef} from 'react';\r\nimport {AppContext} from \"../../../../../../context/AppContext\";\r\nconst FilterPagination = props => {\r\n    let contextData = useContext(AppContext);\r\n    let currentPageInput = useRef(null)\r\n    let size = useRef(null)\r\n    const [state, setState] = useState({\r\n        totalPosts: 0,\r\n        perPage: 0,\r\n        totalPage: 0,\r\n        currentPage: 1\r\n    });\r\n    useEffect(()=>{\r\n        currentPageInput.current.value = contextData.postsData.pageNo\r\n        size.current.value = contextData.postsData.size\r\n    },[contextData.postsData.pageNo]);\r\n\r\n    let nextPage = () =>{\r\n        contextData.setPostsData({\r\n            ...contextData.postsData,\r\n            pageNo:contextData.postsData.pageNo +1\r\n        })\r\n    };\r\n    let previousPage = () =>{\r\n        if ((contextData.postsData.pageNo -1 ) <= 0){\r\n            contextData.setPostsData({\r\n                ...contextData.postsData,\r\n                pageNo:1\r\n            })\r\n        }else {\r\n            contextData.setPostsData({\r\n                ...contextData.postsData,\r\n                pageNo:contextData.postsData.pageNo -1\r\n            })\r\n        }\r\n\r\n    };\r\n    let lastPage = () =>{\r\n        contextData.setPostsData({\r\n            ...contextData.postsData,\r\n            pageNo:Math.floor(contextData.postsData.totalCount/contextData.postsData.size)\r\n        })\r\n    };\r\n\r\n    let firstPage = () =>{\r\n        contextData.setPostsData({\r\n            ...contextData.postsData,\r\n            pageNo: 1\r\n        })\r\n    };\r\n\r\n    let changePageNoManually = ()=>{\r\n        if (currentPageInput.current.value <= 0){\r\n            contextData.setPostsData({\r\n                ...contextData.postsData,\r\n                pageNo: 1\r\n            })\r\n            currentPageInput.current.value = 1\r\n        }else {\r\n            contextData.setPostsData({\r\n                ...contextData.postsData,\r\n                pageNo: currentPageInput.current.value\r\n            })\r\n        }\r\n    };\r\n\r\n    let changeSizeHandler =()=>{\r\n        contextData.setPostsData({\r\n            ...contextData.postsData,\r\n            size: parseInt(size.current.value)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='FilterPagination'>\r\n            <label className='totalCount'>{contextData.postsData.totalCount}</label>\r\n            <button onClick={()=>firstPage()} className='actionBtn'><i className=\"fas fa-angle-double-left\"/></button>\r\n            <button onClick={()=>previousPage()} className='actionBtn'><i className=\"fas fa-angle-left\"/></button>\r\n            <input className='pageNumberInput' ref={currentPageInput} type='number' min={0} />\r\n            <button  onClick={()=>changePageNoManually()}>Go</button>\r\n            <label>of {Math.floor(contextData.postsData.totalCount/contextData.postsData.size)}</label>\r\n            <button onClick={()=>nextPage()} className='actionBtn'><i className=\"fas fa-angle-right\"/></button>\r\n            <button onClick={()=>lastPage()} className='actionBtn'><i className=\"fas fa-angle-double-right\"/></button>\r\n            <select ref={size} defaultValue={contextData.postsData.size} onChange={()=>changeSizeHandler()} >\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n                <option value={200}>200</option>\r\n                <option value={500}>500</option>\r\n            </select>\r\n            {/*<input ref={size} onChange={()=>changeSizeHandler()} />*/}\r\n        </div>\r\n    );\r\n};\r\nexport default FilterPagination;"]},"metadata":{},"sourceType":"module"}