{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getMultipleSetting, getMultipleWidgetWithData } from \"../_variables/ajaxVariables\";\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { getAbsolutePath } from '../_variables/_variables';\nimport WidgetsRenderer from '../components/includes/WidgetsRenderer/WidgetsRenderer';\nimport { Sidebar } from '../components/includes/Sidebar/Sidebar';\nimport Footer from '../components/includes/Footer/Footer';\n\nconst Home = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  useEffect(() => {\n    if (props.identity.data.homePageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.data.homePageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(WidgetsRenderer, {\n    widgets: props.widgets,\n    position: \"home\"\n  })), __jsx(Sidebar, {\n    key: \"homePageSidebar\",\n    isActive: props.identity.data.homePageSidebar,\n    widgets: props.widgets,\n    position: \"homePageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nHome.getInitialProps = async ({\n  req\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let widgets;\n  let settings;\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['homePageSidebar', 'home', 'footer', 'header']\n  }, true, domainName);\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  return _objectSpread({\n    widgets\n  }, settings);\n};\n\nexport default withRouter(Home);","map":null,"metadata":{},"sourceType":"module"}