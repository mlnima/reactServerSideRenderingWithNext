{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\nimport VideoPlayer from \"../../components/includes/Post/VideoPlayer/VideoPlayer\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport withRouter from \"next/dist/client/with-router\";\nimport Head from \"next/head\";\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from \"../../_variables/ajaxVariables\";\nimport { AppContext } from \"../../context/AppContext\";\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { Sidebar } from '../../components/includes/Sidebar/Sidebar';\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom';\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer';\nimport Footer from '../../components/includes/Footer/Footer';\nimport { getAbsolutePath } from '../../_variables/_variables';\n\nconst Post = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  useEffect(() => {\n    if (props.identity.postPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n\n  const RenderMeta = () => {\n    if (props.post.title) {\n      return __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n        name: \"description\",\n        content: props.post.description\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: [...props.post.tags, ...props.post.categories, ...props.post.actors]\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: props.post.title\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: props.post.videoEmbedCode\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: props.post.mainThumbnail\n      }));\n    } else return null;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(RenderMeta, null), __jsx(\"div\", {\n    className: props.identity.data.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar'\n  }, __jsx(\"div\", {\n    style: state.style,\n    className: \"main\"\n  }, __jsx(VideoPlayer, props.post), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories,\n    id: props.post._id,\n    likes: props.post.likes,\n    disLikes: props.post.disLikes,\n    views: props.post.views,\n    videoEmbedCode: props.post.videoEmbedCode\n  }), __jsx(CommentsRenderer, {\n    comments: props.comments\n  }), __jsx(CommentFrom, {\n    documentId: props.post._id\n  })), __jsx(Sidebar, {\n    key: \"postPageSidebar\",\n    isActive: props.identity.data.postPageSidebar,\n    widgets: props.widgets,\n    position: \"postPageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  const postBody = {\n    postTitle: query.postTitle\n  };\n  let post;\n  let widgets;\n  let settings;\n  let comments; // const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\n\n  const postData = await getPost(postBody, true, domainName);\n  post = postData.data.post;\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['postPageSidebar', 'footer', 'header']\n  }, true, domainName);\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n\n  if (!post) {\n    res.writeHead(404);\n  }\n\n  const commentsData = post ? await getComments({\n    onDocument: post._id\n  }, true, domainName) : [];\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  comments = commentsData.data.comments ? commentsData.data.comments : [];\n  return _objectSpread({\n    post,\n    query,\n    widgets,\n    comments\n  }, settings);\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getComments","getPost","VideoPlayer","PostInfo","withRouter","Head","getSetting","getWidgetsWithData","getMultipleWidgetWithData","getMultipleSetting","AppContext","SiteSettingSetter","Sidebar","CommentFrom","CommentsRenderer","Footer","getAbsolutePath","Post","props","contextData","state","setState","style","identity","postPageSidebar","gridArea","RenderMeta","post","title","description","tags","categories","actors","postType","videoEmbedCode","mainThumbnail","data","_id","likes","disLikes","views","comments","widgets","getInitialProps","pathname","query","req","res","err","domainName","postBody","postTitle","settings","postData","widgetsData","settingsData","writeHead","commentsData","onDocument"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport VideoPlayer from \"../../components/includes/Post/VideoPlayer/VideoPlayer\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport Head from \"next/head\";\r\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from \"../../_variables/ajaxVariables\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport {Sidebar} from '../../components/includes/Sidebar/Sidebar'\r\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom'\r\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer'\r\nimport Footer from '../../components/includes/Footer/Footer'\r\nimport { getAbsolutePath } from '../../_variables/_variables'\r\n\r\nconst Post = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.identity.postPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n    const RenderMeta = () => {\r\n        if (props.post.title) {\r\n            return (\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories, ...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/ }\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <RenderMeta/>\r\n                <div className={ props.identity.data.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar' }>\r\n\r\n                    <div style={ state.style } className=\"main\">\r\n\r\n                        <VideoPlayer {...props.post}/>\r\n\r\n                        <PostInfo\r\n                            title={ props.post.title }\r\n                            description={ props.post.description }\r\n                            tags={ props.post.tags }\r\n                            actors={ props.post.actors }\r\n                            categories={ props.post.categories }\r\n                            id={ props.post._id }\r\n                            likes={ props.post.likes }\r\n                            disLikes={ props.post.disLikes }\r\n                            views={ props.post.views }\r\n                            videoEmbedCode={ props.post.videoEmbedCode }\r\n                        />\r\n                        <CommentsRenderer comments={ props.comments }/>\r\n                        <CommentFrom documentId={ props.post._id }/>\r\n\r\n                    </div>\r\n\r\n                    <Sidebar key='postPageSidebar' isActive={ props.identity.data.postPageSidebar } widgets={ props.widgets } position='postPageSidebar'/>\r\n                </div>\r\n                <Footer widgets={ props.widgets } position='footer'/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    const postBody = {\r\n        postTitle: query.postTitle,\r\n    };\r\n\r\n    let post;\r\n    let widgets;\r\n    let settings;\r\n    let comments;\r\n\r\n    // const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\r\n    const postData = await getPost(postBody,true,domainName)\r\n    post = postData.data.post\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'postPageSidebar', 'footer','header' ] }, true,domainName)\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true,domainName)\r\nif(!post){\r\n    res.writeHead(404)\r\n}\r\n\r\n\r\n\r\n    const commentsData =  post ? await getComments({ onDocument: post._id },true,domainName):[]\r\n\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    comments = commentsData.data.comments ? commentsData.data.comments : []\r\n\r\n\r\n\r\n    return { post, query, widgets, comments, ...settings }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}