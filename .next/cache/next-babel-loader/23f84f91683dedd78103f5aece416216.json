{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from \"react-fontawesome\";\nimport './PostCategoriesTagsActors.scss';\n\nvar PostCategoriesTagsActors = function PostCategoriesTagsActors(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState([]),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var newItemsElement = useRef(null);\n  useEffect(function () {\n    if (props.isNewPost) {} // console.log(props, props.type)\n\n  }, []);\n\n  var deleteItem = function deleteItem(e) {\n    console.log(e.currentTarget); // contextData.setPostData({\n    //     ...contextData.postData,\n    //     post: {\n    //         ...contextData.postData.post,\n    //         tags: contextData.postData.post.tags.filter(tag => {\n    //             return tag != e.target.name\n    //         })\n    //     }\n    // })\n\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, _defineProperty({}, props.type, contextData.editingPostData[props.type].filter(function (i) {\n      return i !== e.target.name;\n    }))));\n  }; // useEffect(()=>{\n  //     if (contextData.editingPostData.format === 'video'){\n  //         contextData.dispatchEditingPostData(editingPostData=>({\n  //             ...editingPostData,\n  //             tags:[],\n  //             categories:[],\n  //             actors:[]\n  //         }))\n  //     }else {\n  //         contextData.dispatchEditingPostData(editingPostData=>({\n  //             ...editingPostData,\n  //             tags:[],\n  //             categories:[]\n  //         }))\n  //     }\n  // },[ contextData.editingPostData.format]);\n\n\n  var addNewItem = function addNewItem() {\n    console.log(newItemsElement.current.value.includes(','));\n\n    if (newItemsElement.current.value.includes(',')) {\n      var newItems = newItemsElement.current.value.split(',');\n\n      if (contextData.editingPostData[props.type]) {\n        contextData.dispatchEditingPostData(function (editingPostData) {\n          return _objectSpread({}, editingPostData, _defineProperty({}, props.type, [].concat(_toConsumableArray(contextData.editingPostData[props.type]), _toConsumableArray(newItems))));\n        });\n      } else {\n        contextData.dispatchEditingPostData(function (editingPostData) {\n          return _objectSpread({}, editingPostData, _defineProperty({}, props.type, newItems));\n        });\n      }\n    } else {\n      // let newItems = contextData.editingPostData[props.type].push(newItemsElement.current.value);\n      //     newItems = [...contextData.editingPostData[props.type],newItemsElement.current.value];\n      // console.log( contextData.editingPostData[props.type],newItems)\n      contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, _defineProperty({}, props.type, [].concat(_toConsumableArray(contextData.editingPostData[props.type]), [newItemsElement.current.value]))));\n    }\n  };\n\n  var addedItems = contextData.editingPostData[props.type].map(function (item) {\n    var icon = props.type === 'tags' ? 'tags' : props.type === 'actors' ? 'star' : props.type === 'categories' ? 'folder' : '';\n    return __jsx(\"div\", {\n      key: item,\n      name: item,\n      onClick: function onClick(e) {\n        return deleteItem(e);\n      },\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(\"div\", {\n    className: \"PostCategoriesTagsActors\"\n  }, __jsx(\"div\", {\n    className: \"addNewTag\"\n  }, __jsx(\"input\", {\n    ref: newItemsElement,\n    type: \"text\"\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return addNewItem();\n    }\n  }, \" Add\")), __jsx(\"span\", null, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, addedItems));\n};\n\nexport default PostCategoriesTagsActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FA","PostCategoriesTagsActors","props","contextData","items","setItems","newItemsElement","isNewPost","deleteItem","e","console","log","currentTarget","dispatchEditingPostData","editingPostData","type","filter","i","target","name","addNewItem","current","value","includes","newItems","split","addedItems","map","item","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport FA from \"react-fontawesome\";\r\nimport './PostCategoriesTagsActors.scss'\r\nconst PostCategoriesTagsActors = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ items, setItems ] = useState([]);\r\n    let newItemsElement = useRef(null);\r\n    useEffect(() => {\r\n        if (props.isNewPost) {\r\n\r\n        }\r\n        // console.log(props, props.type)\r\n    }, []);\r\n\r\n    const deleteItem = (e) => {\r\n        console.log(e.currentTarget )\r\n        // contextData.setPostData({\r\n        //     ...contextData.postData,\r\n        //     post: {\r\n        //         ...contextData.postData.post,\r\n        //         tags: contextData.postData.post.tags.filter(tag => {\r\n        //             return tag != e.target.name\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n        contextData.dispatchEditingPostData({\r\n            ...contextData.editingPostData,\r\n            [props.type]: contextData.editingPostData[props.type].filter(i=>i!== e.target.name),\r\n        })\r\n    };\r\n    // useEffect(()=>{\r\n    //     if (contextData.editingPostData.format === 'video'){\r\n    //         contextData.dispatchEditingPostData(editingPostData=>({\r\n    //             ...editingPostData,\r\n    //             tags:[],\r\n    //             categories:[],\r\n    //             actors:[]\r\n    //         }))\r\n    //     }else {\r\n    //         contextData.dispatchEditingPostData(editingPostData=>({\r\n    //             ...editingPostData,\r\n    //             tags:[],\r\n    //             categories:[]\r\n    //         }))\r\n    //     }\r\n    // },[ contextData.editingPostData.format]);\r\n\r\n    const addNewItem = () => {\r\n        console.log(newItemsElement.current.value.includes(',') )\r\n        if (newItemsElement.current.value.includes(',')) {\r\n            let newItems = newItemsElement.current.value.split(',');\r\n            if (contextData.editingPostData[props.type]) {\r\n                contextData.dispatchEditingPostData(editingPostData => ({\r\n                    ...editingPostData,\r\n                    [props.type]: [ ...contextData.editingPostData[props.type], ...newItems ]\r\n                }))\r\n            } else {\r\n                contextData.dispatchEditingPostData(editingPostData => ({\r\n                    ...editingPostData,\r\n                    [props.type]: newItems\r\n                }))\r\n            }\r\n        } else {\r\n            // let newItems = contextData.editingPostData[props.type].push(newItemsElement.current.value);\r\n            //     newItems = [...contextData.editingPostData[props.type],newItemsElement.current.value];\r\n            // console.log( contextData.editingPostData[props.type],newItems)\r\n                contextData.dispatchEditingPostData({\r\n                    ...contextData.editingPostData,\r\n                    [props.type]:  [...contextData.editingPostData[props.type],newItemsElement.current.value]\r\n                })\r\n        }\r\n    };\r\n\r\n    const addedItems = contextData.editingPostData[props.type].map(item => {\r\n        let icon = props.type === 'tags' ? 'tags'\r\n            : props.type === 'actors' ? 'star'\r\n                : props.type === 'categories' ? 'folder'\r\n                    : '';\r\n\r\n        return (\r\n            <div key={ item } name={item} onClick={ (e) => deleteItem(e) } className='item'>\r\n                <p>{ item }</p>\r\n\r\n                <button name={ item } ><FA className='fontawesomeMedium' name='times'/></button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='PostCategoriesTagsActors'>\r\n            <div className=\"addNewTag\">\r\n                <input ref={ newItemsElement } type='text'/>\r\n                <button onClick={ () => addNewItem() }> Add</button>\r\n            </div>\r\n            <span>Separate tags with commas</span>\r\n            <div className=\"items\">\r\n                { addedItems }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PostCategoriesTagsActors;"]},"metadata":{},"sourceType":"module"}