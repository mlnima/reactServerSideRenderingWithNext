{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\nimport FA from 'react-fontawesome';\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\nimport './navigationAdmin.scss';\nimport { AppContext } from '../../../../context/AppContext';\nimport withRouter from 'next/dist/client/with-router';\n\nvar navigation = function navigation(props) {\n  var contextData = useContext(AppContext);\n  var titleEl = useRef(null);\n  var urlEl = useRef(null);\n\n  var _useState = useState({\n    type: 'navigation',\n    data: []\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // useEffect(() => {\n  //     getSetting(state.type, false, window.location.origin).then(res => {\n  //         if (res.data.setting) {\n  //             setState({\n  //                 ...state,\n  //                 data: res.data.setting.data || []\n  //             })\n  //         }\n  //     })\n  // }, []);\n\n\n  var onSaveChangesHandler = function onSaveChangesHandler() {\n    updateSetting('navigation', contextData.navigationData).then(function () {\n      props.router.push({\n        pathname: props.router.pathname,\n        query: _objectSpread({}, props.router.query)\n      }); // getSetting(state.type).then(res => {\n      //     if (res.data.setting) {\n      //         setState({\n      //             ...state,\n      //             data: res.data.setting.data || []\n      //         })\n      //     }\n      // })\n    })[\"catch\"](function (err) {\n      console.log(err);\n      props.router.push({\n        pathname: props.router.pathname,\n        query: _objectSpread({}, props.router.query)\n      });\n    });\n  };\n\n  var onDeleteItemHandler = function onDeleteItemHandler(e) {\n    contextData.dispatchNavigationData(_toConsumableArray(contextData.navigationData.filter(function (i) {\n      return i.title !== e.target.name;\n    })));\n  };\n\n  var onAddItemHandler = function onAddItemHandler() {\n    var newItem = {\n      title: titleEl.current.value,\n      url: urlEl.current.value\n    };\n    contextData.dispatchNavigationData([].concat(_toConsumableArray(contextData.navigationData), [newItem]));\n    titleEl.current.value = '';\n    urlEl.current.value = '';\n  };\n\n  var renderItems = (contextData.navigationData || []).map(function (item) {\n    return __jsx(NavigationItem, {\n      title: item.title,\n      url: item.url,\n      onDeleteItemHandler: onDeleteItemHandler\n    });\n  });\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-items\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-item\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    ref: titleEl,\n    type: \"text\",\n    name: \"title\"\n  })), __jsx(\"div\", {\n    className: \"add-navigation-item\"\n  }, __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    ref: urlEl,\n    type: \"text\",\n    name: \"url\"\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onAddItemHandler();\n    }\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"items-preview\"\n  }), __jsx(\"button\", {\n    className: \"saveBtn\",\n    onClick: function onClick() {\n      return onSaveChangesHandler();\n    }\n  }, \"Save\")));\n};\n\nexport default withRouter(navigation);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/navigation/index.js"],"names":["React","useEffect","useState","useRef","useContext","AdminLayout","getSetting","updateSetting","FA","NavigationItem","AppContext","withRouter","navigation","props","contextData","titleEl","urlEl","type","data","state","setState","onSaveChangesHandler","navigationData","then","router","push","pathname","query","err","console","log","onDeleteItemHandler","e","dispatchNavigationData","filter","i","title","target","name","onAddItemHandler","newItem","current","value","url","renderItems","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\r\nimport FA from 'react-fontawesome'\r\nimport NavigationItem from \"../../../../components/includes/Header/Navigation/NavigationItem/NavigationItem\";\r\nimport './navigationAdmin.scss';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport withRouter from 'next/dist/client/with-router'\r\n\r\nconst navigation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const titleEl = useRef(null)\r\n    const urlEl = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        data: []\r\n\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     getSetting(state.type, false, window.location.origin).then(res => {\r\n    //         if (res.data.setting) {\r\n    //             setState({\r\n    //                 ...state,\r\n    //                 data: res.data.setting.data || []\r\n    //             })\r\n    //         }\r\n    //     })\r\n    // }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n        updateSetting('navigation',contextData.navigationData ).then(() => {\r\n            props.router.push({pathname:props.router.pathname,query:{...props.router.query}})\r\n            // getSetting(state.type).then(res => {\r\n            //     if (res.data.setting) {\r\n            //         setState({\r\n            //             ...state,\r\n            //             data: res.data.setting.data || []\r\n            //         })\r\n            //     }\r\n            // })\r\n        }).catch(err=>{\r\n            console.log( err)\r\n            props.router.push({pathname:props.router.pathname,query:{...props.router.query}})\r\n        })\r\n    };\r\n\r\n    const onDeleteItemHandler = (e) => {\r\n        contextData.dispatchNavigationData([...contextData.navigationData.filter(i => i.title !== e.target.name)])\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n        const newItem = {\r\n            title: titleEl.current.value,\r\n            url: urlEl.current.value\r\n        };\r\n        contextData.dispatchNavigationData([...contextData.navigationData,newItem] )\r\n        titleEl.current.value = '';\r\n        urlEl.current.value = ''\r\n    };\r\n\r\n    const renderItems = (contextData.navigationData||[]).map(item => {\r\n        return (\r\n            <NavigationItem title={ item.title } url={ item.url } onDeleteItemHandler={ onDeleteItemHandler }/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <div className='add-navigation-items'>\r\n                    <div className='add-navigation-item'>\r\n                        <p>Title :</p>\r\n                        <input ref={ titleEl } type=\"text\" name='title'/>\r\n                    </div>\r\n                    <div className='add-navigation-item'>\r\n                        <p>Url :</p>\r\n                        <input ref={ urlEl } type=\"text\" name='url'/>\r\n                    </div>\r\n                    <button onClick={ () => onAddItemHandler() }>Add</button>\r\n                </div>\r\n                <div className='items-preview'>\r\n                    {/*{ renderItems }*/}\r\n                </div>\r\n                <button className='saveBtn' onClick={ () => onSaveChangesHandler() }>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default withRouter(navigation);"]},"metadata":{},"sourceType":"module"}