{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { executor } from '../../../_variables/ajaxVariables';\nimport './tools.scss';\n\nconst tools = props => {\n  const logElement = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    command: '',\n    log: ''\n  });\n  useEffect(() => {}, []);\n\n  const onchangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onExecutorHandler = () => {\n    executor(state.command).then(res => {\n      setState(_objectSpread({}, state, {\n        log: state.log + res.data.response\n      }));\n      console.log(res.data);\n    });\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"adminTools\"\n  }, __jsx(\"h2\", null, \" Terminal :\"), __jsx(\"textarea\", {\n    className: \"terminalLog\",\n    value: state.log\n  }), __jsx(\"div\", {\n    ref: logElement,\n    className: \"logElement\"\n  }), __jsx(\"div\", {\n    className: \"terminal\"\n  }, __jsx(\"input\", {\n    name: \"command\",\n    type: \"text\",\n    onChange: e => onchangeHandler(e)\n  }), __jsx(\"button\", {\n    onClick: () => onExecutorHandler()\n  }, \"exe\"))));\n};\n\nexport default tools;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/tools/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","executor","tools","props","logElement","state","setState","command","log","onchangeHandler","e","target","name","value","onExecutorHandler","then","res","data","response","console"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAMC,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM;AAAA,OAAEM,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,OAAO,EAAE,EADwB;AAEjCC,IAAAA,GAAG,EAAC;AAF6B,GAAD,CAApC;AAIAZ,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMa,eAAe,GAAGC,CAAC,IAAI;AACzBJ,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFtB,OAAR;AAIH,GALD;;AAOA,QAAMC,iBAAiB,GAAG,MAAI;AAC1Bb,IAAAA,QAAQ,CAACI,KAAK,CAACE,OAAP,CAAR,CAAwBQ,IAAxB,CAA6BC,GAAG,IAAE;AAC9BV,MAAAA,QAAQ,mBACDD,KADC;AAEJG,QAAAA,GAAG,EAAEH,KAAK,CAACG,GAAN,GAAaQ,GAAG,CAACC,IAAJ,CAASC;AAFvB,SAAR;AAIAC,MAAAA,OAAO,CAACX,GAAR,CAAaQ,GAAG,CAACC,IAAjB;AACH,KAND;AAOH,GARD;;AAWA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,gCADH,EAEI;AAAU,IAAA,SAAS,EAAC,aAApB;AAAkC,IAAA,KAAK,EAAEZ,KAAK,CAACG;AAA/C,IAFJ,EAGI;AAAK,IAAA,GAAG,EAAEJ,UAAV;AAAsB,IAAA,SAAS,EAAC;AAAhC,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAGM,CAAC,IAAID,eAAe,CAACC,CAAD;AAAjE,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAII,iBAAiB;AAAtC,WAFJ,CAJJ,CADJ,CADJ;AAaH,CAxCD;;AAyCA,eAAeZ,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout';\r\nimport {executor} from '../../../_variables/ajaxVariables'\r\nimport './tools.scss'\r\n\r\nconst tools = props => {\r\n    const logElement = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        command: '',\r\n        log:''\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onchangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onExecutorHandler = ()=>{\r\n        executor(state.command).then(res=>{\r\n            setState({\r\n                ...state,\r\n                log: state.log  + res.data.response\r\n            })\r\n            console.log( res.data)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className='adminTools'>\r\n               <h2> Terminal :</h2>\r\n                <textarea className='terminalLog' value={state.log}/>\r\n                <div ref={logElement} className='logElement'></div>\r\n                <div className=\"terminal\">\r\n                    <input name='command' type=\"text\" onChange={ e => onchangeHandler(e) }/>\r\n                    <button onClick={()=>onExecutorHandler()}>exe</button>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default tools;\r\n"]},"metadata":{},"sourceType":"module"}