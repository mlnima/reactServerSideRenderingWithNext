{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\n\nconst AddWidgetWithPositionMenu = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: false\n  });\n  useEffect(() => {}, []);\n\n  const onOpenHandler = () => {\n    state.open ? setState(_objectSpread({}, state, {\n      open: false\n    })) : setState(_objectSpread({}, state, {\n      open: true\n    }));\n  };\n\n  if (state.open) {\n    return __jsx(\"div\", {\n      className: \"AddWidgetWithPositionMenu\"\n    }, __jsx(\"button\", {\n      onClick: () => onOpenHandler()\n    }, props.type), __jsx(\"div\", {\n      className: \"AddWidgetWithPositionMenuPositions\"\n    }, __jsx(\"button\", null, \"Home Page\"), __jsx(\"button\", null, \"Home Page Sidebar\"), __jsx(\"button\", null, \"Post Page Sidebar\"), __jsx(\"button\", null, \"Posts Page Sidebar\"), __jsx(\"button\", null, \"Tags Page Sidebar\"), __jsx(\"button\", null, \"Categories Page Sidebar\"), __jsx(\"button\", null, \"Actors Page Sidebar\"), __jsx(\"button\", null, \"Footer\")));\n  } else {\n    return __jsx(\"div\", {\n      className: \"AddWidgetWithPositionMenu\"\n    }, __jsx(\"button\", {\n      onClick: () => onOpenHandler()\n    }, props.type));\n  }\n};\n\nexport default AddWidgetWithPositionMenu;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetWithPositionMenu.js"],"names":["React","useEffect","useState","useContext","useRef","AddWidgetWithPositionMenu","props","state","setState","open","onOpenHandler","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,MAAMC,yBAAyB,GAAGC,KAAK,IAAI;AACvC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC;AACjCO,IAAAA,IAAI,EAAC;AAD4B,GAAD,CAApC;AAGAR,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMS,aAAa,GAAE,MAAI;AACrBH,IAAAA,KAAK,CAACE,IAAN,GAAWD,QAAQ,mBACZD,KADY;AAEfE,MAAAA,IAAI,EAAE;AAFS,OAAnB,GAGGD,QAAQ,mBACJD,KADI;AAEPE,MAAAA,IAAI,EAAE;AAFC,OAHX;AAOH,GARD;;AAUA,MAAIF,KAAK,CAACE,IAAV,EAAe;AACX,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAQ,MAAA,OAAO,EAAE,MAAIC,aAAa;AAAlC,OAAuCJ,KAAK,CAACK,IAA7C,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,kCADJ,EAEI,0CAFJ,EAGI,0CAHJ,EAII,2CAJJ,EAKI,0CALJ,EAMI,gDANJ,EAOI,4CAPJ,EAQI,+BARJ,CAFJ,CADJ;AAeH,GAhBD,MAgBM;AACF,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAQ,MAAA,OAAO,EAAE,MAAID,aAAa;AAAlC,OAAuCJ,KAAK,CAACK,IAA7C,CADJ,CADJ;AAKH;AAGJ,CA1CD;;AA2CA,eAAeN,yBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst AddWidgetWithPositionMenu = props => {\r\n    const [ state, setState ] = useState({\r\n        open:false\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onOpenHandler =()=>{\r\n        state.open?setState({\r\n            ...state,\r\n            open: false\r\n        }):setState({\r\n            ...state,\r\n            open: true\r\n        })\r\n    }\r\n\r\n    if (state.open){\r\n        return (\r\n            <div className='AddWidgetWithPositionMenu'>\r\n                <button onClick={()=>onOpenHandler()}>{props.type}</button>\r\n                <div className=\"AddWidgetWithPositionMenuPositions\">\r\n                    <button>Home Page</button>\r\n                    <button>Home Page Sidebar</button>\r\n                    <button>Post Page Sidebar</button>\r\n                    <button>Posts Page Sidebar</button>\r\n                    <button>Tags Page Sidebar</button>\r\n                    <button>Categories Page Sidebar</button>\r\n                    <button>Actors Page Sidebar</button>\r\n                    <button>Footer</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else {\r\n        return (\r\n            <div className='AddWidgetWithPositionMenu'>\r\n                <button onClick={()=>onOpenHandler()}>{props.type}</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n};\r\nexport default AddWidgetWithPositionMenu;\r\n"]},"metadata":{},"sourceType":"module"}