{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport axios from \"axios\";\n\nvar fetch = require('node-fetch');\n\nvar Home = function Home(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var FakeComponentForTest = function FakeComponentForTest() {\n    return __jsx(\"div\", null, __jsx(\"p\", null, \"test\"));\n  };\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(\"h1\", null, \"Header 1\"), __jsx(Posts, null)));\n};\n\nHome.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, data, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          data = {\n            pageNo: query.pageNo ? _parseInt(query.pageNo) : 1,\n            size: 30,\n            totalPosts: 0,\n            postType: 'all',\n            keyword: '',\n            status: 'all',\n            author: 'all',\n            fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n            checkedPosts: []\n          }; // const posts = await axios.post('/api/v1/posts/', {...data})\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/posts'));\n\n        case 4:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts.data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","Widget","Posts","withRouter","getPosts","axios","fetch","require","Home","props","contextData","state","setState","FakeComponentForTest","console","log","getInitialProps","pathname","query","req","res","err","data","pageNo","size","totalPosts","postType","keyword","status","author","fields","checkedPosts","get","posts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,QAAR,QAAuB,kCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAClB,MAAMC,WAAW,GAAGZ,UAAU,CAACC,UAAD,CAA9B;;AADkB,kBAEUF,QAAQ,CAAC,EAAD,CAFlB;AAAA,MAEVc,KAFU;AAAA,MAEHC,QAFG;;AAIlB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAE/B,WACI,mBACI,wBADJ,CADJ;AAKH,GAPD;;AAQAjB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT;AAKA,SACI,MAAC,SAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,6BADJ,EAGI,MAAC,KAAD,OAHJ,CADJ,CADJ;AASH,CA1BD;;AA4BAD,IAAI,CAACQ,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,QAAR,QAAQA,QAAR,EAAiBC,KAAjB,QAAiBA,KAAjB,EAAuBC,GAAvB,QAAuBA,GAAvB,EAA2BC,GAA3B,QAA2BA,GAA3B,EAA+BC,GAA/B,QAA+BA,GAA/B;AACfC,UAAAA,IADe,GACR;AACPC,YAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,GAAe,UAASL,KAAK,CAACK,MAAf,CAAf,GAAuC,CADxC;AAEPC,YAAAA,IAAI,EAAE,EAFC;AAGPC,YAAAA,UAAU,EAAE,CAHL;AAIPC,YAAAA,QAAQ,EAAE,KAJH;AAKPC,YAAAA,OAAO,EAAE,EALF;AAMPC,YAAAA,MAAM,EAAE,KAND;AAOPC,YAAAA,MAAM,EAAE,KAPD;AAQPC,YAAAA,MAAM,EAAE,CAAE,OAAF,EAAW,eAAX,EAA4B,SAA5B,EAAuC,OAAvC,EAAgD,UAAhD,EAA4D,OAA5D,EAAqE,UAArE,CARD;AASPC,YAAAA,YAAY,EAAE;AATP,WADQ,EAalB;;AAbkB;AAAA,2CAcE1B,KAAK,CAAC2B,GAAN,CAAU,4CAAV,CAdF;;AAAA;AAcZC,UAAAA,KAdY;AAAA,2CA0BZ;AAACA,YAAAA,KAAK,EAACA,KAAK,CAACX;AAAb,WA1BY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AA4BA,eAAenB,UAAU,CAACK,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport Widget from \"../components/includes/Widget/Widget\";\r\nimport Posts from \"../components/includes/Posts/Posts\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport {getPosts} from \"../_variables/ajaxPostsVariables\";\r\nimport axios from \"axios\";\r\nconst fetch = require('node-fetch');\r\nconst Home = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n\r\n    const FakeComponentForTest = () => {\r\n\r\n        return (\r\n            <div>\r\n                <p>test</p>\r\n            </div>\r\n        )\r\n    };\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='HomePage'>\r\n                <h1>Header 1</h1>\r\n                {/*<Widget component={Videos} title='latest video' mainLinkUrl='/posts/' redirectToTitle='More videos' pagination={true} contextData={contextData} />*/ }\r\n                <Posts />\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({pathname,query,req,res,err}) => {\r\n    let data = {\r\n        pageNo: query.pageNo ? parseInt(query.pageNo): 1,\r\n        size: 30,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    };\r\n\r\n     // const posts = await axios.post('/api/v1/posts/', {...data})\r\n     const posts = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n    // let testData = {\r\n    //     name: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\r\n    //     pathname,\r\n    //     query\r\n    // };\r\n    // console.log(testData )\r\n    // const response = await fetch('http://localhost:3000/api/v1/posts/', {\r\n    //     method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    //     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    // })\r\n\r\n    return {posts:posts.data }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}