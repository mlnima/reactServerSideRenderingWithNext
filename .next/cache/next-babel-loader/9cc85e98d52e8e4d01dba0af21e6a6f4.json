{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { updateSetting, getSetting } from \"../../../_variables/ajaxVariables\";\n\nconst settings = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: '',\n    themeColor: '',\n    description: '',\n    Keywords: []\n  });\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n  useEffect(() => {\n    getSetting('identity').then(res => {\n      console.log(res.data);\n    });\n  }, []);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    updateSetting('identity', state);\n  };\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    id: \"site-settings-form\",\n    onSubmit: e => onSubmitHandler(e)\n  }, __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Title\"), __jsx(\"input\", {\n    name: \"title\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Theme Color\"), __jsx(\"input\", {\n    name: \"themeColor\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Description\"), __jsx(\"input\", {\n    name: \"description\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Keywords\"), __jsx(\"input\", {\n    name: \"keywords\"\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\nsettings.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  return {\n    name: 'test'\n  };\n};\n\nexport default settings;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/index.js"],"names":["React","useEffect","useState","useContext","AdminLayout","updateSetting","getSetting","settings","props","state","setState","title","themeColor","description","Keywords","console","log","then","res","data","onSubmitHandler","e","preventDefault","onChangeHandler","target","name","value","getInitialProps","pathname","query","req","err"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAASC,aAAT,EAAuBC,UAAvB,QAAyC,mCAAzC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC;AACjCS,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,UAAU,EAAE,EAFqB;AAGjCC,IAAAA,WAAW,EAAE,EAHoB;AAIjCC,IAAAA,QAAQ,EAAE;AAJuB,GAAD,CAApC;AAOAb,EAAAA,SAAS,CAAC,MAAM;AAEZc,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAI;AACbK,IAAAA,UAAU,CAAC,UAAD,CAAV,CAAuBW,IAAvB,CAA4BC,GAAG,IAAE;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAaE,GAAG,CAACC,IAAjB;AACH,KAFD;AAGA,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,aAAa,CAAC,UAAD,EAAaI,KAAb,CAAb;AACH,GAHD;;AAKA,QAAMc,eAAe,GAAGF,CAAC,IAAI;AACzBX,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACY,CAAC,CAACG,MAAF,CAASC,IAAV,GAAgBJ,CAAC,CAACG,MAAF,CAASE;AAFrB,OAAR;AAIH,GALD;;AAMA,SACI,MAAC,WAAD,QACI;AAAM,IAAA,EAAE,EAAC,oBAAT;AAA8B,IAAA,QAAQ,EAAGL,CAAC,IAAID,eAAe,CAACC,CAAD;AAA7D,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,yBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAEA,CAAC,IAAEE,eAAe,CAACF,CAAD;AAAhD,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,+BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,QAAQ,EAAEA,CAAC,IAAEE,eAAe,CAACF,CAAD;AAArD,IAFJ,CALJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,+BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,QAAQ,EAAEA,CAAC,IAAEE,eAAe,CAACF,CAAD;AAAtD,IAFJ,CAVJ,EAcI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,4BADJ,EAEI;AAAO,IAAA,IAAI,EAAC;AAAZ,IAFJ,CAdJ,EAkBI;AAAQ,IAAA,IAAI,EAAC;AAAb,qBAlBJ,CADJ,CADJ;AAwBH,CAvDD;;AAyDAd,QAAQ,CAACoB,eAAT,GAA2B,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,GAAnB;AAAwBZ,EAAAA,GAAxB;AAA6Ba,EAAAA;AAA7B,CAAP,KAA8C;AACrE,SAAO;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CAFD;;AAGA,eAAelB,QAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport { updateSetting,getSetting } from \"../../../_variables/ajaxVariables\";\r\n\r\nconst settings = props => {\r\n    const [ state, setState ] = useState({\r\n        title: '',\r\n        themeColor: '',\r\n        description: '',\r\n        Keywords: []\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        console.log(state)\r\n    }, [state]);\r\n\r\n\r\n    useEffect(()=>{\r\n     getSetting('identity').then(res=>{\r\n         console.log( res.data)\r\n     })\r\n    },[ ]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        updateSetting('identity', state)\r\n    };\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <AdminLayout>\r\n            <form id='site-settings-form' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Title</p>\r\n                    <input name='title' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Theme Color</p>\r\n                    <input name='themeColor' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Description</p>\r\n                    <input name='description' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Keywords</p>\r\n                    <input name='keywords'/>\r\n                </div>\r\n                <button type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nsettings.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    return { name: 'test' }\r\n}\r\nexport default settings;"]},"metadata":{},"sourceType":"module"}