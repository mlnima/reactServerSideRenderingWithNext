{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getMultipleSetting, getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport withRouter from 'next/dist/client/with-router';\nimport SideBar from '../../../components/includes/Sidebar/Sidebar';\nimport Footer from '../../../components/includes/Footer/Footer';\n\nvar tags = function tags(props) {\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.identity.tagsPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  var renderTags = props.tagsSource.metas.map(function (meta) {\n    return __jsx(TagElement, {\n      key: props.tagsSource.metas.indexOf(meta),\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.tagsPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getTagsData.pageNo,\n    totalCount: props.tagsSource.totalCount,\n    size: props.getTagsData.size,\n    maxPage: Math.ceil(parseInt(props.tagsSource.totalCount) / parseInt(props.getTagsData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(SideBar, {\n    key: \"tagsPageSidebar\",\n    isActive: props.identity.data.tagsPageSidebar,\n    widgets: props.widgets,\n    position: \"tagsPageSidebar\"\n  })), __jsx(Footer, null)));\n};\n\ntags.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, getTagsData, tagsSource, widgets, settings, widgetsData, settingsData, tagsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          getTagsData = {\n            type: 'tag',\n            searchForImageIn: 'tags',\n            pageNo: parseInt(query.page) || 1,\n            size: parseInt(query.size) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('tagsPageSidebar'));\n\n        case 4:\n          widgetsData = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(getMultipleSetting({\n            settings: ['identity', 'navigation', 'design']\n          }, true));\n\n        case 7:\n          settingsData = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(getMeta(getTagsData));\n\n        case 10:\n          tagsData = _context.sent;\n          settings = settingsData.data.settings ? settingsData.data.settings : [];\n          tagsSource = tagsData.data ? tagsData.data : {\n            tags: [],\n            totalCount: 0\n          };\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          return _context.abrupt(\"return\", _objectSpread({}, settings, {\n            tagsSource: tagsSource,\n            getTagsData: getTagsData,\n            query: query,\n            pathname: pathname,\n            widgets: widgets\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(tags);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","getSetting","getWidgetsWithData","getMeta","AppContext","TagElement","CategoryElement","PaginationComponent","SiteSettingSetter","withRouter","SideBar","Footer","tags","props","style","state","setState","console","log","identity","tagsPageSidebar","gridArea","renderTags","tagsSource","metas","map","meta","indexOf","imageUrl","noImageUrl","name","count","getTagsData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","data","widgets","getInitialProps","req","res","err","type","searchForImageIn","page","sort","widgetsData","settings","settingsData","tagsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getMultipleSetting, getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport SideBar from '../../../components/includes/Sidebar/Sidebar'\r\nimport Footer from '../../../components/includes/Footer/Footer'\r\n\r\nconst tags = props => {\r\n\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        if (props.identity.tagsPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [ props ]);\r\n\r\n    const renderTags = props.tagsSource.metas.map(meta => {\r\n        return (\r\n            <TagElement key={ props.tagsSource.metas.indexOf(meta) } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div style={ state.style } className={ props.identity.tagsPageSidebar ? 'content withSidebar' : 'content withOutSidebar' }>\r\n                    <div>\r\n                        <div className='tags'>\r\n                            { renderTags }\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={ props.getTagsData.pageNo }\r\n                            totalCount={ props.tagsSource.totalCount }\r\n                            size={ props.getTagsData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.tagsSource.totalCount) / parseInt(props.getTagsData.size)) - 1 }\r\n                            queryData={ props.query || props.router.query }\r\n                            pathnameData={ props.pathname || props.router.pathname }\r\n                        />\r\n                    </div>\r\n                    <SideBar key='tagsPageSidebar' isActive={ props.identity.data.tagsPageSidebar } widgets={ props.widgets } position='tagsPageSidebar'/>\r\n                </div>\r\n                <Footer/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const getTagsData = {\r\n        type: 'tag',\r\n        searchForImageIn: 'tags',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size)  || 30,\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    let tagsSource;\r\n    let widgets;\r\n    let settings;\r\n\r\n\r\n\r\n    const widgetsData = await getWidgetsWithData('tagsPageSidebar')\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true)\r\n    const tagsData = await getMeta(getTagsData)\r\n\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    tagsSource = tagsData.data ? tagsData.data : { tags: [], totalCount: 0 }\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n\r\n    return { ...settings, tagsSource, getTagsData, query, pathname, widgets }\r\n}\r\nexport default withRouter(tags);\r\n"]},"metadata":{},"sourceType":"module"}