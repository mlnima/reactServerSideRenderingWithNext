{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Link from \"next/link\";\nimport { AppContext } from \"../../../../context/AppContext\";\n\nconst Logo = () => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    logoText: 'Logo',\n    headLine: 'Head Line',\n    logoTextStyle: {},\n    headLineStyle: {}\n  });\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      logoText: contextData.siteIdentity.logoText,\n      headLine: contextData.siteIdentity.headLine,\n      logoTextStyle: {\n        color: contextData.siteDesign.textLogoColor,\n        fontSize: contextData.siteDesign.textLogoSize\n      },\n      headLineStyle: {\n        color: contextData.siteDesign.headLineColor,\n        fontSize: contextData.siteDesign.headLineSize\n      }\n    }));\n  }, [contextData.siteIdentity]);\n\n  const RenderLogo = () => {\n    if (contextData.siteIdentity.imageLogo) {\n      return __jsx(\"img\", {\n        src: \"/static/images/logo/Logo.png\"\n      });\n    } else return null;\n  };\n\n  return __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"div\", {\n    className: \"Logo\"\n  }, __jsx(RenderLogo, null), __jsx(\"span\", {\n    style: state.logoTextStyle,\n    className: \"logoText\"\n  }, state.logoText), __jsx(\"p\", {\n    style: state.headLineStyle,\n    className: \"headLine\"\n  }, state.headLine)));\n};\n\nexport default Logo;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Logo/Logo.js"],"names":["React","useContext","useState","useEffect","Link","AppContext","Logo","contextData","state","setState","logoText","headLine","logoTextStyle","headLineStyle","siteIdentity","color","siteDesign","textLogoColor","fontSize","textLogoSize","headLineColor","headLineSize","RenderLogo","imageLogo"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,WAAW,GAAGN,UAAU,CAACI,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEG,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,QAAQ,EAAE,MADuB;AAEjCC,IAAAA,QAAQ,EAAE,WAFuB;AAGjCC,IAAAA,aAAa,EAAE,EAHkB;AAIjCC,IAAAA,aAAa,EAAE;AAJkB,GAAD,CAApC;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,mBACDD,KADC;AAEJE,MAAAA,QAAQ,EAAEH,WAAW,CAACO,YAAZ,CAAyBJ,QAF/B;AAGJC,MAAAA,QAAQ,EAAEJ,WAAW,CAACO,YAAZ,CAAyBH,QAH/B;AAKJC,MAAAA,aAAa,EAAE;AACXG,QAAAA,KAAK,EAAER,WAAW,CAACS,UAAZ,CAAuBC,aADnB;AAEXC,QAAAA,QAAQ,EAAEX,WAAW,CAACS,UAAZ,CAAuBG;AAFtB,OALX;AASJN,MAAAA,aAAa,EAAE;AACXE,QAAAA,KAAK,EAAER,WAAW,CAACS,UAAZ,CAAuBI,aADnB;AAEXF,QAAAA,QAAQ,EAAEX,WAAW,CAACS,UAAZ,CAAuBK;AAFtB;AATX,OAAR;AAeH,GAhBQ,EAgBN,CAAEd,WAAW,CAACO,YAAd,CAhBM,CAAT;;AAkBA,QAAMQ,UAAU,GAAG,MAAM;AACrB,QAAIf,WAAW,CAACO,YAAZ,CAAyBS,SAA7B,EAAwC;AACpC,aACI;AAAK,QAAA,GAAG,EAAC;AAAT,QADJ;AAGH,KAJD,MAIO,OAAO,IAAP;AACV,GAND;;AAQA,SACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,UAAD,OADJ,EAEI;AAAM,IAAA,KAAK,EAAGf,KAAK,CAACI,aAApB;AAAoC,IAAA,SAAS,EAAC;AAA9C,KAA2DJ,KAAK,CAACE,QAAjE,CAFJ,EAGI;AAAG,IAAA,KAAK,EAAGF,KAAK,CAACK,aAAjB;AAAiC,IAAA,SAAS,EAAC;AAA3C,KAAwDL,KAAK,CAACG,QAA9D,CAHJ,CADJ,CADJ;AASH,CA5CD;;AA8CA,eAAeL,IAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Link from \"next/link\";\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\n\r\nconst Logo = () => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        logoText: 'Logo',\r\n        headLine: 'Head Line',\r\n        logoTextStyle: {},\r\n        headLineStyle: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            logoText: contextData.siteIdentity.logoText,\r\n            headLine: contextData.siteIdentity.headLine,\r\n\r\n            logoTextStyle: {\r\n                color: contextData.siteDesign.textLogoColor,\r\n                fontSize: contextData.siteDesign.textLogoSize\r\n            },\r\n            headLineStyle: {\r\n                color: contextData.siteDesign.headLineColor,\r\n                fontSize: contextData.siteDesign.headLineSize\r\n            },\r\n\r\n        })\r\n    }, [ contextData.siteIdentity ]);\r\n\r\n    const RenderLogo = () => {\r\n        if (contextData.siteIdentity.imageLogo) {\r\n            return (\r\n                <img src='/static/images/logo/Logo.png'/>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <Link href='/'>\r\n            <div className='Logo'>\r\n                <RenderLogo/>\r\n                <span style={ state.logoTextStyle } className='logoText'>{ state.logoText }</span>\r\n                <p style={ state.headLineStyle } className='headLine'>{ state.headLine }</p>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n"]},"metadata":{},"sourceType":"module"}