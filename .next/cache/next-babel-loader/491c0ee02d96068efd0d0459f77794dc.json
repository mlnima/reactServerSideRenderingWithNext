{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nexport const AppContext = React.createContext();\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({\n    loading: false\n  });\n  const {\n    0: settings,\n    1: dispatchSettings\n  } = useState({\n    adminPanelSideBar: false,\n    test: false\n  });\n  const {\n    0: userData,\n    1: dispatchUserData\n  } = useState({});\n  const {\n    0: editingPostData,\n    1: dispatchEditingPostData\n  } = useState({\n    categories: [],\n    actors: [],\n    tags: [],\n    title: '',\n    author: '',\n    description: '',\n    disLikes: 0,\n    mainThumbnail: '',\n    videoTrailerUrl: '',\n    videoEmbedCode: '',\n    likes: 0,\n    quality: '',\n    status: '',\n    postType: '',\n    sourceSite: '',\n    views: 0\n  });\n  const {\n    0: adminPosts,\n    1: dispatchAdminPosts\n  } = useState([]);\n  const {\n    0: adminPostsData,\n    1: dispatchAdminPostsData\n  } = useState({\n    pageNo: 1,\n    size: 30,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'all',\n    author: 'all',\n    fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n    checkedPosts: []\n  });\n  const {\n    0: functions,\n    1: dispatchFunctions\n  } = useState({\n    getAndSetUserInfo: async () => {\n      if (localStorage.wt) {\n        await axios.post('/api/v1/users/getUserInfo', {\n          token: localStorage.wt\n        }).then(res => {\n          dispatchUserData(_objectSpread({}, userData, {}, res.data.userData));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    logOutUser: () => {\n      localStorage.removeItem('wt');\n      dispatchUserData({});\n      props.router.push('/');\n    },\n    goToAdminPanel: () => {\n      props.router.push('/admin');\n    },\n    goToHomePage: () => {// props.router.push('/')\n    },\n    savePosts: async data => {\n      const body = {\n        postData: data,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/createNewPost', body);\n    },\n    updatePost: async data => {\n      const body = {\n        postData: data,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/createNewPost', body);\n    },\n    getPosts: async data => {\n      const body = _objectSpread({}, data, {\n        token: localStorage.wt\n      });\n\n      return await axios.post('/api/v1/posts', body);\n    },\n    getPost: async _id => {\n      const body = {\n        _id,\n        token: localStorage.wt\n      };\n      return await axios.post('/api/v1/posts/post', body);\n    },\n    setEditingPostData: (name, value) => {\n      dispatchEditingPostData(editingPostData => _objectSpread({}, editingPostData, {\n        [name]: value\n      }));\n    },\n    bulkActionPost: (ids, status) => {\n      dispatchState(_objectSpread({}, state, {\n        loading: true\n      }));\n      const body = {\n        ids,\n        status,\n        token: localStorage.wt\n      };\n      axios.post('/api/v1/posts/postsBulkAction', body).then(() => {\n        dispatchState(_objectSpread({}, state, {\n          loading: false\n        }));\n      }).catch(() => {\n        dispatchState(_objectSpread({}, state, {\n          loading: false\n        }));\n      });\n    },\n    deletePost: id => {\n      const body = {\n        _id: id,\n        token: localStorage.wt\n      };\n      return axios.post('/api/v1/posts/deletePost', body);\n    }\n  });\n  useEffect(() => {\n    functions.getAndSetUserInfo();\n  }, []);\n  useEffect(() => {\n    console.log(editingPostData);\n  }, [editingPostData]);\n  useEffect(() => {\n    console.log(props);\n\n    if (props.router.pathname === '/admin/posts') {\n      functions.getPosts(adminPostsData).then(res => {\n        dispatchAdminPosts(res.data.posts);\n        dispatchAdminPostsData(_objectSpread({}, adminPostsData, {\n          totalPosts: parseInt(res.data.totalCount)\n        }));\n      });\n    }\n  }, [adminPostsData.pageNo, adminPostsData.size, adminPostsData.postType, adminPostsData.keyword, adminPostsData.status, adminPostsData.fields]);\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state,\n      dispatchState,\n      settings,\n      dispatchSettings,\n      userData,\n      dispatchUserData,\n      functions,\n      editingPostData,\n      dispatchEditingPostData,\n      adminPosts,\n      dispatchAdminPosts,\n      adminPostsData,\n      dispatchAdminPostsData\n    }\n  }, props.children));\n};\n\nAppProvider.getInitialProps = ctx => {\n  return {\n    ctx\n  };\n};\n\nexport const AppProviderWithRouter = withRouter(AppProvider);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","withRouter","AppContext","createContext","AppProvider","props","state","dispatchState","loading","settings","dispatchSettings","adminPanelSideBar","test","userData","dispatchUserData","editingPostData","dispatchEditingPostData","categories","actors","tags","title","author","description","disLikes","mainThumbnail","videoTrailerUrl","videoEmbedCode","likes","quality","status","postType","sourceSite","views","adminPosts","dispatchAdminPosts","adminPostsData","dispatchAdminPostsData","pageNo","size","totalPosts","keyword","fields","checkedPosts","functions","dispatchFunctions","getAndSetUserInfo","localStorage","wt","post","token","then","res","data","catch","err","console","log","logOutUser","removeItem","router","push","goToAdminPanel","goToHomePage","savePosts","body","postData","updatePost","getPosts","getPost","_id","setEditingPostData","name","value","bulkActionPost","ids","deletePost","id","pathname","posts","parseInt","totalCount","children","getInitialProps","ctx","AppProviderWithRouter"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"next/router\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({\r\n        loading: false\r\n    });\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        test: false\r\n    });\r\n    const [ userData, dispatchUserData ] = useState({});\r\n    const [ editingPostData, dispatchEditingPostData ] = useState({\r\n        categories: [],\r\n        actors: [],\r\n        tags: [],\r\n        title: '',\r\n        author: '',\r\n        description: '',\r\n        disLikes: 0,\r\n        mainThumbnail: '',\r\n        videoTrailerUrl: '',\r\n        videoEmbedCode: '',\r\n        likes: 0,\r\n        quality: '',\r\n        status: '',\r\n        postType: '',\r\n        sourceSite: '',\r\n        views: 0,\r\n    });\r\n    const [ adminPosts, dispatchAdminPosts ] = useState([]);\r\n    const [ adminPostsData, dispatchAdminPostsData ] = useState({\r\n        pageNo: 1,\r\n        size: 30,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo: async () => {\r\n            if (localStorage.wt) {\r\n                await axios.post('/api/v1/users/getUserInfo', { token: localStorage.wt }).then(res => {\r\n                    dispatchUserData({ ...userData, ...res.data.userData });\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        logOutUser: () => {\r\n            localStorage.removeItem('wt');\r\n            dispatchUserData({})\r\n            props.router.push('/')\r\n        },\r\n        goToAdminPanel: () => {\r\n            props.router.push('/admin')\r\n        },\r\n        goToHomePage: () => {\r\n            // props.router.push('/')\r\n        },\r\n        savePosts: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/createNewPost', body)\r\n        },\r\n        updatePost: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/createNewPost', body)\r\n        },\r\n        getPosts: async (data) => {\r\n            const body = {\r\n                ...data,\r\n                token: localStorage.wt\r\n            };\r\n            return await axios.post('/api/v1/posts', body)\r\n        },\r\n        getPost: async (_id) => {\r\n            const body = {\r\n                _id,\r\n                token: localStorage.wt\r\n            };\r\n            return await axios.post('/api/v1/posts/post', body)\r\n        },\r\n        setEditingPostData: (name, value) => {\r\n            dispatchEditingPostData(editingPostData => ({\r\n                ...editingPostData,\r\n                [name]: value\r\n            }))\r\n        },\r\n        bulkActionPost: (ids, status) => {\r\n            dispatchState({\r\n                ...state,\r\n                loading: true\r\n            });\r\n            const body = {\r\n                ids,\r\n                status,\r\n                token: localStorage.wt\r\n            };\r\n            axios.post('/api/v1/posts/postsBulkAction', body).then(() => {\r\n                dispatchState({\r\n                    ...state,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(() => {\r\n                dispatchState({\r\n                    ...state,\r\n                    loading: false\r\n                });\r\n            })\r\n        },\r\n        deletePost: (id) => {\r\n            const body = {\r\n                _id: id,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/deletePost', body)\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        functions.getAndSetUserInfo()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(editingPostData)\r\n    }, [ editingPostData ]);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.router.pathname === '/admin/posts') {\r\n            functions.getPosts(adminPostsData).then(res => {\r\n                dispatchAdminPosts(res.data.posts);\r\n                dispatchAdminPostsData({\r\n                    ...adminPostsData,\r\n                    totalPosts: parseInt(res.data.totalCount),\r\n                })\r\n            })\r\n        }\r\n    }, [ adminPostsData.pageNo, adminPostsData.size, adminPostsData.postType, adminPostsData.keyword, adminPostsData.status, adminPostsData.fields ]);\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions,\r\n                    editingPostData,\r\n                    dispatchEditingPostData,\r\n                    adminPosts,\r\n                    dispatchAdminPosts,\r\n                    adminPostsData,\r\n                    dispatchAdminPostsData,\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n};\r\n\r\nAppProvider.getInitialProps = (ctx) => {\r\n    return { ctx }\r\n};\r\n\r\nexport const AppProviderWithRouter = withRouter(AppProvider);"]},"metadata":{},"sourceType":"module"}