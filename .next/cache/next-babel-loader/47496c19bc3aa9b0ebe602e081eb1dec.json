{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../../../context/AppContext\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nconst SideBar = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const generateFakeData = () => {\n    // const body = {\n    //     type: \"Video\",\n    //     size: 1000,\n    //     pageNo: 1,\n    //     fields: [\"author\", \"title\", \"imageUrl\", \"status\", \"actors\", \"tags\", \"categories\"],\n    //     status: \"All\",\n    //     author: \"All\",\n    //     keyword: \"\"\n    // };\n    axios.post('http://localhost:4200/server/posts/admin-postsForTest').then(res => {\n      const posts = res.data.posts;\n      posts.forEach(async post => {\n        let data = {\n          title: post.title.en,\n          categories: post.categories,\n          comments: post.comments,\n          actors: post.actors,\n          tags: post.tags,\n          author: '5e322f0f8b2a0637dc3b6a16',\n          description: post.description.en,\n          disLikes: 0,\n          mainThumbnail: post.imageUrl,\n          videoTrailerUrl: post.imagePreviewUrl,\n          videoEmbedCode: post.iframe,\n          likes: 0,\n          duration: post.duration,\n          quality: post.quality,\n          status: 'published',\n          postType: \"video\",\n          sourceSite: \"Xhamster\",\n          views: 0,\n          lastModify: Date.now()\n        }; // let dataToSave = {\n        //     title:post.title.en,\n        //     author:'5e322f0f8b2a0637dc3b6a16',\n        //     categories:post.categories,\n        //     actors:post.actors,\n        //     tags:post.tags,\n        //     mainThumbnail:post.imageUrl,\n        //     status:post.status,\n        //     type:post.type\n        // };\n\n        await contextData.functions.savePosts(data); // console.log(post. )\n      });\n    });\n  };\n\n  if (contextData.settings.adminPanelSideBar) {\n    return __jsx(\"div\", {\n      className: \"SideBar\"\n    }, __jsx(\"button\", {\n      onClick: () => generateFakeData()\n    }, \"take fake data\"), __jsx(Link, {\n      href: \"/admin/posts\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Posts\")), __jsx(Link, {\n      href: \"/admin/media\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Media\")), __jsx(Link, {\n      href: \"/admin/psges\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Pages\")), __jsx(Link, {\n      href: \"/admin/comments\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Comments\")), __jsx(Link, {\n      href: \"/admin/feedback\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Feedback\")), __jsx(Link, {\n      href: \"/admin/design\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Design\")), __jsx(Link, {\n      href: \"/admin/plugins\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Plugins\")), __jsx(Link, {\n      href: \"/admin/users\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Users\")), __jsx(Link, {\n      href: \"/admin/settings\"\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, \"Settings\")));\n  } else return null;\n};\n\nexport default SideBar;","map":null,"metadata":{},"sourceType":"module"}