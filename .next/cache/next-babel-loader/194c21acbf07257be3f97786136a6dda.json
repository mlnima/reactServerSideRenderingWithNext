{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport _ from 'lodash';\nimport './AdminCommentItem.scss';\nimport withRouter from 'next/dist/client/with-router';\nimport { updateComment, getComments } from '../../../../../_variables/ajaxPostsVariables';\n\nvar AdminCommentItem = function AdminCommentItem(props) {\n  var _useState = useState({\n    hovered: false,\n    checked: false,\n    changed: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({}),\n      commentData = _useState2[0],\n      setCommentData = _useState2[1];\n\n  useEffect(function () {\n    console.log(props);\n    setCommentData(props.data);\n  }, [props.data]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setCommentData(_objectSpread({}, commentData, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSaveHandler = function onSaveHandler() {\n    updateComment({\n      _id: props.data._id,\n      update: commentData\n    }).then(function () {\n      props.router.push(props.router.asPath);\n    });\n  };\n\n  return __jsx(\"div\", {\n    key: props.data._id,\n    className: \"adminCommentsItem\",\n    onMouseOver: function onMouseOver() {\n      return setState(_objectSpread({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseOut: function onMouseOut() {\n      return setState(_objectSpread({}, state, {\n        hovered: false\n      }));\n    }\n  }, __jsx(\"div\", {\n    className: \"adminCommentsItemHead\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: state.checked,\n    onChange: function onChange() {\n      return state.checked ? setState(_objectSpread({}, state, {\n        checked: false\n      })) : setState(_objectSpread({}, state, {\n        checked: true\n      }));\n    }\n  }), __jsx(\"p\", null, props.data.author)), __jsx(\"div\", {\n    className: \"adminCommentsItemBody\"\n  }, __jsx(\"p\", null, props.data.postedDate), __jsx(\"p\", null, props.data.body), __jsx(\"div\", {\n    className: \"commentControl\"\n  }, __jsx(\"select\", {\n    name: \"status\",\n    value: commentData.status,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"approved\"\n  }, \"Approved\"), __jsx(\"option\", {\n    value: \"trash\"\n  }, \"Trash\"), __jsx(\"option\", {\n    value: \"pending\"\n  }, \"Pending\")), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onSaveHandler();\n    }\n  }, \"Save Changes\"))));\n};\n\nexport default withRouter(AdminCommentItem);","map":null,"metadata":{},"sourceType":"module"}