{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport _ from 'lodash';\nimport './AdminCommentItem.scss';\nimport withRouter from 'next/dist/client/with-router';\nimport { updateComment, getComments } from '../../../../../_variables/ajaxPostsVariables';\n\nconst AdminCommentItem = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    hovered: false,\n    checked: false,\n    changed: false\n  });\n  const {\n    0: commentData,\n    1: setCommentData\n  } = useState({});\n  useEffect(() => {\n    console.log(props);\n    setCommentData(props.data);\n  }, [props.data]);\n\n  const onChangeHandler = e => {\n    setCommentData(_objectSpread({}, commentData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSaveHandler = () => {\n    updateComment({\n      _id: props.data._id,\n      update: commentData\n    }).then(() => {\n      props.router.push(props.router.pathname);\n    });\n  };\n\n  return __jsx(\"div\", {\n    key: props.data._id,\n    className: \"adminCommentsItem\",\n    onMouseOver: () => setState(_objectSpread({}, state, {\n      hovered: true\n    })),\n    onMouseOut: () => setState(_objectSpread({}, state, {\n      hovered: false\n    }))\n  }, __jsx(\"div\", {\n    className: \"adminCommentsItemHead\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: state.checked,\n    onChange: () => state.checked ? setState(_objectSpread({}, state, {\n      checked: false\n    })) : setState(_objectSpread({}, state, {\n      checked: true\n    }))\n  }), __jsx(\"p\", null, props.data.author)), __jsx(\"div\", {\n    className: \"adminCommentsItemBody\"\n  }, __jsx(\"p\", null, props.data.postedDate), __jsx(\"p\", null, props.data.body), __jsx(\"div\", {\n    className: \"commentControl\"\n  }, __jsx(\"select\", {\n    name: \"status\",\n    value: commentData.status,\n    onChange: e => onChangeHandler(e)\n  }, __jsx(\"option\", {\n    value: \"approved\"\n  }, \"Approved\"), __jsx(\"option\", {\n    value: \"trash\"\n  }, \"Trash\"), __jsx(\"option\", {\n    value: \"pending\"\n  }, \"Pending\")), __jsx(\"button\", {\n    onClick: () => onSaveHandler()\n  }, \"Save Changes\"))));\n};\n\nexport default withRouter(AdminCommentItem);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminCommentItem/AdminCommentItem.js"],"names":["React","useEffect","useState","useContext","useRef","_","withRouter","updateComment","getComments","AdminCommentItem","props","state","setState","hovered","checked","changed","commentData","setCommentData","console","log","data","onChangeHandler","e","target","name","value","onSaveHandler","_id","update","then","router","push","pathname","author","postedDate","body","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport _ from 'lodash'\r\nimport './AdminCommentItem.scss'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport { updateComment,getComments } from '../../../../../_variables/ajaxPostsVariables'\r\n\r\nconst AdminCommentItem = props => {\r\n    const [ state, setState ] = useState({\r\n        hovered: false,\r\n        checked: false,\r\n        changed: false\r\n    });\r\n\r\n    const [ commentData, setCommentData ] = useState({})\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        setCommentData(props.data)\r\n    }, [ props.data ]);\r\n\r\n\r\n\r\n    const onChangeHandler = e => {\r\n        setCommentData({\r\n            ...commentData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSaveHandler = () => {\r\n        updateComment({\r\n            _id: props.data._id,\r\n            update: commentData\r\n        }).then(()=>{\r\n            props.router.push(props.router.pathname)\r\n        })\r\n    }\r\n    return (\r\n        <div key={ props.data._id } className='adminCommentsItem' onMouseOver={ () => setState({ ...state, hovered: true }) } onMouseOut={ () => setState({ ...state, hovered: false }) }>\r\n            <div className=\"adminCommentsItemHead\">\r\n                <input type='checkbox' checked={ state.checked } onChange={ () => state.checked ? setState({ ...state, checked: false }) : setState({ ...state, checked: true }) }/>\r\n                <p>{ props.data.author }</p>\r\n            </div>\r\n            <div className=\"adminCommentsItemBody\">\r\n                <p>{ props.data.postedDate }</p>\r\n                <p>{ props.data.body }</p>\r\n                <div className='commentControl'>\r\n                    <select name='status' value={ commentData.status  } onChange={ e => onChangeHandler(e) }>\r\n                        <option value='approved'>Approved</option>\r\n                        <option value='trash'>Trash</option>\r\n                        <option value='pending'>Pending</option>\r\n                    </select>\r\n                    <button onClick={ () =>onSaveHandler()  }>Save Changes\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(AdminCommentItem);\r\n"]},"metadata":{},"sourceType":"module"}