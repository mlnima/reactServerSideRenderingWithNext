{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './TopBar.scss';\nimport { AppContext } from \"../../../context/AppContext\";\nimport withRouter from \"next/dist/client/with-router\";\nimport FA from \"react-fontawesome\";\nimport AdminActionMenu from \"./AdminActionMenu/AdminActionMenu\";\nimport { setSprCache } from \"next/dist/next-server/server/spr-cache\";\n\nconst TopBar = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({\n    AdminActionMenu: false\n  });\n\n  const AdminSideBarOpenCloseHandler = () => {\n    contextData.settings.adminPanelSideBar ? contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: false\n    })) : contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: true\n    }));\n  };\n\n  const goToHomePage = () => {\n    props.router.push('/');\n    console.log(props.router);\n  };\n\n  const newAction = () => {\n    console.log('there is no action defined');\n  };\n\n  const adminActionHandler = () => {\n    state.AdminActionMenu ? dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: false\n    })) : dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: true\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"adminTopBar\"\n  }, __jsx(\"div\", {\n    className: \"adminTopBarControl\"\n  }, __jsx(\"button\", {\n    className: \"adminSideBarMobileBtn adminTopBarItem\",\n    onClick: () => AdminSideBarOpenCloseHandler()\n  }, \" \", __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"bars\"\n  }), \" \"), __jsx(\"button\", {\n    className: \"adminGoToHomePageBtn adminTopBarItem\",\n    onClick: () => goToHomePage()\n  }, \" \", __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"home\"\n  }), \" \"), __jsx(\"button\", {\n    className: \"adminNewActionBtn adminTopBarItem\",\n    onClick: () => newAction()\n  }, \" \", __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"plus\"\n  }), \" \")), __jsx(\"button\", {\n    className: \"adminSideBarMobileBtn adminTopBarItem\",\n    onClick: () => adminActionHandler()\n  }, \" \", __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"user\"\n  }), \" \")), __jsx(AdminActionMenu, {\n    active: state.AdminActionMenu\n  }));\n};\n\nexport default withRouter(TopBar);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/TopBar/TopBar.js"],"names":["React","useEffect","useState","useContext","AppContext","withRouter","FA","AdminActionMenu","setSprCache","TopBar","props","contextData","state","dispatchState","AdminSideBarOpenCloseHandler","settings","adminPanelSideBar","dispatchSettings","goToHomePage","router","push","console","log","newAction","adminActionHandler"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,WAAT,QAA4B,wCAA5B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAMC,WAAW,GAAGR,UAAU,CAACC,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEQ,KAAF;AAAA,OAASC;AAAT,MAA2BX,QAAQ,CAAC;AACtCK,IAAAA,eAAe,EAAC;AADsB,GAAD,CAAzC;;AAGA,QAAMO,4BAA4B,GAAC,MAAI;AACnCH,IAAAA,WAAW,CAACI,QAAZ,CAAqBC,iBAArB,GACIL,WAAW,CAACM,gBAAZ,CAA6BF,QAAQ,sBAC9BA,QAD8B;AAEjCC,MAAAA,iBAAiB,EAAC;AAFe,MAArC,CADJ,GAKIL,WAAW,CAACM,gBAAZ,CAA6BF,QAAQ,sBAC9BA,QAD8B;AAEjCC,MAAAA,iBAAiB,EAAC;AAFe,MAArC,CALJ;AASH,GAVD;;AAYA,QAAME,YAAY,GAAG,MAAI;AACrBR,IAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkB,GAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAaZ,KAAK,CAACS,MAAnB;AACH,GAHD;;AAKA,QAAMI,SAAS,GAAG,MAAI;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb;AACH,GAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAI;AAC3BZ,IAAAA,KAAK,CAACL,eAAN,GACIM,aAAa,mBACND,KADM;AAETL,MAAAA,eAAe,EAAC;AAFP,OADjB,GAKAM,aAAa,mBACND,KADM;AAETL,MAAAA,eAAe,EAAC;AAFP,OALb;AASH,GAVD;;AAcA,SACI,4BACA;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC,uCAAlB;AAA0D,IAAA,OAAO,EAAE,MAAIO,4BAA4B;AAAnG,UAAwG,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAxG,MADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,sCAAlB;AAAyD,IAAA,OAAO,EAAE,MAAII,YAAY;AAAlF,UAAuF,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAvF,MAFJ,EAGI;AAAQ,IAAA,SAAS,EAAC,mCAAlB;AAAsD,IAAA,OAAO,EAAE,MAAIK,SAAS;AAA5E,UAAiF,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAjF,MAHJ,CADJ,EAMI;AAAQ,IAAA,SAAS,EAAC,uCAAlB;AAA0D,IAAA,OAAO,EAAE,MAAIC,kBAAkB;AAAzF,UAA8F,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAA9F,MANJ,CADA,EASI,MAAC,eAAD;AAAiB,IAAA,MAAM,EAAEZ,KAAK,CAACL;AAA/B,IATJ,CADJ;AAaH,CArDD;;AAsDA,eAAeF,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './TopBar.scss';\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport FA from \"react-fontawesome\";\r\nimport AdminActionMenu from \"./AdminActionMenu/AdminActionMenu\";\r\nimport { setSprCache } from \"next/dist/next-server/server/spr-cache\";\r\n\r\nconst TopBar = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, dispatchState ] = useState({\r\n        AdminActionMenu:false\r\n    });\r\n    const AdminSideBarOpenCloseHandler=()=>{\r\n        contextData.settings.adminPanelSideBar ?\r\n            contextData.dispatchSettings(settings=>({\r\n                ...settings,\r\n                adminPanelSideBar:false,\r\n            })):\r\n            contextData.dispatchSettings(settings=>({\r\n                ...settings,\r\n                adminPanelSideBar:true,\r\n            }))\r\n    };\r\n\r\n    const goToHomePage = ()=>{\r\n        props.router.push('/')\r\n        console.log( props.router)\r\n    };\r\n\r\n    const newAction = ()=>{\r\n        console.log( 'there is no action defined')\r\n    };\r\n\r\n    const adminActionHandler = ()=>{\r\n        state.AdminActionMenu?\r\n            dispatchState({\r\n                ...state,\r\n                AdminActionMenu:false\r\n    }):\r\n        dispatchState({\r\n            ...state,\r\n            AdminActionMenu:true\r\n    })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className='adminTopBar'>\r\n            <div className=\"adminTopBarControl\">\r\n                <button className='adminSideBarMobileBtn adminTopBarItem' onClick={()=>AdminSideBarOpenCloseHandler()}> <FA className='fontawesomeMedium' name=\"bars\" /> </button>\r\n                <button className='adminGoToHomePageBtn adminTopBarItem' onClick={()=>goToHomePage()}> <FA className='fontawesomeMedium' name=\"home\" /> </button>\r\n                <button className='adminNewActionBtn adminTopBarItem' onClick={()=>newAction()}> <FA className='fontawesomeMedium' name=\"plus\" /> </button>\r\n            </div>\r\n            <button className='adminSideBarMobileBtn adminTopBarItem' onClick={()=>adminActionHandler()}> <FA className='fontawesomeMedium' name=\"user\" /> </button>\r\n        </div>\r\n            <AdminActionMenu active={state.AdminActionMenu}/>\r\n        </>\r\n    );\r\n};\r\nexport default withRouter(TopBar);"]},"metadata":{},"sourceType":"module"}