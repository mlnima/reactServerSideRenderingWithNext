{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport CategoriesSidebar from '../../../components/includes/pages/Categories/CategoriesSidebar/CategoriesSidebar';\nimport SideBar from '../../../components/includes/SideBar/SideBar'; // import './categories.scss'import './categories.scss'\n\nvar categories = function categories(props) {\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.identity.categoriesPagesSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  var renderCategories = props.categoriesSource.metas.map(function (meta) {\n    return __jsx(CategoryElement, {\n      key: meta._id,\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.categoriesPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"categories\"\n  }, renderCategories), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCategoriesData.pageNo,\n    totalCount: props.categoriesSource.totalCount,\n    size: props.getCategoriesData.size,\n    maxPage: Math.ceil(parseInt(props.categoriesSource.totalCount) / parseInt(props.getCategoriesData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(SideBar, {\n    isActive: props.identity.categoriesPageSidebar,\n    widgets: props.widgets,\n    position: \"categoriesPageSidebar\"\n  }))));\n};\n\ncategories.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, widgets, categoriesSource, identityData, navigationData, widgetsData, getCategoriesData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('categoriesPageSidebar'));\n\n        case 9:\n          widgetsData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          getCategoriesData = {\n            type: 'category',\n            searchForImageIn: 'categories',\n            pageNo: parseInt(query.page) || 1,\n            size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(getMeta(getCategoriesData));\n\n        case 16:\n          categoriesData = _context.sent;\n          categoriesSource = categoriesData.data ? categoriesData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            categoriesSource: categoriesSource,\n            getCategoriesData: getCategoriesData,\n            pathname: pathname,\n            widgets: widgets\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(categories);","map":null,"metadata":{},"sourceType":"module"}