{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './UploadedPopView.scss';\n\nconst UploadedPopView = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const onCloseHandler = () => {\n    // props.setStateHandler('path', itemPath)\n    //props.setStateHandler('clickedItem','')\n    props.setState(_objectSpread({}, props.state, {\n      clickedItem: '',\n      path: props.state.prevPath\n    }));\n  };\n\n  if (props.clickedItem) {\n    return __jsx(\"div\", {\n      className: \"uploaded-pop-view\"\n    }, __jsx(\"button\", {\n      className: \"closeBtn\",\n      onClick: () => onCloseHandler()\n    }, \"X\"), __jsx(\"div\", {\n      className: \"gallery-pop-view-content\"\n    }, \"clickedItem\"));\n  } else return null;\n};\n\nexport default UploadedPopView;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/UploadedPopView/UploadedPopView.js"],"names":["React","useEffect","useState","useContext","useRef","UploadedPopView","props","state","setState","onCloseHandler","clickedItem","path","prevPath"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMQ,cAAc,GAAG,MAAM;AACzB;AACA;AACAH,IAAAA,KAAK,CAACE,QAAN,mBACOF,KAAK,CAACC,KADb;AAEIG,MAAAA,WAAW,EAAC,EAFhB;AAGIC,MAAAA,IAAI,EAACL,KAAK,CAACC,KAAN,CAAYK;AAHrB;AAKH,GARD;;AAUA,MAAIN,KAAK,CAACI,WAAV,EAAuB;AACnB,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,MAAID,cAAc;AAAxD,WADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,qBAFJ,CADJ;AAQH,GATD,MASO,OAAO,IAAP;AAEV,CA1BD;;AA2BA,eAAeJ,eAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './UploadedPopView.scss'\r\n\r\nconst UploadedPopView = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onCloseHandler = () => {\r\n        // props.setStateHandler('path', itemPath)\r\n        //props.setStateHandler('clickedItem','')\r\n        props.setState({\r\n            ...props.state,\r\n            clickedItem:'',\r\n            path:props.state.prevPath\r\n        })\r\n    }\r\n\r\n    if (props.clickedItem) {\r\n        return (\r\n            <div className='uploaded-pop-view'>\r\n                <button className='closeBtn' onClick={()=>onCloseHandler()}>X</button>\r\n                <div className='gallery-pop-view-content'>\r\n                    clickedItem\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default UploadedPopView;\r\n"]},"metadata":{},"sourceType":"module"}