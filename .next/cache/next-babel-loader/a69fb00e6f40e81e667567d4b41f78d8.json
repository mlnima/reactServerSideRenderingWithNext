{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\n\nvar actors = function actors(props) {\n  var renderActors = props.actorsSource.metas.map(function (meta) {\n    return __jsx(ActorElement, {\n      key: meta._id,\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"actors\"\n  }, renderActors), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getActorsData.pageNo,\n    totalCount: props.actorsSource.totalCount,\n    size: props.getActorsData.size,\n    maxPage: Math.ceil(_parseInt(props.actorsSource.totalCount) / _parseInt(props.getActorsData.size)) - 1\n  })));\n};\n\nactors.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, actorsSource, identityData, navigationData, getActorsData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          getActorsData = {\n            type: 'actor',\n            searchForImageIn: 'actors',\n            pageNo: _parseInt(query.page) || 1,\n            size: _parseInt(query.size) || _parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getMeta(getActorsData));\n\n        case 12:\n          categoriesData = _context.sent;\n          actorsSource = categoriesData.data ? categoriesData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            actorsSource: actorsSource,\n            getActorsData: getActorsData\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default actors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/actors/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","AppContext","TagElement","getSetting","getMeta","CategoryElement","ActorElement","SiteSettingSetter","PaginationComponent","actors","props","renderActors","actorsSource","metas","map","meta","_id","imageUrl","noImageUrl","name","count","getActorsData","pageNo","totalCount","size","Math","ceil","getInitialProps","pathname","query","req","res","err","identityData","navigationData","identity","data","setting","navigation","type","searchForImageIn","page","tagsCountPerPage","sort","categoriesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\n\r\nconst actors = props => {\r\n\r\n    const renderActors = props.actorsSource.metas.map(meta => {\r\n        return (\r\n            <ActorElement key={ meta._id } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div className='actors'>\r\n                    { renderActors }\r\n                </div>\r\n                <PaginationComponent\r\n                    isActive={ true }\r\n                    currentPage={props.getActorsData.pageNo }\r\n                    totalCount={ props.actorsSource.totalCount }\r\n                    size={ props.getActorsData.size }\r\n                    maxPage={ Math.ceil(parseInt(props.actorsSource.totalCount) / parseInt(props.getActorsData.size))- 1 }\r\n                />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nactors.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let actorsSource ;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getActorsData = {\r\n        type: 'actor',\r\n        searchForImageIn:'actors',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    const categoriesData = await getMeta(getActorsData)\r\n    actorsSource = categoriesData.data ? categoriesData.data : []\r\n\r\n    return { identity, navigation, query, actorsSource,getActorsData }\r\n}\r\nexport default actors;\r\n"]},"metadata":{},"sourceType":"module"}