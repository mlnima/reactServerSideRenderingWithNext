{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from \"react-fontawesome\";\n\nvar PostCategoriesTagsActors = function PostCategoriesTagsActors(props) {\n  var newItemsElement = useRef(null);\n\n  var deleteItem = function deleteItem(e) {\n    var deletedItemFromType = props.postData[props.type].filter(function (i) {\n      return i !== e.currentTarget.name;\n    });\n    props.onPostMetaChangeHandler(props.type, deletedItemFromType);\n  };\n\n  var addNewItem = function addNewItem() {\n    if (newItemsElement.current.value.includes(',')) {\n      var newItems = newItemsElement.current.value.split(',');\n      newItems.map(function (item) {\n        return item.trim();\n      });\n      var addedItemFromType = [].concat(_toConsumableArray(props.postData[props.type]), _toConsumableArray(newItems));\n      props.onPostMetaChangeHandler(props.type, addedItemFromType);\n    } else {\n      var _addedItemFromType = [].concat(_toConsumableArray(props.postData[props.type]), [newItemsElement.current.value.trim()]);\n\n      props.onPostMetaChangeHandler(props.type, _addedItemFromType);\n    }\n  };\n\n  var addedItems = props.postData[props.type].map(function (item) {\n    var icon = props.type === 'tags' ? 'tags' : props.type === 'actors' ? 'star' : props.type === 'categories' ? 'folder' : '';\n    return __jsx(\"div\", {\n      key: item,\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: function onClick(e) {\n        return deleteItem(e);\n      }\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(\"div\", {\n    className: \"PostCategoriesTagsActors\"\n  }, __jsx(\"div\", {\n    className: \"addNewTag\"\n  }, __jsx(\"input\", {\n    ref: newItemsElement,\n    type: \"text\"\n  }), __jsx(\"button\", {\n    className: \"addBtn\",\n    onClick: function onClick() {\n      return addNewItem();\n    }\n  }, \" Add\")), __jsx(\"span\", {\n    className: \"small-info\"\n  }, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, addedItems));\n};\n\nexport default PostCategoriesTagsActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors.js"],"names":["React","useRef","AppContext","FA","PostCategoriesTagsActors","props","newItemsElement","deleteItem","e","deletedItemFromType","postData","type","filter","i","currentTarget","name","onPostMetaChangeHandler","addNewItem","current","value","includes","newItems","split","map","item","trim","addedItemFromType","addedItems","icon"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport FA from \"react-fontawesome\";\r\n\r\nconst PostCategoriesTagsActors = props => {\r\n    let newItemsElement = useRef(null);\r\n\r\n    const deleteItem = (e) => {\r\n        const deletedItemFromType = props.postData[props.type].filter(i => {\r\n            return i !== e.currentTarget.name\r\n        })\r\n        props.onPostMetaChangeHandler(props.type, deletedItemFromType)\r\n    };\r\n\r\n    const addNewItem = () => {\r\n        if (newItemsElement.current.value.includes(',')) {\r\n            let newItems = newItemsElement.current.value.split(',');\r\n            newItems.map(item=>item.trim())\r\n            const addedItemFromType = [ ...props.postData[props.type], ...newItems ]\r\n            props.onPostMetaChangeHandler(props.type, addedItemFromType)\r\n        } else {\r\n            const addedItemFromType = [ ...props.postData[props.type], newItemsElement.current.value.trim() ]\r\n            props.onPostMetaChangeHandler(props.type, addedItemFromType)\r\n        }\r\n    };\r\n\r\n    const addedItems = props.postData[props.type].map(item => {\r\n        let icon = props.type === 'tags' ? 'tags'\r\n            : props.type === 'actors' ? 'star'\r\n                : props.type === 'categories' ? 'folder'\r\n                    : '';\r\n        return (\r\n            <div key={ item } className='item'>\r\n                <p>{ item }</p>\r\n\r\n                <button name={ item } onClick={ (e) => deleteItem(e) }><FA className='fontawesomeMedium' name='times'/></button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='PostCategoriesTagsActors'>\r\n            <div className=\"addNewTag\">\r\n                <input ref={ newItemsElement } type='text'/>\r\n                <button className='addBtn' onClick={ () => addNewItem() }> Add</button>\r\n            </div>\r\n            <span className='small-info'>Separate tags with commas</span>\r\n            <div className=\"items\">\r\n                { addedItems }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PostCategoriesTagsActors;"]},"metadata":{},"sourceType":"module"}