{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport Link from 'next/link';\n\nconst FilterSearch = props => {\n  let searchInput = useRef(null);\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    keyword: ''\n  });\n  useEffect(() => {\n    if (props.query.keyword) {\n      setState({\n        keyword: props.query.keyword\n      });\n    }\n  }, [props]);\n\n  let onSearchHandler = e => {\n    e.preventDefault();\n    contextData.dispatchAdminPostsData(adminPostsData => _objectSpread({}, adminPostsData, {\n      keyword: state.keyword,\n      pageNo: 1\n    }));\n  };\n\n  let onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      keyword: e.target.value\n    }));\n  };\n\n  return __jsx(\"form\", {\n    className: \"FilterSearch\",\n    onSubmit: e => onSearchHandler(e)\n  }, __jsx(\"input\", {\n    ref: searchInput,\n    value: state.keyword,\n    onChange: e => onChangeHandler(e)\n  }), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        keyword: state.keyword,\n        page: 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"Search Posts\")));\n};\n\nexport default FilterSearch;","map":null,"metadata":{},"sourceType":"module"}