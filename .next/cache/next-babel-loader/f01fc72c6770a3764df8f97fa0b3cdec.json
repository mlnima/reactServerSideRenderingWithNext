{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport './FilterSearch.scss';\n\nconst FilterSearch = props => {\n  let searchInput = useRef(null);\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    keyword: ''\n  });\n  useEffect(() => {}, []);\n\n  let onSearchHandler = e => {// e.preventDefault();\n    // contextData.setPostsData({\n    //     ...contextData.postsData,\n    //     keyword: state.keyword,\n    //     pageNo:1\n    // })\n  };\n\n  let onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      keyword: e.target.value\n    }));\n  };\n\n  let onClearHandler = () => {// contextData.setPostsData({\n    //     ...contextData.postsData,\n    //     keyword: '',\n    //     pageNo:1\n    // })\n    // searchInput.current.value = ''\n  };\n\n  const RenderClearBtn = () => {\n    // if (state.keyword !== '') {\n    //     return (\n    //         <button type='button' onClick={() => onClearHandler()}>x</button>\n    //     )\n    // } else\n    return null;\n  };\n\n  return __jsx(\"form\", {\n    className: \"FilterSearch\",\n    onSubmit: e => onSearchHandler(e)\n  }, __jsx(\"input\", {\n    ref: searchInput,\n    onChange: e => onChangeHandler(e)\n  }), __jsx(RenderClearBtn, null), __jsx(\"button\", {\n    className: \"actionBtn\",\n    type: \"submit\"\n  }, \"Search Posts\"));\n};\n\nexport default FilterSearch;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterSearch.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FilterSearch","props","searchInput","contextData","state","setState","keyword","onSearchHandler","e","onChangeHandler","target","value","onClearHandler","RenderClearBtn"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,MAAIC,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMK,WAAW,GAAGN,UAAU,CAACE,UAAD,CAA9B;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,OAAO,EAAE;AADsB,GAAD,CAAlC;AAGAX,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAIY,eAAe,GAAGC,CAAC,IAAI,CACvB;AACA;AACA;AACA;AACA;AACA;AACH,GAPD;;AASA,MAAIC,eAAe,GAAGD,CAAC,IAAI;AACvBH,IAAAA,QAAQ,mBACDD,KADC;AAEJE,MAAAA,OAAO,EAAEE,CAAC,CAACE,MAAF,CAASC;AAFd,OAAR;AAIH,GALD;;AAOA,MAAIC,cAAc,GAAG,MAAM,CACvB;AACA;AACA;AACA;AACA;AACA;AACH,GAPD;;AASA,QAAMC,cAAc,GAAG,MAAM;AACzB;AACA;AACA;AACA;AACA;AACI,WAAO,IAAP;AACP,GAPD;;AAQA,SACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAGL,CAAD,IAAOD,eAAe,CAACC,CAAD;AAA/D,KACI;AAAO,IAAA,GAAG,EAAEN,WAAZ;AAAyB,IAAA,QAAQ,EAAEM,CAAC,IAAIC,eAAe,CAACD,CAAD;AAAvD,IADJ,EAEI,MAAC,cAAD,OAFJ,EAGI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC;AAAnC,oBAHJ,CADJ;AAOH,CAjDD;;AAkDA,eAAeR,YAAf","sourcesContent":["import React, {useEffect, useState, useContext, useRef} from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport './FilterSearch.scss'\r\n\r\nconst FilterSearch = props => {\r\n    let searchInput = useRef(null)\r\n    const contextData = useContext(AppContext);\r\n    const [state, setState] = useState({\r\n        keyword: ''\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    let onSearchHandler = e => {\r\n        // e.preventDefault();\r\n        // contextData.setPostsData({\r\n        //     ...contextData.postsData,\r\n        //     keyword: state.keyword,\r\n        //     pageNo:1\r\n        // })\r\n    };\r\n\r\n    let onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            keyword: e.target.value\r\n        })\r\n    };\r\n\r\n    let onClearHandler = () => {\r\n        // contextData.setPostsData({\r\n        //     ...contextData.postsData,\r\n        //     keyword: '',\r\n        //     pageNo:1\r\n        // })\r\n        // searchInput.current.value = ''\r\n    };\r\n\r\n    const RenderClearBtn = () => {\r\n        // if (state.keyword !== '') {\r\n        //     return (\r\n        //         <button type='button' onClick={() => onClearHandler()}>x</button>\r\n        //     )\r\n        // } else\r\n            return null\r\n    };\r\n    return (\r\n        <form className='FilterSearch' onSubmit={(e) => onSearchHandler(e)}>\r\n            <input ref={searchInput} onChange={e => onChangeHandler(e)}/>\r\n            <RenderClearBtn/>\r\n            <button className='actionBtn' type='submit'>Search Posts</button>\r\n        </form>\r\n    );\r\n};\r\nexport default FilterSearch;"]},"metadata":{},"sourceType":"module"}