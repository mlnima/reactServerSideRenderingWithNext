{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\nimport AddWidgetMenu from '../../../../components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetMenu';\nimport { AppContext } from '../../../../context/AppContext';\nimport WidgetModel from '../../../../components/adminIncludes/widgetsModel/WidgetModel/WidgetModel';\nimport { getSetting, getWidgets, updateSetting } from '../../../../_variables/ajaxVariables';\n\nconst HomePageWidgets = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []); // useEffect(() => {\n  //     console.log(contextData.widgetsSettings.homeWidgets)\n  //\n  // }, [ contextData.widgetsSettings.homeWidgets ]);\n\n  useEffect(() => {\n    getWidgets('home').then(res => {\n      contextData.dispatchWidgetsSettings({\n        homeWidgets: [...res.data.widgets]\n      });\n      console.log(res);\n    });\n  }, []);\n  const renderWidgets = contextData.widgetsSettings.homeWidgets.map(widget => {\n    switch (widget.type) {\n      case 'posts':\n        return __jsx(WidgetModel, {\n          key: contextData.widgetsSettings.homeWidgets.indexOf(widget),\n          data: widget\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  const onSaveChangesHandler = () => {\n    updateSetting('homePageWidgets', contextData.widgetsSettings.homeWidgets);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"HomePageWidgets\"\n  }, __jsx(\"div\", {\n    className: \"sidePanel\"\n  }, __jsx(AddWidgetMenu, null), __jsx(\"button\", {\n    onClick: () => onSaveChangesHandler(),\n    className: \"saveBtn\"\n  }, \"Save Changes\")), __jsx(\"div\", {\n    className: \"widgets\"\n  }, renderWidgets)));\n};\n\nexport default HomePageWidgets;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/widgets/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","AddWidgetMenu","AppContext","WidgetModel","getSetting","getWidgets","updateSetting","HomePageWidgets","props","contextData","state","setState","then","res","dispatchWidgetsSettings","homeWidgets","data","widgets","console","log","renderWidgets","widgetsSettings","map","widget","type","indexOf","onSaveChangesHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,aAAP,MAA0B,+EAA1B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,WAAP,MAAwB,2EAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,QAAsD,sCAAtD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAMC,WAAW,GAAGX,UAAU,CAACI,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEQ,KAAF;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT,CAH6B,CAM7B;AACA;AACA;AACA;;AAEAA,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,MAAD,CAAV,CAAmBO,IAAnB,CAAwBC,GAAG,IAAI;AAC3BJ,MAAAA,WAAW,CAACK,uBAAZ,CAAoC;AAChCC,QAAAA,WAAW,EAAE,CAAE,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAd;AADmB,OAApC;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,QAAMO,aAAa,GAAGX,WAAW,CAACY,eAAZ,CAA4BN,WAA5B,CAAwCO,GAAxC,CAA4CC,MAAM,IAAI;AACxE,YAASA,MAAM,CAACC,IAAhB;AACI,WAAK,OAAL;AACI,eACI,MAAC,WAAD;AAAa,UAAA,GAAG,EAAGf,WAAW,CAACY,eAAZ,CAA4BN,WAA5B,CAAwCU,OAAxC,CAAgDF,MAAhD,CAAnB;AAA6E,UAAA,IAAI,EAAGA;AAApF,UADJ;AAGA;;AACJ;AACI;AAPR;AASH,GAVqB,CAAtB;;AAYA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BpB,IAAAA,aAAa,CAAC,iBAAD,EAAoBG,WAAW,CAACY,eAAZ,CAA4BN,WAAhD,CAAb;AACH,GAFD;;AAIA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,EAAE,EAAC;AAAR,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,aAAD,OADJ,EAEI;AAAQ,IAAA,OAAO,EAAG,MAAMW,oBAAoB,EAA5C;AAAiD,IAAA,SAAS,EAAC;AAA3D,oBAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACMN,aADN,CALJ,CADJ,CADJ;AAaH,CAjDD;;AAkDA,eAAeb,eAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../../components/layouts/AdminLayout'\r\nimport AddWidgetMenu from '../../../../components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetMenu'\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport WidgetModel from '../../../../components/adminIncludes/widgetsModel/WidgetModel/WidgetModel';\r\nimport { getSetting, getWidgets, updateSetting } from '../../../../_variables/ajaxVariables'\r\n\r\nconst HomePageWidgets = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(contextData.widgetsSettings.homeWidgets)\r\n    //\r\n    // }, [ contextData.widgetsSettings.homeWidgets ]);\r\n\r\n    useEffect(() => {\r\n        getWidgets('home').then(res => {\r\n            contextData.dispatchWidgetsSettings({\r\n                homeWidgets: [ ...res.data.widgets ]\r\n            })\r\n            console.log(res)\r\n        })\r\n    }, []);\r\n\r\n    const renderWidgets = contextData.widgetsSettings.homeWidgets.map(widget => {\r\n        switch ( widget.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <WidgetModel key={ contextData.widgetsSettings.homeWidgets.indexOf(widget) } data={ widget }/>\r\n                )\r\n                break\r\n            default :\r\n                break\r\n        }\r\n    })\r\n\r\n    const onSaveChangesHandler = () => {\r\n        updateSetting('homePageWidgets', contextData.widgetsSettings.homeWidgets)\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='HomePageWidgets'>\r\n                <div className=\"sidePanel\">\r\n                    <AddWidgetMenu/>\r\n                    <button onClick={ () => onSaveChangesHandler() } className='saveBtn'>Save Changes</button>\r\n                </div>\r\n                <div className=\"widgets\">\r\n                    { renderWidgets }\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default HomePageWidgets;\r\n"]},"metadata":{},"sourceType":"module"}