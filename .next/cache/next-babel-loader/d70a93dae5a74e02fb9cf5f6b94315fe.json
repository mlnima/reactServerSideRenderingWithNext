{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport './SearchInputComponent.scss';\nimport Link from 'next/link';\nimport withRouter from 'next/dist/client/with-router';\n\nconst SearchInputComponent = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    pathURL: '',\n    keyword: ''\n  });\n  useEffect(() => {\n    if (props.pathURL) {\n      setState(_objectSpread({}, state, {\n        pathURL: props.pathURL || '/posts'\n      }));\n    }\n  }, []);\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      keyword: e.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"search-bar\"\n  }, __jsx(\"input\", {\n    name: \"keyword\",\n    onChange: e => onChangeHandler(e)\n  }), __jsx(Link, {\n    href: {\n      pathname: state.pathURL,\n      query: _objectSpread({}, props.router.query, {\n        keyword: state.keyword\n      })\n    }\n  }, __jsx(\"a\", null, \"Search\")));\n};\n\nexport default withRouter(SearchInputComponent);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/SearchInputComponent/SearchInputComponent.js"],"names":["React","useEffect","useState","useContext","useRef","Link","withRouter","SearchInputComponent","props","state","setState","pathURL","keyword","onChangeHandler","e","target","value","pathname","query","router"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,6BAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AAElC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC;AACjCS,IAAAA,OAAO,EAAC,EADyB;AAEjCC,IAAAA,OAAO,EAAC;AAFyB,GAAD,CAApC;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,KAAK,CAACG,OAAV,EAAkB;AACdD,MAAAA,QAAQ,mBACDD,KADC;AAEJE,QAAAA,OAAO,EAACH,KAAK,CAACG,OAAN,IAAiB;AAFrB,SAAR;AAIH;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,eAAe,GAAGC,CAAC,IAAE;AACvBJ,IAAAA,QAAQ,mBACDD,KADC;AAEJG,MAAAA,OAAO,EAACE,CAAC,CAACC,MAAF,CAASC;AAFb,OAAR;AAIH,GALD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,QAAQ,EAAEF,CAAC,IAAED,eAAe,CAACC,CAAD;AAAlD,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRG,MAAAA,QAAQ,EAACR,KAAK,CAACE,OADP;AAERO,MAAAA,KAAK,oBACEV,KAAK,CAACW,MAAN,CAAaD,KADf;AAEDN,QAAAA,OAAO,EAACH,KAAK,CAACG;AAFb;AAFG;AAAZ,KAMG,0BANH,CAFJ,CADJ;AAYH,CApCD;;AAqCA,eAAeN,UAAU,CAACC,oBAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport './SearchInputComponent.scss';\r\nimport Link from 'next/link';\r\nimport withRouter from 'next/dist/client/with-router'\r\n\r\nconst SearchInputComponent = props => {\r\n\r\n    const [ state, setState ] = useState({\r\n        pathURL:'',\r\n        keyword:''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.pathURL){\r\n            setState({\r\n                ...state,\r\n                pathURL:props.pathURL || '/posts'\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const onChangeHandler = e=>{\r\n        setState({\r\n            ...state,\r\n            keyword:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='search-bar'>\r\n            <input name='keyword' onChange={e=>onChangeHandler(e)}/>\r\n            <Link href={{\r\n                pathname:state.pathURL,\r\n                query:{\r\n                    ...props.router.query,\r\n                    keyword:state.keyword\r\n                }\r\n            }}><a>Search</a></Link>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(SearchInputComponent);\r\n"]},"metadata":{},"sourceType":"module"}