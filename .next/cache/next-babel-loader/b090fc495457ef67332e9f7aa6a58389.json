{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport Link from 'next/link';\nimport withRouter from 'next/dist/client/with-router';\n\nvar PaginationComponent = function PaginationComponent(props) {\n  var _useState = useState({\n    pages: [],\n    elements: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var numberGen = function numberGen(current) {\n    console.log(current);\n    var numArr = [];\n\n    if (current === 1) {\n      for (var i = 1; i <= 7; i++) {\n        numArr.push(i);\n      }\n    }\n\n    if (current === 2) {\n      numArr.push(1);\n\n      for (var _i = 2; _i <= 7; _i++) {\n        numArr.push(_i);\n      }\n    }\n\n    if (current === 3) {\n      numArr.push(1);\n      numArr.push(2);\n\n      for (var _i2 = 3; _i2 <= 7; _i2++) {\n        numArr.push(_i2);\n      }\n    }\n\n    if (current > 3) {\n      var min = current - 3;\n      var max = current + 3;\n\n      for (var _i3 = current; _i3 <= max; _i3++) {\n        numArr.push(_i3);\n      }\n\n      for (var _i4 = current; _i4 >= min; _i4--) {\n        numArr.push(_i4);\n      }\n    }\n\n    if (current > 3) {\n      numArr.push(1);\n    }\n\n    if (Math.ceil(props.totalCount / props.size)) {\n      numArr.push(_parseInt(props.maxPage) - 1);\n    }\n\n    numArr = _toConsumableArray(new _Set(numArr));\n    numArr = numArr.sort(function (x, y) {\n      return x - y;\n    });\n    return numArr;\n  };\n\n  useEffect(function () {\n    setState({\n      pages: numberGen(props.currentPage)\n    });\n  }, [props]);\n  useEffect(function () {\n    console.log(props);\n    console.log(state);\n  }, [props]);\n  var renderPaginationItems = numberGen(props.currentPage).map(function (page) {\n    if (props.router) {\n      return __jsx(Link, {\n        href: {\n          pathname: props.router.pathname,\n          query: props.router.query\n        }\n      }, __jsx(\"a\", null, page));\n    } // let path = props.router.pathname ? props.router.pathname + '?' : ''\n    // for (const item in props.router.query){\n    //     let string = item === 'page'? `${item}=${page}` : `${item}=${props.router.query[item]}`\n    //     path += '&' + string\n    // }\n\n  });\n\n  if (props.isActive) {\n    return __jsx(\"div\", null, renderPaginationItems);\n  } else return null;\n};\n\nexport default withRouter(PaginationComponent);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/PaginationComponent/PaginationComponent.js"],"names":["React","useEffect","useState","useContext","useRef","Link","withRouter","PaginationComponent","props","pages","elements","state","setState","numberGen","current","console","log","numArr","i","push","min","max","Math","ceil","totalCount","size","maxPage","sort","x","y","currentPage","renderPaginationItems","map","page","router","pathname","query","isActive"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport Link from 'next/link'\r\nimport withRouter from 'next/dist/client/with-router'\r\n\r\nconst PaginationComponent = props => {\r\n    const [ state, setState ] = useState({\r\n        pages: [],\r\n        elements:[]\r\n    });\r\n\r\n    let numberGen = (current) => {\r\n        console.log( current)\r\n        let numArr = [];\r\n        if (current === 1) {\r\n            for (let i = 1; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current === 2) {\r\n            numArr.push(1)\r\n            for (let i = 2; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current === 3) {\r\n            numArr.push(1)\r\n            numArr.push(2)\r\n            for (let i = 3; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current > 3) {\r\n            let min = current - 3\r\n            let max = current + 3\r\n            for (let i = current; i <= max; i++) {\r\n                numArr.push(i)\r\n            }\r\n            for (let i = current; i >= min; i--) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current > 3) {\r\n            numArr.push(1)\r\n        }\r\n        if (Math.ceil(props.totalCount / props.size)) {\r\n            numArr.push(parseInt(props.maxPage) - 1)\r\n        }\r\n\r\n        numArr = [ ...new Set(numArr) ];\r\n        numArr = numArr.sort((x, y) => {\r\n            return x - y\r\n        });\r\n\r\n        return numArr\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            pages: numberGen(props.currentPage)\r\n        });\r\n\r\n    }, [ props ]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        console.log(state)\r\n    }, [ props ]);\r\n\r\n\r\n\r\n    const renderPaginationItems= numberGen(props.currentPage).map(page=>{\r\n        if (props.router){\r\n            return(\r\n                <Link href={{\r\n                    pathname:props.router.pathname,query:props.router.query\r\n                }}><a>{page}</a></Link>\r\n            )\r\n        }\r\n        // let path = props.router.pathname ? props.router.pathname + '?' : ''\r\n        // for (const item in props.router.query){\r\n        //     let string = item === 'page'? `${item}=${page}` : `${item}=${props.router.query[item]}`\r\n        //     path += '&' + string\r\n        // }\r\n\r\n    })\r\n\r\n    if (props.isActive) {\r\n        return (\r\n            <div>\r\n                {renderPaginationItems }\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default withRouter(PaginationComponent);\r\n"]},"metadata":{},"sourceType":"module"}