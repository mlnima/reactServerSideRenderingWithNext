{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../../../context/AppContext';\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables';\n\nvar WidgetModel = function WidgetModel(props) {\n  var contextData = useContext(AppContext);\n  var title = useRef(null);\n  var categories = useRef(null);\n  var tags = useRef(null);\n  var count = useRef(null);\n  var pagination = useRef(null);\n  var redirectLink = useRef(null);\n\n  var _useState = useState({\n    title: props.data.title || '',\n    categories: props.data.categories || [],\n    tags: props.data.tags || [],\n    count: props.data.count || 6,\n    pagination: props.data.pagination || false,\n    redirectLink: props.data.redirectLink || '',\n    redirectToTitle: props.data.redirectToTitle || '',\n    type: props.data.type || 'posts',\n    position: props.data.position || 'home',\n    sortBy: props.data.sortBy || '-id',\n    text: props.data.text || '',\n    textAlign: props.data.text || 'center',\n    customHtml: props.data.customHtml || ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({\n    open: false\n  }),\n      widgetSettings = _useState2[0],\n      setWidgetSettings = _useState2[1];\n\n  var onOpenHandler = function onOpenHandler() {\n    widgetSettings.open ? setWidgetSettings(_objectSpread({}, widgetSettings, {\n      open: false\n    })) : setWidgetSettings(_objectSpread({}, widgetSettings, {\n      open: true\n    }));\n  };\n\n  useEffect(function () {\n    console.log(window.location.host);\n  }, []);\n\n  var onDeleteHandler = function onDeleteHandler() {\n    deleteWidgets(props.data._id, props.domainName).then(function () {\n      getWidgets('all').then(function (res) {\n        contextData.dispatchWidgetsSettings({\n          widgets: _toConsumableArray(res.data.widgets)\n        });\n      });\n    });\n  };\n\n  var onSaveHandler = function onSaveHandler() {\n    updateWidgets(props.data._id, state).then(function (res) {\n      // let newData = res.data.updatedWidgets\n      // setState({ ...state, ...newData })\n      getWidgets('all').then(function (res) {\n        contextData.dispatchWidgetsSettings({\n          widgets: _toConsumableArray(res.data.widgets)\n        });\n      });\n    });\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onNewCategoryAddHandler = function onNewCategoryAddHandler() {\n    setState(_objectSpread({}, state, {\n      categories: [].concat(_toConsumableArray(state.categories), [categories.current.value])\n    }));\n    categories.current.value = '';\n  };\n\n  var onNewTagAddHandler = function onNewTagAddHandler() {\n    setState(_objectSpread({}, state, {\n      tags: [].concat(_toConsumableArray(state.tags), [tags.current.value])\n    }));\n    tags.current.value = '';\n  };\n\n  var deleteTagHandler = function deleteTagHandler(e) {\n    setState(_objectSpread({}, state, {\n      tags: state.tags.filter(function (tag) {\n        return tag !== e.target.name;\n      })\n    }));\n  };\n\n  var deleteCategoryHandler = function deleteCategoryHandler(e) {\n    setState(_objectSpread({}, state, {\n      categories: state.categories.filter(function (category) {\n        return category !== e.target.name;\n      })\n    }));\n  };\n\n  var renderTags = state.tags.map(function (tag) {\n    return __jsx(\"button\", {\n      name: tag,\n      onClick: function onClick(e) {\n        return deleteTagHandler(e);\n      }\n    }, tag, \"X\");\n  });\n  var renderCategories = state.categories.map(function (category) {\n    return __jsx(\"button\", {\n      name: category,\n      onClick: function onClick(e) {\n        return deleteCategoryHandler(e);\n      }\n    }, category, \"X\");\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      var items = ['count'];\n      items.forEach(function (item) {\n        if ([item].current) {\n          [item].current.value = state[item];\n        }\n      });\n    }, 2000);\n  }, []);\n\n  var RenderOptionByFormat = function RenderOptionByFormat() {\n    switch (state.type) {\n      case 'posts':\n        return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Sort By:\"), __jsx(\"select\", {\n          name: \"sortBy\",\n          value: state.sortBy,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }, __jsx(\"option\", {\n          value: \"id\"\n        }, \"ID\"), __jsx(\"option\", {\n          value: \"views\"\n        }, \"Views\"), __jsx(\"option\", {\n          value: \"likes\"\n        }, \"Likes\")), __jsx(\"p\", null, \"Categories:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: categories,\n          name: \"category\",\n          className: \"category\",\n          placeholder: \"Categories\"\n        }), __jsx(\"button\", {\n          onClick: function onClick() {\n            return onNewCategoryAddHandler();\n          }\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderCategories), __jsx(\"p\", null, \"Tags:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: tags,\n          className: \"tags\",\n          name: \"tags\",\n          placeholder: \"Tags\"\n        }), __jsx(\"button\", {\n          onClick: function onClick() {\n            return onNewTagAddHandler();\n          }\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderTags), __jsx(\"p\", null, \"Count:\"), __jsx(\"input\", {\n          ref: count,\n          name: \"count\",\n          type: \"number\",\n          className: \"count\",\n          placeholder: \"count\",\n          value: state.count,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }), __jsx(\"span\", null, \"Pagination:\"), __jsx(\"select\", {\n          name: \"pagination\",\n          value: state.pagination,\n          onChange: function onChange(e) {\n            return onChangeHandler(e);\n          }\n        }, __jsx(\"option\", {\n          value: false\n        }, \"false\"), __jsx(\"option\", {\n          value: true\n        }, \"true\")));\n        break;\n\n      case 'text':\n        return __jsx(React.Fragment, null);\n        break;\n\n      default:\n        return null;\n        break;\n    }\n  };\n\n  if (widgetSettings.open) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"widget-open-control\"\n    }, __jsx(\"p\", null, props.data.title || props.data.type), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onOpenHandler();\n      }\n    }, widgetSettings.open ? 'close' : 'open')), __jsx(\"div\", {\n      className: \"widgetModel\"\n    }, __jsx(\"div\", {\n      className: \"widgetInfo\"\n    }, __jsx(\"label\", {\n      className: \"widgetId\"\n    }, __jsx(\"p\", null, \"ID :\"), \" \", __jsx(\"p\", null, props.data._id))), __jsx(\"p\", null, \"Title:\"), __jsx(\"input\", {\n      name: \"title\",\n      ref: title,\n      className: \"title\",\n      placeholder: \"Title\",\n      value: state.title,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"p\", null, \"Type:\"), __jsx(\"select\", {\n      name: \"type\",\n      value: state.type,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }, __jsx(\"option\", {\n      value: \"posts\"\n    }, \"Posts\"), __jsx(\"option\", {\n      value: \"text\"\n    }, \"Text\"), __jsx(\"option\", {\n      value: \"recentComments\"\n    }, \"Recent Comments\"), __jsx(\"option\", {\n      value: \"search\"\n    }, \"Search\"), __jsx(\"option\", {\n      value: \"tagsCloud\"\n    }, \"Tags Cloud\"), __jsx(\"option\", {\n      value: \"video\"\n    }, \"Video\"), __jsx(\"option\", {\n      value: \"navigationMenu\"\n    }, \"Navigation Menu\")), __jsx(\"p\", null, \"Position:\"), __jsx(\"select\", {\n      name: \"position\",\n      value: state.position,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }, __jsx(\"option\", {\n      value: \"home\"\n    }, \"Home\"), __jsx(\"option\", {\n      value: \"homePageSidebar\"\n    }, \"Home Page Sidebar\"), __jsx(\"option\", {\n      value: \"postPageSidebar\"\n    }, \"Post Page SideBar\"), __jsx(\"option\", {\n      value: \"postsPageSidebar\"\n    }, \"Posts Page SideBar\"), __jsx(\"option\", {\n      value: \"categoriesPageSidebar\"\n    }, \"Categories Page SideBar\"), __jsx(\"option\", {\n      value: \"tagsPagesSidebar\"\n    }, \"Tags Page SideBar\"), __jsx(\"option\", {\n      value: \"actorsPagesSidebar\"\n    }, \"Actors Page SideBar\"), __jsx(\"option\", {\n      value: \"footer\"\n    }, \"footer\")), __jsx(\"p\", null, \"Text:\"), __jsx(\"textarea\", {\n      name: \"text\",\n      value: state.text,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"p\", null, \"Text Align:\"), __jsx(\"select\", {\n      name: \"textAlign\",\n      value: state.textAlign,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }, __jsx(\"option\", {\n      value: \"left\"\n    }, \"Left\"), __jsx(\"option\", {\n      value: \"center\"\n    }, \"Center\"), __jsx(\"option\", {\n      value: \"right\"\n    }, \"Right\")), __jsx(RenderOptionByFormat, null), __jsx(\"p\", null, \"Redirect Link:\"), __jsx(\"input\", {\n      className: \"redirectLink\",\n      name: \"redirectLink\",\n      placeholder: \"Redirect\",\n      value: state.redirectLink,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"p\", null, \"Title for Redirect Link\"), __jsx(\"input\", {\n      className: \"redirectToTitle\",\n      name: \"redirectToTitle\",\n      placeholder: \"Title for Redirect Link\",\n      value: state.redirectToTitle,\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"div\", {\n      className: \"control\"\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return onSaveHandler();\n      }\n    }, \"Save\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onDeleteHandler();\n      }\n    }, \"Delete\"))));\n  } else {\n    return __jsx(\"div\", {\n      className: \"widget-open-control\"\n    }, __jsx(\"p\", null, props.data.title || props.data.type), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onOpenHandler();\n      }\n    }, widgetSettings.open ? 'close' : 'open'));\n  }\n};\n\nexport default WidgetModel;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/widgetsModel/WidgetModel/WidgetModel.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","deleteWidgets","getWidgets","updateWidgets","WidgetModel","props","contextData","title","categories","tags","count","pagination","redirectLink","data","redirectToTitle","type","position","sortBy","text","textAlign","customHtml","state","setState","open","widgetSettings","setWidgetSettings","onOpenHandler","console","log","window","location","host","onDeleteHandler","_id","domainName","then","res","dispatchWidgetsSettings","widgets","onSaveHandler","onChangeHandler","e","target","name","value","onNewCategoryAddHandler","current","onNewTagAddHandler","deleteTagHandler","filter","tag","deleteCategoryHandler","category","renderTags","map","renderCategories","setTimeout","items","forEach","item","RenderOptionByFormat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables'\r\n\r\nconst WidgetModel = props => {\r\n    const contextData = useContext(AppContext);\r\n    const title = useRef(null)\r\n    const categories = useRef(null)\r\n    const tags = useRef(null)\r\n    const count = useRef(null)\r\n    const pagination = useRef(null)\r\n    const redirectLink = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        title: props.data.title || '',\r\n        categories: props.data.categories || [],\r\n        tags: props.data.tags || [],\r\n        count: props.data.count || 6,\r\n        pagination: props.data.pagination || false,\r\n        redirectLink: props.data.redirectLink || '',\r\n        redirectToTitle: props.data.redirectToTitle || '',\r\n        type: props.data.type || 'posts',\r\n        position: props.data.position || 'home',\r\n        sortBy: props.data.sortBy || '-id',\r\n        text: props.data.text || '',\r\n        textAlign: props.data.text || 'center',\r\n        customHtml: props.data.customHtml || ''\r\n    });\r\n\r\n    const [ widgetSettings, setWidgetSettings ] = useState({\r\n        open: false\r\n    })\r\n    const onOpenHandler = () => {\r\n        widgetSettings.open ? setWidgetSettings({ ...widgetSettings, open: false }) : setWidgetSettings({ ...widgetSettings, open: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(window.location.host )\r\n    }, []);\r\n    const onDeleteHandler = () => {\r\n        deleteWidgets(props.data._id, props.domainName).then(() => {\r\n            getWidgets('all').then(res => {\r\n                contextData.dispatchWidgetsSettings({\r\n                    widgets: [ ...res.data.widgets ]\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const onSaveHandler = () => {\r\n        updateWidgets(props.data._id, state).then(res => {\r\n            // let newData = res.data.updatedWidgets\r\n            // setState({ ...state, ...newData })\r\n            getWidgets('all').then(res => {\r\n                contextData.dispatchWidgetsSettings({\r\n                    widgets: [ ...res.data.widgets ]\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const onNewCategoryAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            categories: [ ...state.categories, categories.current.value ]\r\n        })\r\n        categories.current.value = ''\r\n    }\r\n    const onNewTagAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            tags: [ ...state.tags, tags.current.value ]\r\n        })\r\n        tags.current.value = ''\r\n    }\r\n    const deleteTagHandler = e => {\r\n        setState({\r\n            ...state,\r\n            tags: state.tags.filter(tag => tag !== e.target.name)\r\n        })\r\n    }\r\n    const deleteCategoryHandler = e => {\r\n        setState({\r\n            ...state,\r\n            categories: state.categories.filter(category => category !== e.target.name)\r\n        })\r\n    }\r\n\r\n    const renderTags = state.tags.map(tag => {\r\n        return (\r\n            <button name={ tag } onClick={ e => deleteTagHandler(e) }>{ tag }X</button>\r\n        )\r\n    })\r\n    const renderCategories = state.categories.map(category => {\r\n        return (\r\n            <button name={ category } onClick={ e => deleteCategoryHandler(e) }>{ category }X</button>\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            let items = [ 'count' ]\r\n            items.forEach(item => {\r\n                if ([ item ].current) {\r\n                    [ item ].current.value = state[item]\r\n                }\r\n            })\r\n        }, 2000)\r\n\r\n    }, [])\r\n\r\n    const RenderOptionByFormat = () => {\r\n        switch ( state.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <>\r\n                        <p>Sort By:</p>\r\n                        <select name='sortBy' value={ state.sortBy } onChange={ e => onChangeHandler(e) }>\r\n                            <option value='id'>ID</option>\r\n                            <option value='views'>Views</option>\r\n                            <option value='likes'>Likes</option>\r\n                        </select>\r\n                        <p>Categories:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ categories } name='category' className='category' placeholder='Categories'/>\r\n                            <button onClick={ () => onNewCategoryAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderCategories }\r\n                        </div>\r\n                        <p>Tags:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ tags } className='tags' name='tags' placeholder='Tags'/>\r\n                            <button onClick={ () => onNewTagAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderTags }\r\n                        </div>\r\n                        <p>Count:</p>\r\n                        <input ref={ count } name='count' type='number' className='count' placeholder='count' value={ state.count } onChange={ e => onChangeHandler(e) }/>\r\n                        <span>Pagination:</span>\r\n                        <select name='pagination' value={ state.pagination } onChange={ e => onChangeHandler(e) }>\r\n                            <option value={ false }>false</option>\r\n                            <option value={ true }>true</option>\r\n                        </select>\r\n                    </>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n                break\r\n            default:\r\n                return null\r\n                break\r\n\r\n        }\r\n    }\r\n\r\n    if (widgetSettings.open) {\r\n        return (\r\n            <>\r\n                <div className='widget-open-control'>\r\n                    <p>{ props.data.title || props.data.type }</p>\r\n                    <button onClick={ () => onOpenHandler() }>{ widgetSettings.open ? 'close' : 'open' }</button>\r\n                </div>\r\n                <div className='widgetModel'>\r\n                    <div className='widgetInfo'>\r\n                        <label className='widgetId'><p>ID :</p> <p>{ props.data._id }</p></label>\r\n                    </div>\r\n                    <p>Title:</p>\r\n                    <input name='title' ref={ title } className='title' placeholder='Title' value={ state.title } onChange={ e => onChangeHandler(e) }/>\r\n                    <p>Type:</p>\r\n                    <select name='type' value={ state.type } onChange={ e => onChangeHandler(e) }>\r\n                        <option value='posts'>Posts</option>\r\n                        <option value='text'>Text</option>\r\n                        <option value='recentComments'>Recent Comments</option>\r\n                        <option value='search'>Search</option>\r\n                        <option value='tagsCloud'>Tags Cloud</option>\r\n                        <option value='video'>Video</option>\r\n                        <option value='navigationMenu'>Navigation Menu</option>\r\n                    </select>\r\n                    <p>Position:</p>\r\n                    <select name='position' value={ state.position } onChange={ e => onChangeHandler(e) }>\r\n                        <option value='home'>Home</option>\r\n                        <option value='homePageSidebar'>Home Page Sidebar</option>\r\n                        <option value='postPageSidebar'>Post Page SideBar</option>\r\n                        <option value='postsPageSidebar'>Posts Page SideBar</option>\r\n                        <option value='categoriesPageSidebar'>Categories Page SideBar</option>\r\n                        <option value='tagsPagesSidebar'>Tags Page SideBar</option>\r\n                        <option value='actorsPagesSidebar'>Actors Page SideBar</option>\r\n                        <option value='footer'>footer</option>\r\n                    </select>\r\n                    <p>Text:</p>\r\n                    <textarea name='text' value={ state.text } onChange={ e => onChangeHandler(e) }/>\r\n                    <p>Text Align:</p>\r\n                    <select name='textAlign' value={ state.textAlign } onChange={ e => onChangeHandler(e) }>\r\n                        <option value='left'>Left</option>\r\n                        <option value='center'>Center</option>\r\n                        <option value='right'>Right</option>\r\n                    </select>\r\n                    <RenderOptionByFormat/>\r\n                    <p>Redirect Link:</p>\r\n                    <input className='redirectLink' name='redirectLink' placeholder='Redirect' value={ state.redirectLink } onChange={ e => onChangeHandler(e) }/>\r\n                    <p>Title for Redirect Link</p>\r\n                    <input className='redirectToTitle' name='redirectToTitle' placeholder='Title for Redirect Link' value={ state.redirectToTitle } onChange={ e => onChangeHandler(e) }/>\r\n                    <div className='control'>\r\n                        <button onClick={ () => onSaveHandler() }>Save</button>\r\n                        <button onClick={ () => onDeleteHandler() }>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='widget-open-control'>\r\n                <p>{ props.data.title || props.data.type }</p>\r\n                <button onClick={ () => onOpenHandler() }>{ widgetSettings.open ? 'close' : 'open' }</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\nexport default WidgetModel;\r\n"]},"metadata":{},"sourceType":"module"}