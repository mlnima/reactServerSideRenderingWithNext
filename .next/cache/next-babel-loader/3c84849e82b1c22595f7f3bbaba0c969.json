{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\n\nvar categories = function categories(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, []);\n  useEffect(function () {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(function (siteIdentity) {\n        return _objectSpread({}, siteIdentity, {}, props.identity);\n      });\n    }\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"categories\"\n  }, \"metaPage\"));\n};\n\ncategories.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, identityData, navigationData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default categories;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","AppContext","categories","props","contextData","state","setState","console","log","navigation","dispatchNavigationData","data","identity","dispatchSiteIdentity","siteIdentity","getInitialProps","pathname","query","req","res","err","identityData","navigationData","setting"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACxB,MAAMC,WAAW,GAAGP,UAAU,CAACI,UAAD,CAA9B;;AADwB,kBAEIL,QAAQ,CAAC,EAAD,CAFZ;AAAA,MAEhBS,KAFgB;AAAA,MAETC,QAFS;;AAGxBX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAaL,KAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAGAR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,KAAK,CAACM,UAAV,EAAsB;AAClBL,MAAAA,WAAW,CAACM,sBAAZ,CAAmCP,KAAK,CAACM,UAAN,CAAiBE,IAApD;AACH;;AACD,QAAIR,KAAK,CAACS,QAAV,EAAoB;AAChBR,MAAAA,WAAW,CAACS,oBAAZ,CAAiC,UAAAC,YAAY;AAAA,iCACtCA,YADsC,MAEtCX,KAAK,CAACS,QAFgC;AAAA,OAA7C;AAIH;AACJ,GAVQ,EAUN,CAAET,KAAF,CAVM,CAAT;AAWA,SACI,MAAC,SAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,gBADJ,CADJ;AAOH,CAxBD;;AA0BAD,UAAU,CAACa,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAAA;AAAA,2CAGEpB,UAAU,CAAC,UAAD,CAHZ;;AAAA;AAGnBqB,UAAAA,YAHmB;AAAA;AAAA,2CAIIrB,UAAU,CAAC,YAAD,CAJd;;AAAA;AAInBsB,UAAAA,cAJmB;AAKzBV,UAAAA,QAAQ,GAAGS,YAAY,CAACV,IAAb,CAAkBY,OAAlB,GAA4BF,YAAY,CAACV,IAAb,CAAkBY,OAAlB,CAA0BZ,IAAtD,GAA6D,EAAxE;AACAF,UAAAA,UAAU,GAAGa,cAAc,CAACX,IAAf,CAAoBY,OAApB,GAA8BD,cAAc,CAACX,IAAf,CAAoBY,OAAlD,GAA4D,EAAzE;AANyB,2CAOlB;AAAEX,YAAAA,QAAQ,EAARA,QAAF;AAAYH,YAAAA,UAAU,EAAVA;AAAZ,WAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AASA,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst categories = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n    }, [ props ]);\r\n    return (\r\n        <AppLayout>\r\n            <div className='categories'>\r\n                metaPage\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) =>{\r\n    let navigation;\r\n    let identity;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    return { identity, navigation }\r\n}\r\nexport default categories;\r\n"]},"metadata":{},"sourceType":"module"}