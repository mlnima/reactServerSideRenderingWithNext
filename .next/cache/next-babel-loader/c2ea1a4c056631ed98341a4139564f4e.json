{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport withRouter from \"next/dist/client/with-router\";\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\nimport Head from \"next/head\";\nimport { getSetting, getWidgetsWithData } from \"../../_variables/ajaxVariables\";\nimport { AppContext } from \"../../context/AppContext\";\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport SideBar from '../../components/includes/Sidebar/Sidebar';\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom';\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer';\n\nvar Post = function Post(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.identity.postPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n\n    if (props.post.postType === 'video') {\n      contextData.setFixedVideoPlayerData(_objectSpread({}, contextData.fixedVideoPlayerData, {}, props.post, {\n        active: true\n      }));\n    }\n  }, [props]);\n\n  var RenderMeta = function RenderMeta() {\n    if (props.post.title) {\n      return __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n        name: \"description\",\n        content: props.post.description\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: [].concat(_toConsumableArray(props.post.tags), _toConsumableArray(props.post.categories), _toConsumableArray(props.post.actors))\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: props.post.title\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: props.post.videoEmbedCode\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: props.post.mainThumbnail\n      }));\n    } else return null;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(RenderMeta, null), __jsx(\"div\", {\n    className: props.identity.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar'\n  }, __jsx(\"div\", {\n    style: state.style,\n    className: \"main\"\n  }, __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode,\n    meta: {\n      description: props.post.description,\n      title: props.post.title,\n      duration: props.post.duration,\n      thumbnailUrl: props.post.mainThumbnail,\n      embedURL: props.post.videoEmbedCode,\n      uploadDate: props.post.lastModify\n    }\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories,\n    id: props.post._id,\n    likes: props.post.likes,\n    disLikes: props.post.disLikes,\n    views: props.post.views,\n    videoEmbedCode: props.post.videoEmbedCode\n  }), __jsx(CommentsRenderer, {\n    comments: props.comments\n  }), __jsx(CommentFrom, {\n    documentId: props.post._id\n  })), __jsx(SideBar, {\n    isActive: props.identity.postPageSidebar,\n    widgets: props.widgets,\n    position: \"postPageSidebar\"\n  }))));\n};\n\nPost.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, post, comments, navigation, identity, widgets, identityData, navigationData, widgetsData, postBody, postData, commentsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('postPageSidebar'));\n\n        case 9:\n          widgetsData = _context.sent;\n          postBody = {\n            postTitle: query.postTitle\n          };\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(axios.post('http://localhost:3000/api/v1/posts/post', postBody));\n\n        case 13:\n          postData = _context.sent;\n          post = postData.data.post;\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(getComments({\n            onDocument: post._id\n          }));\n\n        case 17:\n          commentsData = _context.sent;\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          comments = commentsData.data.comments ? commentsData.data.comments : [];\n          return _context.abrupt(\"return\", {\n            post: post,\n            query: query,\n            navigation: navigation,\n            identity: identity,\n            widgets: widgets,\n            comments: comments\n          });\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getComments","getPost","Iframe","PostInfo","withRouter","PostSidebar","Head","getSetting","getWidgetsWithData","AppContext","SiteSettingSetter","SideBar","CommentFrom","CommentsRenderer","Post","props","contextData","style","state","setState","console","log","identity","postPageSidebar","gridArea","post","postType","setFixedVideoPlayerData","fixedVideoPlayerData","active","RenderMeta","title","description","tags","categories","actors","videoEmbedCode","mainThumbnail","duration","thumbnailUrl","embedURL","uploadDate","lastModify","_id","likes","disLikes","views","comments","widgets","getInitialProps","pathname","query","req","res","err","identityData","navigationData","widgetsData","postBody","postTitle","postData","data","onDocument","commentsData","navigation","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getComments, getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\r\nimport Head from \"next/head\";\r\nimport { getSetting, getWidgetsWithData } from \"../../_variables/ajaxVariables\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport SideBar from '../../components/includes/Sidebar/Sidebar'\r\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom'\r\nimport CommentsRenderer from '../../components/includes/CommentsRenderer/CommentsRenderer'\r\n\r\nconst Post = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.identity.postPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n        if(props.post.postType === 'video'){\r\n            contextData.setFixedVideoPlayerData({\r\n                ...contextData.fixedVideoPlayerData,\r\n                ...props.post,\r\n                active:true\r\n            })\r\n        }\r\n\r\n    }, [ props ]);\r\n\r\n    const RenderMeta = () => {\r\n        if (props.post.title) {\r\n            return (\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories, ...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/ }\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <RenderMeta/>\r\n                <div className={ props.identity.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar' }>\r\n\r\n                    <div style={ state.style } className=\"main\">\r\n                        <Iframe iframeCode={ props.post.videoEmbedCode } meta={ {\r\n                            description: props.post.description,\r\n                            title: props.post.title,\r\n                            duration: props.post.duration,\r\n                            thumbnailUrl: props.post.mainThumbnail,\r\n                            embedURL: props.post.videoEmbedCode,\r\n                            uploadDate: props.post.lastModify,\r\n                        } }/>\r\n\r\n                        <PostInfo\r\n                            title={ props.post.title }\r\n                            description={ props.post.description }\r\n                            tags={ props.post.tags }\r\n                            actors={ props.post.actors }\r\n                            categories={ props.post.categories }\r\n                            id={ props.post._id }\r\n                            likes={ props.post.likes }\r\n                            disLikes={ props.post.disLikes }\r\n                            views={ props.post.views }\r\n                            videoEmbedCode={ props.post.videoEmbedCode }\r\n                        />\r\n                        <CommentsRenderer comments={props.comments}/>\r\n                        <CommentFrom documentId={ props.post._id }/>\r\n\r\n                    </div>\r\n\r\n                    {/*<PostSidebar isActive={props.identity.postPageSidebar}/>*/ }\r\n                    <SideBar isActive={ props.identity.postPageSidebar } widgets={ props.widgets } position='postPageSidebar'/>\r\n                </div>\r\n\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    let comments;\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('postPageSidebar')\r\n    const postBody = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\r\n\r\n    post = postData.data.post\r\n\r\n    const commentsData = await getComments({ onDocument: post._id })\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    comments = commentsData.data.comments ? commentsData.data.comments : []\r\n    return { post, query, navigation, identity, widgets, comments }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}