{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { saveCustomStyle, getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nvar design = function design(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    //body\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    bodyTextColor: props.design.bodyTextColor || '#fff',\n    //Logo\n    textLogoColor: props.design.textLogoColor || '#fff',\n    textLogoSize: props.design.textLogoSize || '40px',\n    headLineColor: props.design.headLineColor || '#fff',\n    headLineSize: props.design.headLineSize || '10px',\n    //mobile theme\n    themeColor: props.design.themeColor || '#fff' //top bar\n    // topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    // topBarTextColor: props.design.topBarTextColor || '#fff',\n    //header\n    // headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    // headerTextColor: props.design.headerTextColor || '#fff',\n    //navigation\n    // navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    // navigationTextColor: props.design.navigationTextColor || '#fff',\n    //footer\n    // footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\n    // footerTextColor: props.design.footerTextColor || '#fff',\n    //widgets\n    // widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\n    // widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\n    // widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\n    // widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\n    // widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\n    // widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\n    // widgetBodyBorder: props.design.widgetBodyBorder || 'none',\n    //************Post Page***************\n    //comments\n    // commentsAuthorTextColor: props.design.commentsAuthorTextColor || '#0085ba',\n    // commentsDateTextColor: props.design.commentsDateTextColor || '#FF3565',\n    // commentsBodyTextColor: props.design.commentsBodyTextColor || '#fff',\n    // commentsBackgroundColor:  props.design.commentsBackgroundColor ||'transparent',\n\n  }),\n      colors = _useState[0],\n      setColors = _useState[1];\n\n  var _useState2 = useState(''),\n      customStyle = _useState2[0],\n      setCustomStyle = _useState2[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.customStyles.data) {\n      setCustomStyle(props.customStyles.data);\n    }\n  }, [props]); // useEffect(() => {\n  //     console.log( customStyle)\n  // }, [customStyle]);\n  // const onChangeHandler = e => {\n  //     setColors({\n  //         ...colors,\n  //         [e.target.name]: e.target.value\n  //     })\n  // }\n  // const onSubmitHandler = e => {\n  //     e.preventDefault()\n  //     contextData.dispatchState({\n  //         ...contextData.state,\n  //         loading: true\n  //     })\n  //     updateSetting('design', { ...colors }).then(() => {\n  //         contextData.dispatchState({\n  //             ...contextData.state,\n  //             loading: false\n  //         })\n  //     })\n  // };\n\n  var renderColorsFields = Object.keys(colors).map(function (element) {\n    return __jsx(\"div\", {\n      key: element,\n      className: \"adminDesignSection\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItems\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItem\"\n    }, __jsx(\"p\", {\n      className: \"adminDesignSectionItemTitle\"\n    }, element.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n      name: element,\n      value: colors[element],\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"div\", {\n      className: \"previewColor\",\n      style: {\n        backgroundColor: colors[element]\n      }\n    }))));\n  });\n\n  var onCustomStyleSaveHandler = function onCustomStyleSaveHandler(e) {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    saveCustomStyle(customStyle).then(function () {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  var onCustomStyleChangeHandler = function onCustomStyleChangeHandler(e) {\n    setCustomStyle(e.target.value);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"colorsContent\"\n  }, renderColorsFields), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Colors\")), __jsx(\"form\", {\n    className: \"customStyle\",\n    onSubmit: function onSubmit(e) {\n      return onCustomStyleSaveHandler(e);\n    }\n  }, __jsx(\"textarea\", {\n    value: customStyle,\n    onChange: function onChange(e) {\n      return onCustomStyleChangeHandler(e);\n    }\n  }), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Custom Style\")));\n};\n\ndesign.getInitialProps = function _callee(_ref) {\n  var req, domainName, design, customStyles, designData, customStylesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getSetting('design', false, domainName));\n\n        case 11:\n          designData = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(getSetting('customStyle', false, domainName));\n\n        case 14:\n          customStylesData = _context.sent;\n          design = designData.data.setting ? designData.data.setting.data : {};\n          customStyles = customStylesData.data.setting ? customStylesData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            design: design,\n            customStyles: customStyles\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default design;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","saveCustomStyle","getSetting","updateSetting","AppContext","getAbsolutePath","design","props","contextData","bodyBackgroundColor","bodyTextColor","textLogoColor","textLogoSize","headLineColor","headLineSize","themeColor","colors","setColors","customStyle","setCustomStyle","console","log","customStyles","data","renderColorsFields","Object","keys","map","element","replace","e","onChangeHandler","backgroundColor","onCustomStyleSaveHandler","preventDefault","dispatchState","state","loading","then","onCustomStyleChangeHandler","target","value","onSubmitHandler","getInitialProps","req","domainName","designData","customStylesData","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\n\r\nimport { saveCustomStyle, getSetting, updateSetting } from '../../../_variables/ajaxVariables'\r\nimport './design.scss'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getAbsolutePath } from '../../../_variables/_variables'\r\n\r\nconst design = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ colors, setColors ] = useState({\r\n        //body\r\n        bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\r\n        bodyTextColor: props.design.bodyTextColor || '#fff',\r\n        //Logo\r\n        textLogoColor:props.design.textLogoColor ||'#fff',\r\n        textLogoSize:props.design.textLogoSize ||'40px',\r\n        headLineColor:props.design.headLineColor ||'#fff',\r\n        headLineSize:props.design.headLineSize ||'10px',\r\n        //mobile theme\r\n        themeColor: props.design.themeColor || '#fff',\r\n        //top bar\r\n        // topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\r\n        // topBarTextColor: props.design.topBarTextColor || '#fff',\r\n        //header\r\n        // headerBackgroundColor: props.design.headerBackgroundColor || '#000',\r\n        // headerTextColor: props.design.headerTextColor || '#fff',\r\n        //navigation\r\n        // navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\r\n        // navigationTextColor: props.design.navigationTextColor || '#fff',\r\n        //footer\r\n        // footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\r\n        // footerTextColor: props.design.footerTextColor || '#fff',\r\n        //widgets\r\n        // widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\r\n        // widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\r\n        // widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\r\n        // widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\r\n        // widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\r\n        // widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\r\n        // widgetBodyBorder: props.design.widgetBodyBorder || 'none',\r\n        //************Post Page***************\r\n        //comments\r\n        // commentsAuthorTextColor: props.design.commentsAuthorTextColor || '#0085ba',\r\n        // commentsDateTextColor: props.design.commentsDateTextColor || '#FF3565',\r\n        // commentsBodyTextColor: props.design.commentsBodyTextColor || '#fff',\r\n        // commentsBackgroundColor:  props.design.commentsBackgroundColor ||'transparent',\r\n\r\n\r\n    });\r\n    const [ customStyle, setCustomStyle ] = useState( '')\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        if(props.customStyles.data){\r\n            setCustomStyle(props.customStyles.data)\r\n        }\r\n    }, [props]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log( customStyle)\r\n    // }, [customStyle]);\r\n\r\n    // const onChangeHandler = e => {\r\n    //     setColors({\r\n    //         ...colors,\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // const onSubmitHandler = e => {\r\n    //     e.preventDefault()\r\n    //     contextData.dispatchState({\r\n    //         ...contextData.state,\r\n    //         loading: true\r\n    //     })\r\n    //     updateSetting('design', { ...colors }).then(() => {\r\n    //         contextData.dispatchState({\r\n    //             ...contextData.state,\r\n    //             loading: false\r\n    //         })\r\n    //     })\r\n    // };\r\n\r\n    const renderColorsFields = Object.keys(colors).map(element => {\r\n        return (\r\n            <div key={ element } className=\"adminDesignSection\">\r\n                <div className=\"adminDesignSectionItems\">\r\n                    <div className=\"adminDesignSectionItem\">\r\n                        <p className='adminDesignSectionItemTitle'>{ element.replace(/([A-Z])/g, \" $1\") } :</p>\r\n                        <input name={ element } value={ colors[element] } onChange={ e => onChangeHandler(e) }/>\r\n                        <div className=\"previewColor\" style={ { backgroundColor: colors[element] } }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    const onCustomStyleSaveHandler = e => {\r\n        e.preventDefault()\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading: true\r\n        })\r\n        saveCustomStyle( customStyle ).then(() => {\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    const onCustomStyleChangeHandler = e => {\r\n        setCustomStyle(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <form className='adminDesign' onSubmit={ e => onSubmitHandler(e) }>\r\n\r\n                <div className='colorsContent'>\r\n                    { renderColorsFields }\r\n                </div>\r\n                <button className='submitBtn' type='submit'>Save Colors</button>\r\n            </form>\r\n\r\n            <form className='customStyle' onSubmit={ e => onCustomStyleSaveHandler(e) }>\r\n                <textarea value={  customStyle } onChange={ e => onCustomStyleChangeHandler(e) }/>\r\n                <button className='submitBtn' type='submit'>Save Custom Style</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ndesign.getInitialProps = async ({ req }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : '';\r\n    let design;\r\n    let customStyles;\r\n    const designData = await getSetting('design', false, domainName);\r\n    const customStylesData = await getSetting('customStyle', false, domainName);\r\n\r\n    design = designData.data.setting ? designData.data.setting.data : {}\r\n    customStyles = customStylesData.data.setting ? customStylesData.data.setting : {}\r\n    return { design, customStyles }\r\n}\r\nexport default design;\r\n"]},"metadata":{},"sourceType":"module"}