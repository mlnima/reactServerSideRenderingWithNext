{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Switch from \"react-switch\";\nimport './ImagePreview.scss';\n\nconst ImagePreview = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: false\n  });\n\n  if (props.postData.mainThumbnail) {\n    if (state.open) {\n      return __jsx(\"div\", {\n        className: \"ImagePreview VideoInformationSection\"\n      }, __jsx(\"p\", null, \"Image Preview\"), __jsx(Switch, {\n        onChange: () => state.open ? setState(_objectSpread({}, state, {\n          open: false\n        })) : setState(_objectSpread({}, state, {\n          open: true\n        })),\n        checked: state.open\n      }), __jsx(\"div\", {\n        className: \"title\"\n      }), __jsx(\"div\", {\n        className: \"editor\"\n      }, __jsx(\"img\", {\n        src: props.postData.mainThumbnail\n      })));\n    } else return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Image Preview\"), __jsx(Switch, {\n      onChange: () => state.open ? setState(_objectSpread({}, state, {\n        open: false\n      })) : setState(_objectSpread({}, state, {\n        open: true\n      })),\n      checked: state.open\n    }));\n  } else return null;\n};\n\nexport default ImagePreview;","map":null,"metadata":{},"sourceType":"module"}