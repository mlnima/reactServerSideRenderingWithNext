{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\n\nconst FilterDropDownActions = props => {\n  const contextData = useContext(AppContext);\n  const bulkAction = useRef(null);\n  const typeToDisplay = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({}); // useEffect(() => {\n  //     typeToDisplay.current.value = contextData.postsData.type\n  // }, []);\n\n  const onFormatChangeHandler = () => {// if (bulkAction.current.value !== 'none') {\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         loading:true\n    //     });\n    //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\n    //        setData()\n    //     }).catch(err=>{\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading:false\n    //         })\n    //     })\n    // }\n  };\n\n  const changePostsTypeToDisplay = e => {// if (e.target.value !== 'none') {\n    //     contextData.setPostsData({\n    //         ...contextData.postsData,\n    //         type: e.target.value\n    //     })\n    // }\n  };\n\n  const onEmptyTrashHandler = () => {// emptyTrash().then(res=>{\n    //     if (res.data.error){\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'red'\n    //         })\n    //     }else {\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading: false\n    //         });\n    //         setData();\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'green'\n    //         })\n    //     }\n    // }).catch(()=>{\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         report:'Can Not Communicate With Server'\n    //     })\n    // })\n  };\n\n  const EmptyTrash = () => {\n    // if (contextData.postsData.status === 'Trash'){\n    //     return (\n    //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\n    //     )\n    // }else\n    return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterDropDownActions\"\n  }, __jsx(\"div\", {\n    className: \"bulkAction\"\n  }, __jsx(\"select\", {\n    ref: bulkAction,\n    placeholder: \"Bulk Actions\"\n  }, __jsx(\"option\", {\n    value: \"none\"\n  }, \"Bulk Actions\"), __jsx(\"option\", {\n    value: \"Published\"\n  }, \"Published\"), __jsx(\"option\", {\n    value: \"Draft\"\n  }, \"Draft\"), __jsx(\"option\", {\n    value: \"Trash\"\n  }, \"Trash\")), __jsx(\"button\", {\n    className: \"actionBtn\",\n    onClick: () => onFormatChangeHandler()\n  }, \"Apply\")), __jsx(\"div\", {\n    className: \"DateCategoryFotmat\"\n  }, __jsx(\"select\", {\n    ref: typeToDisplay,\n    onChange: e => changePostsTypeToDisplay(e)\n  }, __jsx(\"option\", {\n    value: \"Video\"\n  }, \"Video\"), __jsx(\"option\", {\n    value: \"Standard\"\n  }, \"Standard\"))), __jsx(EmptyTrash, null));\n};\n\nexport default FilterDropDownActions;","map":null,"metadata":{},"sourceType":"module"}