{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\n\nvar RenderIframe = function RenderIframe(props) {\n  var _useState = useState({\n    open: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  if (!state.open && props.postData.videoEmbedCode) {\n    return __jsx(\"button\", {\n      onClick: function onClick() {\n        return state.open ? setState(_objectSpread({}, state, {\n          open: false\n        })) : setState(_objectSpread({}, state, {\n          open: true\n        }));\n      }\n    }, \"Preview Embed Video\");\n  } else if (state.open && contextData.editingPostData.videoEmbedCode) {\n    return __jsx(\"div\", {\n      className: \"VideoEmbedCode VideoInformationSection\"\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return state.open ? setState(_objectSpread({}, state, {\n          open: false\n        })) : setState(_objectSpread({}, state, {\n          open: true\n        }));\n      }\n    }, \"Hide Embed Video\"), __jsx(\"div\", {\n      className: \"title\"\n    }, __jsx(\"p\", null, \"Video Iframe Preview\")), __jsx(\"div\", {\n      className: \"editor\"\n    }, __jsx(\"iframe\", {\n      ref: props.postData.videoEmbedCode\n    })));\n  } else return null;\n};\n\nexport default RenderIframe;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/RenderIframe/RenderIframe.js"],"names":["React","useEffect","useState","RenderIframe","props","open","state","setState","postData","videoEmbedCode","contextData","editingPostData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBAEAF,QAAQ,CAAC;AAC/BG,IAAAA,IAAI,EAAC;AAD0B,GAAD,CAFR;AAAA,MAEnBC,KAFmB;AAAA,MAEZC,QAFY;;AAM1B,MAAI,CAACD,KAAK,CAACD,IAAP,IAAeD,KAAK,CAACI,QAAN,CAAeC,cAAlC,EAAiD;AAC7C,WACI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAIH,KAAK,CAACD,IAAN,GAAYE,QAAQ,mBAAKD,KAAL;AAAWD,UAAAA,IAAI,EAAE;AAAjB,WAApB,GAA6CE,QAAQ,mBAAKD,KAAL;AAAWD,UAAAA,IAAI,EAAE;AAAjB,WAAzD;AAAA;AAAjB,6BADJ;AAGH,GAJD,MAIM,IAAIC,KAAK,CAACD,IAAN,IAAcK,WAAW,CAACC,eAAZ,CAA4BF,cAA9C,EAA6D;AAC/D,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAIH,KAAK,CAACD,IAAN,GAAYE,QAAQ,mBAAKD,KAAL;AAAWD,UAAAA,IAAI,EAAE;AAAjB,WAApB,GAA6CE,QAAQ,mBAAKD,KAAL;AAAWD,UAAAA,IAAI,EAAE;AAAjB,WAAzD;AAAA;AAAjB,0BADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,wCADJ,CAFJ,EAKI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAQ,MAAA,GAAG,EAAED,KAAK,CAACI,QAAN,CAAeC;AAA5B,MADJ,CALJ,CADJ;AAWH,GAZK,MAYA,OAAO,IAAP;AAET,CAxBD;;AAyBA,eAAeN,YAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\nconst RenderIframe = props => {\r\n\r\n    const [state, setState] = useState({\r\n        open:false\r\n    });\r\n\r\n    if (!state.open && props.postData.videoEmbedCode){\r\n        return(\r\n            <button onClick={()=>state.open ?setState({...state,open: false}):setState({...state,open: true})}>Preview Embed Video</button>\r\n        )\r\n    }else if (state.open && contextData.editingPostData.videoEmbedCode){\r\n        return (\r\n            <div className='VideoEmbedCode VideoInformationSection'>\r\n                <button onClick={()=>state.open ?setState({...state,open: false}):setState({...state,open: true})}>Hide Embed Video</button>\r\n                <div className=\"title\">\r\n                    <p>Video Iframe Preview</p>\r\n                </div>\r\n                <div className=\"editor\">\r\n                    <iframe ref={props.postData.videoEmbedCode} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }else return null\r\n\r\n};\r\nexport default RenderIframe;"]},"metadata":{},"sourceType":"module"}