{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\n\nconst FileManagerArea = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  let renderDir = props.data.files.map(item => {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"dirItem\"\n    }, __jsx(\"p\", null, \" \", item));\n  });\n  return __jsx(\"div\", {\n    className: \"FileManagerArea\"\n  }, renderDir);\n};\n\nexport default FileManagerArea; // <buttonref={() => selectedItem.current[contextData.filesData.files.indexOf(item)]}\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea.js"],"names":["React","useEffect","useState","useContext","useRef","FileManagerArea","props","state","setState","console","log","renderDir","data","files","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;AAGAA,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT;AAIA,MAAIK,SAAS,GAAGL,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AACzC,WACI;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,SAAS,EAAC;AAA1B,OAGI,sBAAKA,IAAL,CAHJ,CADJ;AAOH,GARe,CAAhB;AASA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKJ,SADL,CADJ;AAKH,CAvBD;;AAwBA,eAAeN,eAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst FileManagerArea = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n    let renderDir = props.data.files.map(item => {\r\n        return (\r\n            <div key={item} className='dirItem'>\r\n\r\n\r\n                <p> {item}</p>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div className='FileManagerArea'>\r\n            {renderDir}\r\n        </div>\r\n    );\r\n};\r\nexport default FileManagerArea;\r\n\r\n// <buttonref={() => selectedItem.current[contextData.filesData.files.indexOf(item)]}\r\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\r\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>"]},"metadata":{},"sourceType":"module"}