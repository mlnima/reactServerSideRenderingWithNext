{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../../../context/AppContext';\nimport Head from 'next/dist/next-server/lib/head';\nimport AppLayout from '../../layouts/AppLayout';\n\nvar SiteSettingSetter = function SiteSettingSetter(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    title: props.identity.data.title || '',\n    themeColor: props.identity.data.themeColor || '',\n    description: props.identity.data.description || '',\n    keywords: props.identity.data.keywords || [],\n    homePageH1: props.identity.data.homePageH1 || 'H1 element'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.design) {\n      contextData.dispatchSiteDesign(props.design.data);\n      console.log(props.design.bodyBackgroundColor);\n      document.body.style.backgroundColor = props.design.bodyBackgroundColor;\n    }\n\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(props.identity.data);\n    }\n  }, []);\n  return __jsx(Head, null, __jsx(\"title\", null, state.title), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: state.themeColor\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: state.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: state.keywords\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Patrick+Hand&display=swap\",\n    rel: \"stylesheet\"\n  }));\n};\n\nexport default SiteSettingSetter;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/SiteSettingsSetter/SiteSettingsSetter.js"],"names":["React","useState","useContext","useEffect","AppContext","Head","AppLayout","SiteSettingSetter","props","contextData","title","identity","data","themeColor","description","keywords","homePageH1","state","setState","design","dispatchSiteDesign","console","log","bodyBackgroundColor","document","body","style","backgroundColor","navigation","dispatchNavigationData","dispatchSiteIdentity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAC/B,MAAMC,WAAW,GAAGP,UAAU,CAACE,UAAD,CAA9B;;AAD+B,kBAEHH,QAAQ,CAAC;AACjCS,IAAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBF,KAApB,IAA6B,EADH;AAEjCG,IAAAA,UAAU,EAAEL,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,UAApB,IAAkC,EAFb;AAGjCC,IAAAA,WAAW,EAAEN,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBE,WAApB,IAAmC,EAHf;AAIjCC,IAAAA,QAAQ,EAAEP,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBG,QAApB,IAAgC,EAJT;AAKjCC,IAAAA,UAAU,EAAER,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBI,UAApB,IAAkC;AALb,GAAD,CAFL;AAAA,MAEvBC,KAFuB;AAAA,MAEhBC,QAFgB;;AAU/Bf,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIK,KAAK,CAACW,MAAV,EAAkB;AACdV,MAAAA,WAAW,CAACW,kBAAZ,CAA+BZ,KAAK,CAACW,MAAN,CAAaP,IAA5C;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAad,KAAK,CAACW,MAAN,CAAaI,mBAA1B;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqCnB,KAAK,CAACW,MAAN,CAAaI,mBAAlD;AACH;;AACD,QAAIf,KAAK,CAACoB,UAAV,EAAsB;AAClBnB,MAAAA,WAAW,CAACoB,sBAAZ,CAAmCrB,KAAK,CAACoB,UAAN,CAAiBhB,IAApD;AACH;;AACD,QAAIJ,KAAK,CAACG,QAAV,EAAoB;AAChBF,MAAAA,WAAW,CAACqB,oBAAZ,CAAiCtB,KAAK,CAACG,QAAN,CAAeC,IAAhD;AACH;AAEJ,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACI,MAAC,IAAD,QACI,qBAASK,KAAK,CAACP,KAAf,CADJ,EAEI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAGO,KAAK,CAACJ;AAAzC,IAFJ,EAGI;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAHJ,EAII;AAAM,IAAA,OAAO,EAAC;AAAd,IAJJ,EAKI;AAAM,IAAA,IAAI,EAAC,6EAAX;AAAyF,IAAA,GAAG,EAAC;AAA7F,IALJ,EAMI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAGI,KAAK,CAACH;AAAzC,IANJ,EAOI;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAGG,KAAK,CAACF;AAAtC,IAPJ,EAQI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC;AAAtB,IARJ,EASI;AAAM,IAAA,IAAI,EAAC,mEAAX;AAA+E,IAAA,GAAG,EAAC;AAAnF,IATJ,CADJ;AAaH,CAvCD;;AAwCA,eAAeR,iBAAf","sourcesContent":["import React, {useState, useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport Head from 'next/dist/next-server/lib/head'\r\nimport AppLayout from '../../layouts/AppLayout'\r\n\r\nconst SiteSettingSetter = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        title: props.identity.data.title || '',\r\n        themeColor: props.identity.data.themeColor || '',\r\n        description: props.identity.data.description || '',\r\n        keywords: props.identity.data.keywords || [],\r\n        homePageH1: props.identity.data.homePageH1 || 'H1 element'\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.design) {\r\n            contextData.dispatchSiteDesign(props.design.data)\r\n            console.log( props.design.bodyBackgroundColor)\r\n            document.body.style.backgroundColor= props.design.bodyBackgroundColor\r\n        }\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(props.identity.data)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Head>\r\n            <title>{ state.title }</title>\r\n            <meta name=\"theme-color\" content={ state.themeColor }/>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n            <meta charSet=\"utf-8\"/>\r\n            <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n            <meta name=\"description\" content={ state.description }/>\r\n            <meta name=\"keywords\" content={ state.keywords }/>\r\n            <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n            <link href=\"https://fonts.googleapis.com/css?family=Patrick+Hand&display=swap\" rel=\"stylesheet\"/>\r\n        </Head>\r\n    )\r\n};\r\nexport default SiteSettingSetter;\r\n"]},"metadata":{},"sourceType":"module"}