{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport Filters from \"../../../components/adminIncludes/PostsComponents/Filters/Filters\";\nimport PostsDataTable from \"../../../components/adminIncludes/PostsComponents/PostsDataTable/PostsDataTable\";\nimport { getAbsolutePath } from '../../../_variables/_variables';\nimport { getPosts } from '../../../_variables/ajaxPostsVariables';\nimport Link from 'next/link';\nimport AppLayout from '../../../components/layouts/AppLayout';\n\nconst adminPosts = props => {\n  // useEffect(() => {\n  //     console.log( props)\n  // }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(Link, {\n    href: \"/admin/post?new=1\"\n  }, __jsx(\"a\", {\n    className: \"newPostLinkAdminPanel\"\n  }, \"New Post\")), __jsx(\"div\", {\n    className: \"Posts\"\n  }, __jsx(Filters, props), __jsx(PostsDataTable, props))));\n};\n\nadminPosts.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let postsSource;\n  const getPostsData = {\n    size: parseInt(query.size) || 30,\n    pageNo: parseInt(query.page) || 1,\n    postType: query.type || 'all',\n    fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n    keyword: query.keyword || '',\n    author: query.author || 'all',\n    actor: query.actor || 'all',\n    status: query.status || 'all',\n    tag: query.tag || 'all',\n    category: query.category || 'all',\n    sort: query.sort || 'latest'\n  };\n  const postsData = await getPosts(getPostsData, false, domainName);\n  postsSource = postsData.data ? postsData.data : [];\n  return {\n    query,\n    postsSource,\n    getPostsData,\n    pathname\n  };\n};\n\nexport default adminPosts;","map":null,"metadata":{},"sourceType":"module"}