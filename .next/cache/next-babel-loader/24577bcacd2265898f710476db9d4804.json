{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport Footer from '../components/includes/Footer/Footer';\n\nvar Error = function Error(props) {\n  return __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"error-page\"\n  }, __jsx(\"h1\", {\n    className: \"error-page-message\"\n  }, props.errorCode ? \"error \".concat(props.errorCode, \" occurred on server\") : 'An error occurred on client')), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  }));\n};\n\nError.getInitialProps = function _callee(_ref) {\n  var req, res, err, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req, res = _ref.res, err = _ref.err;\n          statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Error;","map":null,"metadata":{},"sourceType":"module"}