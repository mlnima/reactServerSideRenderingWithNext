{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting } from \"../../../../_variables/ajaxVariables\";\n\nconst navigation = props => {\n  const titleEl = useRef(null);\n  const urlEl = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    type: 'navigation',\n    items: []\n  });\n  useEffect(() => {\n    getSetting(state.type).then(res => {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {\n          items: res.data.setting.items || []\n        }));\n      }\n    });\n  }, []);\n\n  const onSaveChangesHandler = () => {};\n\n  const onAddItemHandler = () => {\n    const newItem = {\n      title: titleEl.current.value,\n      url: urlEl.current.value\n    };\n    setState(_objectSpread({}, state, {\n      items: [...state.items, newItem]\n    }));\n    titleEl.current.value = '';\n    urlEl.current.value = '';\n  };\n\n  const renderItems = state.items.map(item => {\n    return __jsx(\"div\", {\n      className: \"items-preview-item\"\n    }, __jsx(\"p\", null, item.title));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-items\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    ref: titleEl,\n    type: \"text\",\n    name: \"title\"\n  }), __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    ref: urlEl,\n    type: \"text\",\n    name: \"url\"\n  }), __jsx(\"button\", {\n    onClick: () => onAddItemHandler()\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"items-preview\"\n  }, renderItems), __jsx(\"button\", {\n    onClick: () => onSaveChangesHandler()\n  }, \"Save\")));\n};\n\nexport default navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/navigation/index.js"],"names":["React","useEffect","useState","useRef","AdminLayout","getSetting","navigation","props","titleEl","urlEl","state","setState","type","items","then","res","data","setting","onSaveChangesHandler","onAddItemHandler","newItem","title","current","value","url","renderItems","map","item"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,UAAT,QAA2B,sCAA3B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMM,KAAK,GAAGN,MAAM,CAAC,IAAD,CAApB;AACA,QAAM;AAAA,OAAEO,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,IAAI,EAAE,YAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAApC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACK,KAAK,CAACE,IAAP,CAAV,CAAuBE,IAAvB,CAA4BC,GAAG,IAAI;AAC/B,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClBN,QAAAA,QAAQ,mBACDD,KADC;AAEJG,UAAAA,KAAK,EAAEE,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBJ,KAAjB,IAA0B;AAF7B,WAAR;AAIH;AACJ,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMK,oBAAoB,GAAG,MAAM,CAElC,CAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAEb,OAAO,CAACc,OAAR,CAAgBC,KADX;AAEZC,MAAAA,GAAG,EAAEf,KAAK,CAACa,OAAN,CAAcC;AAFP,KAAhB;AAIAZ,IAAAA,QAAQ,mBACDD,KADC;AAEJG,MAAAA,KAAK,EAAE,CAAE,GAAGH,KAAK,CAACG,KAAX,EAAkBO,OAAlB;AAFH,OAAR;AAKDZ,IAAAA,OAAO,CAACc,OAAR,CAAgBC,KAAhB,GAAsB,EAAtB;AACAd,IAAAA,KAAK,CAACa,OAAN,CAAcC,KAAd,GAAoB,EAApB;AACF,GAZD;;AAcA,QAAME,WAAW,GAAGf,KAAK,CAACG,KAAN,CAAYa,GAAZ,CAAgBC,IAAI,IAAI;AACxC,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,iBAAKA,IAAI,CAACN,KAAV,CADJ,CADJ;AAKH,GANmB,CAApB;AAQA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,EAAE,EAAC;AAAR,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,2BADJ,EAEI;AAAO,IAAA,GAAG,EAAGb,OAAb;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,IAAI,EAAC;AAAxC,IAFJ,EAGI,yBAHJ,EAII;AAAO,IAAA,GAAG,EAAGC,KAAb;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC;AAAtC,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAG,MAAMU,gBAAgB;AAAxC,WALJ,CADJ,EAQI;AAAK,IAAA,SAAS,EAAC;AAAf,KACMM,WADN,CARJ,EAWI;AAAQ,IAAA,OAAO,EAAG,MAAMP,oBAAoB;AAA5C,YAXJ,CADJ,CADJ;AAiBH,CA9DD;;AA+DA,eAAeZ,UAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting } from \"../../../../_variables/ajaxVariables\";\r\n\r\nconst navigation = props => {\r\n    const titleEl = useRef(null)\r\n    const urlEl = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSetting(state.type).then(res => {\r\n            if (res.data.setting) {\r\n                setState({\r\n                    ...state,\r\n                    items: res.data.setting.items || []\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n        const newItem = {\r\n            title: titleEl.current.value,\r\n            url: urlEl.current.value\r\n        };\r\n        setState({\r\n            ...state,\r\n            items: [ ...state.items, newItem ]\r\n        })\r\n\r\n       titleEl.current.value='';\r\n       urlEl.current.value=''\r\n    };\r\n\r\n    const renderItems = state.items.map(item => {\r\n        return (\r\n            <div className='items-preview-item'>\r\n                <p>{ item.title }</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <div className='add-navigation-items'>\r\n                    <p>Title :</p>\r\n                    <input ref={ titleEl } type=\"text\" name='title'/>\r\n                    <p>Url :</p>\r\n                    <input ref={ urlEl } type=\"text\" name='url'/>\r\n                    <button onClick={ () => onAddItemHandler() }>Add</button>\r\n                </div>\r\n                <div className='items-preview'>\r\n                    { renderItems }\r\n                </div>\r\n                <button onClick={ () => onSaveChangesHandler() }>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default navigation;"]},"metadata":{},"sourceType":"module"}