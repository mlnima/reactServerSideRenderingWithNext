{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport StarSvg from '../../../../static/images/fontawesome/star-solid.svg';\nimport TagSvg from '../../../../static/images/fontawesome/tag-solid.svg';\nimport CategorySvg from '../../../../static/images/fontawesome/folder-solid.svg';\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg';\n\nconst TagsAndCategoriesActors = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: props.data || [],\n    type: props.type,\n    fontawesome: ''\n  });\n  useEffect(() => {\n    let fontawesome = '';\n\n    switch (props.type) {\n      case 'actors':\n        fontawesome = 'star';\n        break;\n\n      case 'tags':\n        fontawesome = 'tags';\n        break;\n\n      case 'categories':\n        fontawesome = 'folder';\n        break;\n    }\n\n    setState(_objectSpread({}, state, {\n      fontawesome\n    }));\n  }, []); //\n  // useEffect(() => {\n  //     console.log( props)\n  //     console.log( state)\n  // }, []);\n\n  const renderData = props.data.map(item => {\n    let typeForUrl = state.type === 'categories' ? 'category' : state.type === 'tags' ? 'tag' : state.type === 'actors' ? 'actor' : 'tag';\n    const path = `/posts?${typeForUrl}=${item}`;\n    const icon = state.type === 'categories' ? CategorySvg : state.type === 'tags' ? TagSvg : state.type === 'actors' ? StarSvg : TagSvg;\n    return __jsx(\"div\", {\n      className: \"post-meta-item\"\n    }, __jsx(\"img\", {\n      className: \"fontawesomeSvgSmall\",\n      src: icon,\n      alt: \"\"\n    }), __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", {\n      className: state.type\n    }, item)));\n  });\n\n  if (props.data.length >= 1) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, __jsx(\"span\", null, \" \", state.type.charAt(0).toUpperCase() + state.type.substring(1), \":\"), __jsx(\"div\", {\n      className: \"content\"\n    }, renderData));\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":null,"metadata":{},"sourceType":"module"}