{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport settings from '../settings/general';\nimport { getSetting } from '../../../_variables/ajaxVariables';\n\nvar design = function design(props) {\n  var _useState = useState({\n    topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    topBarTextColor: props.design.topBarTextColor || '#fff'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"adminDesign\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"Top Bar:\"), __jsx(\"p\", null, \"Top Bar Background Color\"), __jsx(\"input\", {\n    name: \"topBarBackgroundColor\",\n    value: state.topBarBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"p\", null, \"Top Bar Text Color\"), __jsx(\"input\", {\n    name: \"topBarTextColor\",\n    value: state.topBarTextColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }))));\n};\n\ndesign.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, design, designData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('design'));\n\n        case 3:\n          designData = _context.sent;\n          design = designData.data.setting ? designData.data.setting.data : {};\n          return _context.abrupt(\"return\", {\n            design: design\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default design;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","settings","getSetting","design","props","topBarBackgroundColor","topBarTextColor","state","setState","onChangeHandler","e","target","name","value","getInitialProps","pathname","query","req","res","err","designData","data","setting"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,kBACQP,QAAQ,CAAC;AACjCQ,IAAAA,qBAAqB,EAACD,KAAK,CAACD,MAAN,CAAaE,qBAAb,IAAsC,SAD3B;AAEjCC,IAAAA,eAAe,EAACF,KAAK,CAACD,MAAN,CAAaG,eAAb,IAAgC;AAFf,GAAD,CADhB;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAKpBZ,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAIA,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAG;AACxBF,IAAAA,QAAQ,mBACDD,KADC,sBAEHG,CAAC,CAACC,MAAF,CAASC,IAFN,EAEYF,CAAC,CAACC,MAAF,CAASE,KAFrB,GAAR;AAIH,GALD;;AAQA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,6BADJ,EAEI,4CAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,uBAAZ;AAAoC,IAAA,KAAK,EAAEN,KAAK,CAACF,qBAAjD;AAAwE,IAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAnF,IAHJ,EAII,sCAJJ,EAKI;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,EAAEH,KAAK,CAACD,eAA3C;AAA4D,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAvE,IALJ,CADJ,CADJ,CADJ;AAaH,CA9BD;;AAgCAP,MAAM,CAACW,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAAA;AAAA,2CAEIjB,UAAU,CAAC,QAAD,CAFd;;AAAA;AAEfkB,UAAAA,UAFe;AAGrBjB,UAAAA,MAAM,GAAGiB,UAAU,CAACC,IAAX,CAAgBC,OAAhB,GAA0BF,UAAU,CAACC,IAAX,CAAgBC,OAAhB,CAAwBD,IAAlD,GAAyD,EAAlE;AAHqB,2CAId;AAAElB,YAAAA,MAAM,EAANA;AAAF,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAMA,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport settings from '../settings/general'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\n\r\nconst design = props => {\r\n    const [ state, setState ] = useState({\r\n        topBarBackgroundColor:props.design.topBarBackgroundColor || '#181818',\r\n        topBarTextColor:props.design.topBarTextColor || '#fff',\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    const onChangeHandler = e =>{\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className='adminDesign'>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>Top Bar:</h2>\r\n                    <p>Top Bar Background Color</p>\r\n                    <input name='topBarBackgroundColor' value={state.topBarBackgroundColor} onChange={e=>onChangeHandler(e)}/>\r\n                    <p>Top Bar Text Color</p>\r\n                    <input name='topBarTextColor' value={state.topBarTextColor} onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ndesign.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let design;\r\n    const designData = await getSetting('design');\r\n    design = designData.data.setting ? designData.data.setting.data : {}\r\n    return { design }\r\n}\r\nexport default design;\r\n"]},"metadata":{},"sourceType":"module"}