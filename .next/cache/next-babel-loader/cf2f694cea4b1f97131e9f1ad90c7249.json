{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { updateSetting, getSetting } from \"../../../../_variables/ajaxVariables\";\nimport FA from \"react-fontawesome\";\n\nconst settings = props => {\n  const keywordsInput = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    siteAddress: '',\n    protocol: '',\n    title: '',\n    themeColor: '',\n    description: '',\n    keywords: [],\n    logoText: '',\n    headLine: '',\n    homePageH1: '',\n    homePagePagination: false\n  });\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n  useEffect(() => {\n    getSetting('identity').then(res => {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {}, res.data.setting.data));\n      } else {\n        setState(_objectSpread({}, state, {\n          title: 'website title',\n          themeColor: '#000',\n          description: 'website description',\n          Keywords: ['keywords']\n        }));\n      }\n    });\n  }, []);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    updateSetting('identity', state);\n  };\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const deleteItem = e => {\n    setState(_objectSpread({}, state, {\n      keywords: state.keywords.filter(i => {\n        return i !== e.currentTarget.name;\n      })\n    }));\n  };\n\n  const addKeyword = () => {\n    if (keywordsInput.current.value.includes(',')) {\n      let newItems = keywordsInput.current.value.split(',');\n      setState(state => _objectSpread({}, state, {\n        keywords: [...state.keywords, ...newItems]\n      }));\n    } else {\n      setState(_objectSpread({}, state, {\n        keywords: [...state.keywords, keywordsInput.current.value]\n      }));\n    }\n\n    keywordsInput.current.value = '';\n  };\n\n  const keywords = state.keywords.map(item => {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: e => deleteItem(e)\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    id: \"site-settings-form\",\n    onSubmit: e => onSubmitHandler(e)\n  }, __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Site Address (URL)\"), __jsx(\"input\", {\n    name: \"siteAddress\",\n    value: state.siteAddress,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Protocol\"), __jsx(\"select\", {\n    name: \"protocol\",\n    value: state.protocol,\n    onChange: e => onChangeHandler(e)\n  }, __jsx(\"option\", null, \"Http\"), __jsx(\"option\", null, \"Https\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Logo Text\"), __jsx(\"input\", {\n    name: \"logoText\",\n    value: state.logoText,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Head Line\"), __jsx(\"input\", {\n    name: \"headLine\",\n    value: state.headLine,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Site Title\"), __jsx(\"input\", {\n    name: \"title\",\n    value: state.title,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Description\"), __jsx(\"textarea\", {\n    name: \"description\",\n    value: state.description,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Home Page H1\"), __jsx(\"textarea\", {\n    name: \"homePageH1\",\n    value: state.homePageH1,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section keywords\"\n  }, __jsx(\"p\", null, \"Keywords\"), __jsx(\"input\", {\n    ref: keywordsInput,\n    name: \"keywords\"\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => addKeyword()\n  }, \"add\"), __jsx(\"span\", null, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, keywords)), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Theme Color\"), __jsx(\"input\", {\n    name: \"themeColor\",\n    value: state.themeColor,\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Home Page Pagination\"), __jsx(\"select\", {\n    value: state.homePagePagination\n  }, __jsx(\"option\", {\n    value: true\n  }, \"Yes\"), __jsx(\"option\", {\n    value: false\n  }, \"No\"))), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\nsettings.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  return {\n    name: 'test'\n  };\n};\n\nexport default settings;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/general/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","updateSetting","getSetting","FA","settings","props","keywordsInput","state","setState","siteAddress","protocol","title","themeColor","description","keywords","logoText","headLine","homePageH1","homePagePagination","console","log","then","res","data","setting","Keywords","onSubmitHandler","e","preventDefault","onChangeHandler","target","name","value","deleteItem","filter","i","currentTarget","addKeyword","current","includes","newItems","split","map","item","getInitialProps","pathname","query","req","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext,useRef } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { updateSetting,getSetting } from \"../../../../_variables/ajaxVariables\";\r\nimport FA from \"react-fontawesome\";\r\n\r\nconst settings = props => {\r\n    const keywordsInput = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        siteAddress:'',\r\n        protocol:'',\r\n        title: '',\r\n        themeColor: '',\r\n        description: '',\r\n        keywords: [],\r\n        logoText:'',\r\n        headLine:'',\r\n        homePageH1:'',\r\n        homePagePagination:false,\r\n\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        console.log(state)\r\n    }, [state]);\r\n\r\n\r\n    useEffect(()=>{\r\n     getSetting('identity').then(res=>{\r\n         if (res.data.setting){\r\n             setState({\r\n                 ...state,\r\n                 ...res.data.setting.data\r\n             })\r\n         }else {\r\n             setState({\r\n                 ...state,\r\n                 title: 'website title',\r\n                 themeColor: '#000',\r\n                 description: 'website description',\r\n                 Keywords: ['keywords']\r\n             })\r\n         }\r\n     })\r\n    },[ ]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        updateSetting('identity', state)\r\n    };\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const deleteItem = (e) => {\r\n        setState({\r\n            ...state,\r\n            keywords: state.keywords.filter(i=> {return i!== e.currentTarget.name}),\r\n        })\r\n    };\r\n    const addKeyword = () => {\r\n        if (keywordsInput.current.value.includes(',')) {\r\n            let newItems = keywordsInput.current.value.split(',');\r\n            setState(state => ({\r\n                ...state,\r\n                keywords: [ ...state.keywords, ...newItems ]\r\n            }))\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                keywords:  [...state.keywords,keywordsInput.current.value]\r\n            })\r\n        }\r\n        keywordsInput.current.value = ''\r\n    };\r\n\r\n    const keywords = state.keywords.map(item => {\r\n        return (\r\n            <div key={ item }  className='item'>\r\n                <p>{ item }</p>\r\n                <button name={ item } onClick={ (e) => deleteItem(e) } ><FA className='fontawesomeMedium' name='times'/></button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <form id='site-settings-form' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Site Address (URL)</p>\r\n                    <input name='siteAddress' value={state.siteAddress} onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Protocol</p>\r\n                    <select name='protocol' value={state.protocol} onChange={e=>onChangeHandler(e)}>\r\n                        <option>Http</option>\r\n                        <option>Https</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Logo Text</p>\r\n                    <input name='logoText' value={state.logoText} onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Head Line</p>\r\n                    <input name='headLine' value={state.headLine} onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Site Title</p>\r\n                    <input name='title' value={state.title} onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Description</p>\r\n                    <textarea name='description' value={state.description} onChange={e=>onChangeHandler(e)} />\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Home Page H1</p>\r\n                    <textarea name='homePageH1' value={state.homePageH1} onChange={e=>onChangeHandler(e)} />\r\n                </div>\r\n                <div className=\"site-settings-form-section keywords\">\r\n                    <p>Keywords</p>\r\n                    <input ref={keywordsInput} name='keywords'  />\r\n                    <button type='button' onClick={()=>addKeyword()}>add</button>\r\n                    <span>Separate tags with commas</span>\r\n\r\n                    <div className=\"items\">\r\n                        {keywords}\r\n                    </div>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Theme Color</p>\r\n                    <input name='themeColor' value={state.themeColor}  onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Home Page Pagination</p>\r\n                   <select value={state.homePagePagination}>\r\n                       <option value={true}>Yes</option>\r\n                       <option  value={false}>No</option>\r\n                   </select>\r\n                </div>\r\n                <button className='submitBtn' type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nsettings.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    return { name: 'test' }\r\n}\r\nexport default settings;"]},"metadata":{},"sourceType":"module"}