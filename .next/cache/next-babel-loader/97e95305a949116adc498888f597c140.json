{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { getComments } from '../../../_variables/ajaxPostsVariables';\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments';\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nvar comments = function comments(props) {\n  return __jsx(AdminLayout, null, __jsx(\"div\", null, __jsx(AdminCommentsControl, {\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCommentsData.pageNo,\n    totalCount: props.totalComments,\n    size: props.getCommentsData.size,\n    maxPage: Math.ceil(parseInt(props.totalComments) / parseInt(props.getCommentsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(AdminRenderComments, props)));\n};\n\ncomments.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, domainName, comments, getCommentsData, commentsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          getCommentsData = {\n            size: parseInt(query.size) || 30,\n            pageNo: parseInt(query.page) || 1,\n            keyword: query.keyword || '',\n            sort: query.sort || 'latest',\n            status: query.status || 'all'\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getComments(getCommentsData, false, domainName));\n\n        case 12:\n          commentsData = _context.sent;\n          comments = commentsData.data;\n          return _context.abrupt(\"return\", {\n            query: query,\n            pathname: pathname,\n            comments: comments.comments,\n            totalComments: comments.count,\n            getCommentsData: getCommentsData\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default comments;","map":null,"metadata":{},"sourceType":"module"}