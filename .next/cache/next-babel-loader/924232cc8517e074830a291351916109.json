{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\nimport { AppContext } from '../../../../context/AppContext';\nimport { DelayInput } from 'react-delay-input';\nimport './topBar.scss';\n\nconst topBar = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    topBarBackgroundColor: '',\n    topBarTextColor: ''\n  });\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      topBarBackgroundColor: contextData.siteDesign.topBarBackgroundColor,\n      topBarTextColor: ''\n    }));\n  }, []);\n\n  const onChangeHandler = e => {\n    contextData.dispatchSiteDesign(_objectSpread({}, contextData.siteDesign, {\n      customScript: e.target.value\n    }));\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"topBarSettings\"\n  }, __jsx(\"div\", {\n    className: \"topBarSettingsSection\"\n  }, __jsx(\"p\", null, \"Top Bar Background Color :\"), __jsx(DelayInput, {\n    className: \"topBarSettingsSectionInput\",\n    name: \"topBarBackgroundColor\",\n    value: contextData.siteIdentity.topBarBackgroundColor,\n    delayTimeout: 1000,\n    onChange: e => onChangeHandler(e)\n  }))));\n};\n\nexport default topBar;","map":null,"metadata":{},"sourceType":"module"}