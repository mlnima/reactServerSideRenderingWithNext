{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../../context/AppContext\";\n\nvar TextInputWithUploadBtn = function TextInputWithUploadBtn(props) {\n  var contextData = useContext(AppContext);\n  var element = useRef(null);\n  useEffect(function () {\n    if (element.current) {\n      if (contextData.editingPostData[element.current.name]) {\n        element.current.value = contextData.editingPostData[element.current.name];\n      }\n    }\n  }, [contextData.editingPostData]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: \"TextInputWithUploadBtn VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, props.name)), __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(\"input\", {\n    ref: element,\n    className: \"textInputWithUpload\",\n    name: props.name,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"button\", {\n    className: \"uploadBtn\"\n  }, \"Upload\")));\n};\n\nexport default TextInputWithUploadBtn; //     onChange={e=>{contextData.functions.setEditingPostData(e.target.name,e.target.value)}}","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/TextInputWithUploadBtn/TextInputWithUploadBtn.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","TextInputWithUploadBtn","props","contextData","element","current","editingPostData","name","value","onChangeHandler","e","dispatchEditingPostData","target"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK,EAAI;AACpC,MAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;AACA,MAAMI,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;AAEAH,EAAAA,SAAS,CAAC,YAAI;AACV,QAAIQ,OAAO,CAACC,OAAZ,EAAoB;AAChB,UAAIF,WAAW,CAACG,eAAZ,CAA4BF,OAAO,CAACC,OAAR,CAAgBE,IAA5C,CAAJ,EAAsD;AAClDH,QAAAA,OAAO,CAACC,OAAR,CAAgBG,KAAhB,GAAwBL,WAAW,CAACG,eAAZ,CAA4BF,OAAO,CAACC,OAAR,CAAgBE,IAA5C,CAAxB;AACH;AACJ;AACJ,GANQ,EAMP,CAAEJ,WAAW,CAACG,eAAd,CANO,CAAT;;AAQA,MAAMG,eAAe,GAAE,SAAjBA,eAAiB,CAAAC,CAAC,EAAE;AACtBP,IAAAA,WAAW,CAACQ,uBAAZ,mBACOR,WAAW,CAACG,eADnB,sBAEKI,CAAC,CAACE,MAAF,CAASL,IAFd,EAEoBG,CAAC,CAACE,MAAF,CAASJ,KAF7B;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iBAAKN,KAAK,CAACK,IAAX,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,GAAG,EAAEH,OAAZ;AAAqB,IAAA,SAAS,EAAC,qBAA/B;AAAqD,IAAA,IAAI,EAAGF,KAAK,CAACK,IAAlE;AAAyE,IAAA,QAAQ,EAAE,kBAAAG,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAApF,IADJ,EAEI;AAAQ,IAAA,SAAS,EAAC;AAAlB,cAFJ,CAJJ,CADJ;AAWH,CA9BD;;AA+BA,eAAeT,sBAAf,C,CAEA","sourcesContent":["import React, { useEffect, useState, useContext,useRef } from 'react';\r\nimport { AppContext } from \"../../../../../context/AppContext\";\r\n\r\nconst TextInputWithUploadBtn = props => {\r\n    const contextData = useContext(AppContext);\r\n    const element = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if (element.current){\r\n            if (contextData.editingPostData[element.current.name]){\r\n                element.current.value = contextData.editingPostData[element.current.name]\r\n            }\r\n        }\r\n    },[ contextData.editingPostData]);\r\n\r\n    const onChangeHandler =e=>{\r\n        contextData.dispatchEditingPostData({\r\n            ...contextData.editingPostData,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='TextInputWithUploadBtn VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>{ props.name }</p>\r\n            </div>\r\n            <div className=\"editor\">\r\n                <input ref={element} className='textInputWithUpload' name={ props.name } onChange={e=>onChangeHandler(e)} />\r\n                <button className='uploadBtn'>Upload</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TextInputWithUploadBtn;\r\n\r\n//     onChange={e=>{contextData.functions.setEditingPostData(e.target.name,e.target.value)}}"]},"metadata":{},"sourceType":"module"}