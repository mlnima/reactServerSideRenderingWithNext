{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './TopBar.scss';\nimport FA from \"react-fontawesome\";\nimport { AppContext } from \"../../../context/AppContext\";\n\nconst TopBar = props => {\n  const contextData = useContext(AppContext);\n\n  const AdminSideBarOpenCloseHandler = () => {\n    contextData.settings.adminPanelSideBar ? contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: false\n    })) : contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: true\n    }));\n  };\n\n  useEffect(() => {\n    console.log(contextData.settings);\n  }, [contextData.settings]);\n  return __jsx(\"div\", {\n    className: \"adminTopBar\"\n  }, __jsx(\"button\", {\n    className: \"navigationMobileBtn\",\n    onClick: () => AdminSideBarOpenCloseHandler()\n  }, __jsx(FA, {\n    name: \"bars\"\n  }), \" \"));\n};\n\nexport default TopBar;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/TopBar/TopBar.js"],"names":["React","useEffect","useState","useContext","FA","AppContext","TopBar","props","contextData","AdminSideBarOpenCloseHandler","settings","adminPanelSideBar","dispatchSettings","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;;AAEA,QAAMI,4BAA4B,GAAC,MAAI;AACnCD,IAAAA,WAAW,CAACE,QAAZ,CAAqBC,iBAArB,GACIH,WAAW,CAACI,gBAAZ,CAA6BF,QAAQ,sBAC9BA,QAD8B;AAEjCC,MAAAA,iBAAiB,EAAC;AAFe,MAArC,CADJ,GAKIH,WAAW,CAACI,gBAAZ,CAA6BF,QAAQ,sBAC9BA,QAD8B;AAEjCC,MAAAA,iBAAiB,EAAC;AAFe,MAArC,CALJ;AASH,GAVD;;AAaAV,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACE,QAAxB;AACH,GAFQ,EAEP,CAAEF,WAAW,CAACE,QAAd,CAFO,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAE,MAAID,4BAA4B;AAAjF,KAAqF,MAAC,EAAD;AAAI,IAAA,IAAI,EAAC;AAAT,IAArF,MADJ,CADJ;AAKH,CAzBD;;AA0BA,eAAeH,MAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './TopBar.scss';\r\nimport FA from \"react-fontawesome\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\n\r\nconst TopBar = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const AdminSideBarOpenCloseHandler=()=>{\r\n        contextData.settings.adminPanelSideBar ?\r\n            contextData.dispatchSettings(settings=>({\r\n                ...settings,\r\n                adminPanelSideBar:false,\r\n            })):\r\n            contextData.dispatchSettings(settings=>({\r\n                ...settings,\r\n                adminPanelSideBar:true,\r\n            }))\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(contextData.settings )\r\n    },[ contextData.settings]);\r\n\r\n    return (\r\n        <div className='adminTopBar'>\r\n            <button className='navigationMobileBtn' onClick={()=>AdminSideBarOpenCloseHandler()}><FA name=\"bars\" /> </button>\r\n        </div>\r\n    );\r\n};\r\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}