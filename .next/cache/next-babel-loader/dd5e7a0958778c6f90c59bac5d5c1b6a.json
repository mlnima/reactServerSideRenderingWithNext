{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\n\nvar queryGeneratorForUnCacheRequest = function queryGeneratorForUnCacheRequest(requestItems) {\n  var query = '?';\n\n  for (var item in requestItems) {\n    query += \"\".concat(item, \"=\").concat(requestItems[item]);\n  }\n\n  return query;\n};\n\nexport var getPosts = function getPosts(data, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + \"/api/v1/posts\".concat(queryGeneratorForUnCacheRequest(data)), body));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getPost = function getPost(data, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + '/api/v1/posts/post', body));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getMeta = function getMeta(data, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getMeta$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + \"/api/v1/posts/getMeta?pageNo=\".concat(data.pageNo, \"&type=\").concat(data.type), body));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var newComment = function newComment(data) {\n  var body;\n  return _regeneratorRuntime.async(function newComment$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + \"/api/v1/posts/newComment\", body));\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var getComments = function getComments(data, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getComments$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + \"/api/v1/posts/getComments\", body));\n\n        case 3:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var updateComment = function updateComment(data) {\n  var body;\n  return _regeneratorRuntime.async(function updateComment$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          body = _objectSpread({}, data);\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + \"/api/v1/posts/updateComment\", body));\n\n        case 3:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var likeDislikeView = function likeDislikeView(id, type) {\n  var body;\n  return _regeneratorRuntime.async(function likeDislikeView$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          body = {\n            id: id,\n            type: type\n          };\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + '/api/v1/posts/likeDislikeView', body));\n\n        case 3:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/ajaxPostsVariables.js"],"names":["axios","queryGeneratorForUnCacheRequest","requestItems","query","item","getPosts","data","cache","domainName","body","post","getPost","getMeta","pageNo","type","newComment","window","location","origin","getComments","updateComment","likeDislikeView","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst queryGeneratorForUnCacheRequest = (requestItems)=>{\r\n    let query = '?'\r\n    for(const item in requestItems){\r\n        query += `${item}=${requestItems[item]}`\r\n    }\r\n    return query\r\n}\r\n\r\nexport const getPosts = async (data,cache,domainName) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(domainName +`/api/v1/posts${queryGeneratorForUnCacheRequest(data)}`, body)\r\n};\r\n\r\nexport const getPost = async (data,cache,domainName) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(domainName +'/api/v1/posts/post', body)\r\n};\r\n\r\n\r\nexport const getMeta = async (data,cache,domainName) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(domainName +`/api/v1/posts/getMeta?pageNo=${data.pageNo}&type=${data.type}`, body)\r\n};\r\n\r\n\r\nexport const newComment = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(window.location.origin +`/api/v1/posts/newComment`, body)\r\n};\r\n\r\nexport const getComments = async (data,cache,domainName) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(domainName +`/api/v1/posts/getComments`, body)\r\n};\r\n\r\nexport const updateComment = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(window.location.origin +`/api/v1/posts/updateComment`, body)\r\n};\r\n\r\nexport const likeDislikeView = async (id,type) => {\r\n    const body = {\r\n        id,\r\n        type\r\n    };\r\n    return await axios.post(window.location.origin +'/api/v1/posts/likeDislikeView', body)\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}