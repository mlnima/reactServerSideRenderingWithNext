{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nexport var AppContext = React.createContext();\n\nvar AppProvider = function AppProvider(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      dispatchState = _useState[1];\n\n  var _useState2 = useState({\n    adminPanelSideBar: false,\n    test: false\n  }),\n      settings = _useState2[0],\n      dispatchSettings = _useState2[1];\n\n  var _useState3 = useState({}),\n      userData = _useState3[0],\n      dispatchUserData = _useState3[1];\n\n  var _useState4 = useState({}),\n      editingPostData = _useState4[0],\n      dispatchEditingPostData = _useState4[1];\n\n  var _useState5 = useState([]),\n      adminPosts = _useState5[0],\n      dispatchAdminPosts = _useState5[1];\n\n  var _useState6 = useState({\n    pageNo: 1,\n    limit: 30,\n    totalPosts: 0,\n    totalPage: 0,\n    type: 'all',\n    keyword: '',\n    fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n    checkedPosts: []\n  }),\n      adminPostsData = _useState6[0],\n      dispatchAdminPostsData = _useState6[1];\n\n  var _useState7 = useState({\n    getAndSetUserInfo: function getAndSetUserInfo() {\n      return _regeneratorRuntime.async(function getAndSetUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!localStorage.wt) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.post('/api/v1/users/getUserInfo', {\n                token: localStorage.wt\n              }).then(function (res) {\n                dispatchUserData(_objectSpread({}, userData, {}, res.data.userData));\n              })[\"catch\"](function (err) {\n                console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    },\n    logOutUser: function logOutUser() {\n      localStorage.removeItem('wt');\n      dispatchUserData({});\n      props.router.push('/');\n    },\n    goToAdminPanel: function goToAdminPanel() {\n      props.router.push('/admin');\n    },\n    goToHomePage: function goToHomePage() {// props.router.push('/')\n    },\n    savePosts: function savePosts(data) {\n      var body;\n      return _regeneratorRuntime.async(function savePosts$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              body = {\n                postData: data,\n                token: localStorage.wt\n              };\n              return _context2.abrupt(\"return\", axios.post('/api/v1/posts/createNewPost', body));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    },\n    getPosts: function getPosts(data) {\n      var body;\n      return _regeneratorRuntime.async(function getPosts$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              body = _objectSpread({}, data, {\n                token: localStorage.wt\n              });\n              axios.post('/api/v1/posts', body).then(function (res) {\n                dispatchAdminPosts(res.data.posts); // dispatchAdminPostsData({\n                //     ...adminPostsData,\n                //     totalPosts: res.data.totalCount,\n                //     totalPage: res.data.totalCount / adminPostsData.limit\n                // })\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    },\n    setEditingPostData: function setEditingPostData(name, value) {\n      dispatchEditingPostData(function (editingPostData) {\n        return _objectSpread({}, editingPostData, _defineProperty({}, name, value));\n      });\n    }\n  }),\n      functions = _useState7[0],\n      dispatchFunctions = _useState7[1];\n\n  useEffect(function () {\n    functions.getAndSetUserInfo();\n  }, []);\n  useEffect(function () {\n    console.log(userData);\n  }, [userData]);\n  useEffect(function () {\n    console.log(props);\n\n    if (props.router.pathname === '/admin/posts') {\n      functions.getPosts(adminPostsData);\n    }\n  }, [adminPostsData]);\n  useEffect(function () {\n    if (userData.username) {\n      if (props.router.pathname === '/auth/login' || props.router.pathname === '/auth/register') {\n        props.router.push('/');\n      }\n    }\n  }, [props.router.pathname]);\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state: state,\n      dispatchState: dispatchState,\n      settings: settings,\n      dispatchSettings: dispatchSettings,\n      userData: userData,\n      dispatchUserData: dispatchUserData,\n      functions: functions,\n      editingPostData: editingPostData,\n      dispatchEditingPostData: dispatchEditingPostData,\n      adminPosts: adminPosts,\n      dispatchAdminPosts: dispatchAdminPosts,\n      adminPostsData: adminPostsData,\n      dispatchAdminPostsData: dispatchAdminPostsData\n    }\n  }, props.children));\n};\n\nAppProvider.getInitialProps = function (ctx) {\n  return {\n    ctx: ctx\n  };\n};\n\nexport var AppProviderWithRouter = withRouter(AppProvider);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","withRouter","AppContext","createContext","AppProvider","props","state","dispatchState","adminPanelSideBar","test","settings","dispatchSettings","userData","dispatchUserData","editingPostData","dispatchEditingPostData","adminPosts","dispatchAdminPosts","pageNo","limit","totalPosts","totalPage","type","keyword","fields","checkedPosts","adminPostsData","dispatchAdminPostsData","getAndSetUserInfo","localStorage","wt","post","token","then","res","data","err","console","log","logOutUser","removeItem","router","push","goToAdminPanel","goToHomePage","savePosts","body","postData","getPosts","posts","setEditingPostData","name","value","functions","dispatchFunctions","pathname","username","children","getInitialProps","ctx","AppProviderWithRouter"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"next/router\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({});\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        test: false\r\n    });\r\n    const [ userData, dispatchUserData ] = useState({});\r\n    const [ editingPostData, dispatchEditingPostData ] = useState({});\r\n    const [ adminPosts, dispatchAdminPosts ] = useState([]);\r\n    const [ adminPostsData, dispatchAdminPostsData ] = useState({\r\n        pageNo: 1,\r\n        limit: 30,\r\n        totalPosts: 0,\r\n        totalPage: 0,\r\n        type: 'all',\r\n        keyword:'',\r\n        fields:[ 'author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo: async () => {\r\n            if (localStorage.wt) {\r\n                await axios.post('/api/v1/users/getUserInfo', { token: localStorage.wt }).then(res => {\r\n                    dispatchUserData({ ...userData, ...res.data.userData });\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        logOutUser: () => {\r\n            localStorage.removeItem('wt');\r\n            dispatchUserData({})\r\n            props.router.push('/')\r\n        },\r\n        goToAdminPanel: () => {\r\n            props.router.push('/admin')\r\n        },\r\n        goToHomePage: () => {\r\n            // props.router.push('/')\r\n        },\r\n        savePosts: async (data) => {\r\n            const body = {\r\n                postData: data,\r\n                token: localStorage.wt\r\n            };\r\n            return axios.post('/api/v1/posts/createNewPost', body)\r\n        },\r\n        getPosts: async (data) => {\r\n            const body = {\r\n                ...data,\r\n                token: localStorage.wt\r\n            };\r\n            axios.post('/api/v1/posts', body).then(res => {\r\n                dispatchAdminPosts(res.data.posts);\r\n                // dispatchAdminPostsData({\r\n                //     ...adminPostsData,\r\n                //     totalPosts: res.data.totalCount,\r\n                //     totalPage: res.data.totalCount / adminPostsData.limit\r\n                // })\r\n            })\r\n        }, setEditingPostData: (name, value) => {\r\n            dispatchEditingPostData(editingPostData => ({\r\n                ...editingPostData,\r\n                [name]: value\r\n            }))\r\n        }\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        functions.getAndSetUserInfo()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(userData)\r\n    }, [ userData ]);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.router.pathname === '/admin/posts') {\r\n            functions.getPosts(adminPostsData)\r\n        }\r\n    }, [ adminPostsData ]);\r\n\r\n    useEffect(() => {\r\n        if (userData.username) {\r\n            if (props.router.pathname === '/auth/login' || props.router.pathname === '/auth/register') {\r\n                props.router.push('/')\r\n            }\r\n        }\r\n    }, [ props.router.pathname ]);\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions,\r\n                    editingPostData,\r\n                    dispatchEditingPostData,\r\n                    adminPosts,\r\n                    dispatchAdminPosts,\r\n                    adminPostsData,\r\n                    dispatchAdminPostsData,\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n};\r\n\r\nAppProvider.getInitialProps = (ctx) => {\r\n    return { ctx }\r\n};\r\n\r\nexport const AppProviderWithRouter = withRouter(AppProvider);"]},"metadata":{},"sourceType":"module"}