{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\n\nvar tags = function tags(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    metaData: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n  useEffect(function () {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(function (siteIdentity) {\n        return _objectSpread({}, siteIdentity, {}, props.identity);\n      });\n    }\n\n    if (props.tags.length) {\n      setState(_objectSpread({}, state, {\n        metaData: props.tags\n      }));\n    } else if (props.tags.length < 1) {\n      getMeta({\n        type: 'tag',\n        pageNo: 1,\n        size: 100,\n        searchForImageIn: 'tags',\n        sortBy: '-_id'\n      }).then(function (res) {\n        console.log(res);\n        setState(_objectSpread({}, state, {\n          metaData: res.data.metas\n        }));\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }, [props]);\n  var renderTags = state.metaData.map(function (meta) {\n    if (meta.count > 0) {\n      return __jsx(TagElement, {\n        key: meta._id,\n        imageUrl: meta.imageUrl,\n        noImageUrl: meta.noImageUrl,\n        name: meta.name,\n        count: meta.count\n      });\n    }\n  });\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags));\n};\n\ntags.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, tags, identityData, navigationData, getTagsData, tagsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          tags = [];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 4:\n          identityData = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 7:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          getTagsData = {\n            type: query.meta,\n            searchForImageIn: 'tags',\n            pageNo: _parseInt(query.page) || 1,\n            size: _parseInt(query.size) || _parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(getMeta(getTagsData));\n\n        case 13:\n          tagsData = _context.sent;\n          tags = tagsData.data.metas ? tagsData.data.metas : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            tags: tags\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default tags;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","AppContext","TagElement","CategoryElement","tags","props","contextData","metaData","state","setState","console","log","navigation","dispatchNavigationData","data","identity","dispatchSiteIdentity","siteIdentity","length","type","pageNo","size","searchForImageIn","sortBy","then","res","metas","err","renderTags","map","meta","count","_id","imageUrl","noImageUrl","name","getInitialProps","pathname","query","req","identityData","navigationData","setting","getTagsData","page","tagsCountPerPage","sort","tagsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\n\r\nconst tags = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData: []\r\n    });\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n        if (props.tags.length){\r\n            setState({\r\n                ...state,\r\n                metaData: props.tags\r\n            })\r\n        }else if (props.tags.length<1){\r\n            getMeta({\r\n                type: 'tag',\r\n                pageNo: 1,\r\n                size: 100,\r\n                searchForImageIn:'tags',\r\n                sortBy:'-_id'\r\n            }).then(res=>{\r\n                console.log(res )\r\n                setState({\r\n                    ...state,\r\n                    metaData: res.data.metas\r\n                })\r\n            }).catch(err=>{\r\n                console.log( err)\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderTags = state.metaData.map(meta => {\r\n        if (meta.count>0){\r\n            return (\r\n                <TagElement key={meta._id} imageUrl={meta.imageUrl} noImageUrl={meta.noImageUrl} name={meta.name} count={meta.count}/>\r\n            )\r\n        }\r\n\r\n    })\r\n    return (\r\n        <AppLayout>\r\n            <div className='tags'>\r\n                {renderTags}\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let tags = []\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getTagsData = {\r\n        type: query.meta,\r\n        searchForImageIn:'tags',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n\r\n\r\n        const tagsData = await getMeta(getTagsData)\r\n        tags = tagsData.data.metas ? tagsData.data.metas : []\r\n  \r\n\r\n\r\n    return { identity, navigation, query, tags }\r\n}\r\nexport default tags;\r\n"]},"metadata":{},"sourceType":"module"}