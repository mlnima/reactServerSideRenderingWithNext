{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../../context/AppContext\";\n\nconst Quality = props => {\n  const contextData = useContext(AppContext);\n  const qualityElement = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    defaultValue: '240p'\n  });\n  useEffect(() => {\n    if (qualityElement.current) {\n      qualityElement.current.value = contextData.editingPostData.quality || '720p';\n    }\n  }, [contextData.editingPostData.quality]);\n\n  const onChangeHandler = e => {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"Quality VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Quality\")), __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(\"div\", {\n    className: \"option\"\n  }, __jsx(\"select\", {\n    ref: qualityElement,\n    name: \"quality\",\n    onChange: e => onChangeHandler(e)\n  }, __jsx(\"option\", {\n    value: \"240p\"\n  }, \"240p\"), __jsx(\"option\", {\n    value: \"360p\"\n  }, \"360p\"), __jsx(\"option\", {\n    value: \"480p\"\n  }, \"480p\"), __jsx(\"option\", {\n    value: \"720p\"\n  }, \"720p\"), __jsx(\"option\", {\n    value: \"1080p\"\n  }, \"1080p\"), __jsx(\"option\", {\n    value: \"1440p\"\n  }, \"1440p\"), __jsx(\"option\", {\n    value: \"2060p\"\n  }, \"2060p\"), __jsx(\"option\", {\n    value: \"4120p\"\n  }, \"4120p\")))));\n};\n\nexport default Quality;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/Quality/Quality.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","Quality","props","contextData","qualityElement","state","setState","defaultValue","current","value","editingPostData","quality","onChangeHandler","e","dispatchEditingPostData","target","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;AAEA,QAAMI,cAAc,GAAGL,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM;AAAA,OAAEM,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,YAAY,EAAE;AADmB,GAAD,CAApC;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,cAAc,CAACI,OAAnB,EAA2B;AACvBJ,MAAAA,cAAc,CAACI,OAAf,CAAuBC,KAAvB,GAA+BN,WAAW,CAACO,eAAZ,CAA4BC,OAA5B,IAAuC,MAAtE;AACH;AACJ,GAJQ,EAIN,CAAER,WAAW,CAACO,eAAZ,CAA4BC,OAA9B,CAJM,CAAT;;AAOA,QAAMC,eAAe,GAAEC,CAAC,IAAE;AACtBV,IAAAA,WAAW,CAACW,uBAAZ,mBACOX,WAAW,CAACO,eADnB;AAEI,OAACG,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgBH,CAAC,CAACE,MAAF,CAASN;AAF7B;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,2BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,GAAG,EAAEL,cAAb;AAA8B,IAAA,IAAI,EAAC,SAAnC;AAA8C,IAAA,QAAQ,EAAGS,CAAC,IAAID,eAAe,CAACC,CAAD;AAA7E,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,YADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,YAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC;AAAd,YAHJ,EAII;AAAQ,IAAA,KAAK,EAAC;AAAd,YAJJ,EAKI;AAAQ,IAAA,KAAK,EAAC;AAAd,aALJ,EAMI;AAAQ,IAAA,KAAK,EAAC;AAAd,aANJ,EAOI;AAAQ,IAAA,KAAK,EAAC;AAAd,aAPJ,EAQI;AAAQ,IAAA,KAAK,EAAC;AAAd,aARJ,CADJ,CADJ,CAJJ,CADJ;AAqBH,CA1CD;;AA2CA,eAAeZ,OAAf","sourcesContent":["import React, { useEffect, useState, useContext,useRef } from 'react';\r\nimport { AppContext } from \"../../../../../context/AppContext\";\r\n\r\nconst Quality = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const qualityElement = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        defaultValue: '240p'\r\n    });\r\n    useEffect(() => {\r\n        if (qualityElement.current){\r\n            qualityElement.current.value = contextData.editingPostData.quality || '720p'\r\n        }\r\n    }, [ contextData.editingPostData.quality ]);\r\n\r\n\r\n    const onChangeHandler =e=>{\r\n        contextData.dispatchEditingPostData({\r\n            ...contextData.editingPostData,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='Quality VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Quality</p>\r\n            </div>\r\n            <div className=\"editor\">\r\n                <div className=\"option\">\r\n                    <select ref={qualityElement}  name='quality'  onChange={ e => onChangeHandler(e) }>\r\n                        <option value='240p'>240p</option>\r\n                        <option value='360p'>360p</option>\r\n                        <option value='480p'>480p</option>\r\n                        <option value='720p'>720p</option>\r\n                        <option value='1080p'>1080p</option>\r\n                        <option value='1440p'>1440p</option>\r\n                        <option value='2060p'>2060p</option>\r\n                        <option value='4120p'>4120p</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Quality;\r\n\r\n"]},"metadata":{},"sourceType":"module"}