{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from 'react-fontawesome';\n\nconst FilterPagination = props => {\n  const contextData = useContext(AppContext);\n  let currentPageInput = useRef(null);\n  let size = useRef(null); // const [ state, setState ] = useState({\n  //     totalPosts: 0,\n  //     perPage: 0,\n  //     totalPage: 0,\n  //     currentPage: 1\n  // });\n  // useEffect(()=>{\n  //     currentPageInput.current.value = contextData.postsData.pageNo\n  //     size.current.value = contextData.postsData.size\n  // },[contextData.postsData.pageNo]);\n\n  let nextPage = () => {\n    const nextPage = contextData.adminPostsData.pageNo + 1;\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: nextPage\n    }));\n  };\n\n  let previousPage = () => {\n    if (contextData.adminPostsData.pageNo - 1 <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: contextData.adminPostsData.pageNo - 1\n      }));\n    }\n  };\n\n  let lastPage = () => {\n    const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size);\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: lastPage\n    }));\n  };\n\n  let firstPage = () => {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: 1\n    }));\n  };\n\n  let changePageNoManually = () => {\n    if (currentPageInput.current.value <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n      currentPageInput.current.value = 1;\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: currentPageInput.current.value\n      }));\n    }\n  };\n\n  let changeSizeHandler = () => {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      size: parseInt(size.current.value)\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterPagination\"\n  }, __jsx(\"div\", {\n    className: \"pagesNavigation\"\n  }, __jsx(\"label\", {\n    className: \"totalPosts\"\n  }, contextData.adminPostsData.totalPosts, \" items\"), __jsx(\"button\", {\n    onClick: () => firstPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-left\"\n  })), __jsx(\"button\", {\n    onClick: () => previousPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-left\"\n  })), __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    placeholder: contextData.adminPostsData.pageNo,\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(\"button\", {\n    onClick: () => nextPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-right\"\n  })), __jsx(\"button\", {\n    onClick: () => lastPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-right\"\n  }))), __jsx(\"div\", {\n    className: \"pagesNavigationMoreAction\"\n  }));\n};\n\nFilterPagination.getInitialProps = ctx => {\n  return {\n    ctx\n  };\n};\n\nexport default FilterPagination;","map":null,"metadata":{},"sourceType":"module"}