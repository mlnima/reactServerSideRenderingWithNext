{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './Videos.scss';\nimport { AppContext } from \"../../../context/AppContext\";\nimport VideoElement from \"../VideoElement/VideoElement\";\nimport Pagination from \"../Pagination/Pagination\";\n\nvar Videos = function Videos(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    pageNo: 1,\n    size: 12,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'all',\n    author: 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    checkedPosts: []\n  }),\n      postsData = _useState[0],\n      setPostsData = _useState[1];\n\n  var _useState2 = useState([]),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    contextData.functions.getPosts(postsData).then(function (res) {\n      setPosts(res.data.posts);\n      setPostsData(_objectSpread({}, postsData, {\n        totalPosts: res.data.totalCount\n      }));\n    });\n  }, []);\n  useEffect(function () {\n    console.log(props);\n  }, []);\n  var renderPosts = posts.map(function (post) {\n    return __jsx(VideoElement, {\n      key: post._id,\n      state: post\n    });\n  });\n  return __jsx(\"div\", {\n    className: \"Videos\"\n  }, __jsx(\"div\", {\n    className: \"videoContent\"\n  }, renderPosts), __jsx(Pagination, _extends({}, props, {\n    postsData: postsData,\n    setPostsData: setPostsData\n  })));\n};\n\nVideos.getInitialProps = function _callee(_ref) {\n  var query, ctx, contextData, test;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query, ctx = _ref.ctx;\n          contextData = useContext(AppContext);\n          test = {\n            test: 'test'\n          };\n          return _context.abrupt(\"return\", {\n            query: query,\n            ctx: ctx,\n            contextData: contextData,\n            test: test\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Videos;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Videos/Videos.js"],"names":["React","useEffect","useState","useContext","AppContext","VideoElement","Pagination","Videos","props","contextData","pageNo","size","totalPosts","postType","keyword","status","author","fields","checkedPosts","postsData","setPostsData","posts","setPosts","functions","getPosts","then","res","data","totalCount","console","log","renderPosts","map","post","_id","getInitialProps","query","ctx","test"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACpB,MAAMC,WAAW,GAAGN,UAAU,CAACC,UAAD,CAA9B;;AADoB,kBAEcF,QAAQ,CAAC;AACvCQ,IAAAA,MAAM,EAAE,CAD+B;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,UAAU,EAAE,CAH2B;AAIvCC,IAAAA,QAAQ,EAAE,KAJ6B;AAKvCC,IAAAA,OAAO,EAAE,EAL8B;AAMvCC,IAAAA,MAAM,EAAE,KAN+B;AAOvCC,IAAAA,MAAM,EAAE,KAP+B;AAQvCC,IAAAA,MAAM,EAAE,CAAE,OAAF,EAAW,eAAX,EAA4B,SAA5B,EAAwC,OAAxC,EAAkD,UAAlD,EAA8D,OAA9D,EAAuE,UAAvE,CAR+B;AASvCC,IAAAA,YAAY,EAAE;AATyB,GAAD,CAFtB;AAAA,MAEbC,SAFa;AAAA,MAEFC,YAFE;;AAAA,mBAaMlB,QAAQ,CAAC,EAAD,CAbd;AAAA,MAabmB,KAba;AAAA,MAaNC,QAbM;;AAcpBrB,EAAAA,SAAS,CAAC,YAAI;AACVQ,IAAAA,WAAW,CAACc,SAAZ,CAAsBC,QAAtB,CAA+BL,SAA/B,EAA0CM,IAA1C,CAA+C,UAAAC,GAAG,EAAE;AAEhDJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASN,KAAV,CAAR;AACAD,MAAAA,YAAY,mBACLD,SADK;AAERP,QAAAA,UAAU,EAAEc,GAAG,CAACC,IAAJ,CAASC;AAFb,SAAZ;AAIH,KAPD;AAQH,GATQ,EASP,EATO,CAAT;AAWA3B,EAAAA,SAAS,CAAC,YAAI;AACV4B,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,MAAMuB,WAAW,GAAGV,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI,EAAE;AAChC,WACI,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,MAAA,KAAK,EAAED;AAApC,MADJ;AAGH,GAJmB,CAApB;AAMA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKF,WADL,CADJ,EAII,MAAC,UAAD,eAAgBvB,KAAhB;AAAuB,IAAA,SAAS,EAAEW,SAAlC;AAA6C,IAAA,YAAY,EAAEC;AAA3D,KAJJ,CADJ;AAQH,CA1CD;;AA4CAb,MAAM,CAAC4B,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT,EAAeC,GAAf,QAAeA,GAAf;AACf5B,UAAAA,WADe,GACDN,UAAU,CAACC,UAAD,CADT;AAEfkC,UAAAA,IAFe,GAER;AACTA,YAAAA,IAAI,EAAC;AADI,WAFQ;AAAA,2CAKd;AAAEF,YAAAA,KAAK,EAALA,KAAF;AAAQC,YAAAA,GAAG,EAAHA,GAAR;AAAY5B,YAAAA,WAAW,EAAXA,WAAZ;AAAwB6B,YAAAA,IAAI,EAAJA;AAAxB,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAOA,eAAe/B,MAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport './Videos.scss';\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport VideoElement from \"../VideoElement/VideoElement\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nconst Videos = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [postsData, setPostsData] = useState({\r\n        pageNo: 1,\r\n        size: 12,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality' , 'likes' , 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(()=>{\r\n        contextData.functions.getPosts(postsData).then(res=>{\r\n\r\n            setPosts(res.data.posts)\r\n            setPostsData({\r\n                ...postsData,\r\n                totalPosts: res.data.totalCount\r\n            })\r\n        })\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(props )\r\n    },[ ]);\r\n    const renderPosts = posts.map(post=>{\r\n        return(\r\n            <VideoElement key={post._id} state={post}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='Videos'>\r\n            <div className='videoContent'>\r\n                {renderPosts}\r\n            </div>\r\n            <Pagination {...props} postsData={postsData} setPostsData={setPostsData}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nVideos.getInitialProps = async ({ query,ctx }) => {\r\n    const contextData = useContext(AppContext);\r\n    const test = {\r\n        test:'test'\r\n    }\r\n    return { query,ctx,contextData,test}\r\n};\r\nexport default Videos;"]},"metadata":{},"sourceType":"module"}