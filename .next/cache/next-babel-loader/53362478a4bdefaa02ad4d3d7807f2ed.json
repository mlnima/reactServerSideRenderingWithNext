{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nvar Navigation = function Navigation(props) {\n  var contextData = useContext(AppContext);\n  var navigation = useRef(null);\n  var navigationMobileBtn = useRef(null);\n\n  var _useState = useState({\n    isOpen: false,\n    items: []\n  }),\n      navigationData = _useState[0],\n      setNavigationData = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(function () {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n        navigationMobileBtn.current.style.transform = 'rotate(-90deg)';\n      } else {\n        navigation.current.style.display = 'none';\n        navigationMobileBtn.current.style.transform = 'rotate(0deg)';\n      }\n    }\n  }, [navigationData.isOpen]);\n  useEffect(function () {\n    setNavigationData(function (navigationData) {\n      return _objectSpread({}, navigationData, {\n        items: contextData.navigationData || []\n      });\n    });\n  }, [contextData.navigationData]);\n\n  var onNavigationMobileBtnClickHandler = function onNavigationMobileBtnClickHandler() {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  var renderNavigationItems = contextData.navigationData.map(function (item) {\n    return __jsx(Link, {\n      key: item.title,\n      href: item.url\n    }, __jsx(\"a\", null, item.title));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    ref: navigationMobileBtn,\n    className: \"navigationMobileBtn\",\n    onClick: function onClick() {\n      return onNavigationMobileBtnClickHandler();\n    }\n  }, \"   \", __jsx(\"img\", {\n    className: \"fontawesomeSvgMedium\",\n    src: BarsSvg,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\"\n  }, renderNavigationItems));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Navigation/Navigation.js"],"names":["React","useState","useRef","useEffect","useContext","Link","FA","AppContext","BarsSvg","Navigation","props","contextData","navigation","navigationMobileBtn","isOpen","items","navigationData","setNavigationData","window","innerWidth","current","style","display","transform","onNavigationMobileBtnClickHandler","renderNavigationItems","map","item","title","url"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,sDAApB,C,CAEA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACxB,MAAMC,WAAW,GAAGP,UAAU,CAACG,UAAD,CAA9B;AACA,MAAMK,UAAU,GAAGV,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMW,mBAAmB,GAAGX,MAAM,CAAC,IAAD,CAAlC;;AAHwB,kBAIsBD,QAAQ,CAAC;AACnDa,IAAAA,MAAM,EAAE,KAD2C;AAEnDC,IAAAA,KAAK,EAAE;AAF4C,GAAD,CAJ9B;AAAA,MAIhBC,cAJgB;AAAA,MAIAC,iBAJA;;AASxBd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIe,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AACzBF,MAAAA,iBAAiB,mBACVD,cADU;AAEbF,QAAAA,MAAM,EAAE;AAFK,SAAjB;AAKH,KAND,MAMO;AACHG,MAAAA,iBAAiB,mBACVD,cADU;AAEbF,QAAAA,MAAM,EAAE;AAFK,SAAjB;AAIH;AACJ,GAbQ,EAaN,EAbM,CAAT;AAcAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIS,UAAU,CAACQ,OAAf,EAAwB;AACpB,UAAIJ,cAAc,CAACF,MAAnB,EAA2B;AACvBF,QAAAA,UAAU,CAACQ,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AACAT,QAAAA,mBAAmB,CAACO,OAApB,CAA4BC,KAA5B,CAAkCE,SAAlC,GAA8C,gBAA9C;AACH,OAHD,MAGO;AACHX,QAAAA,UAAU,CAACQ,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AACAT,QAAAA,mBAAmB,CAACO,OAApB,CAA4BC,KAA5B,CAAkCE,SAAlC,GAA8C,cAA9C;AACH;AACJ;AACJ,GAVQ,EAUN,CAAEP,cAAc,CAACF,MAAjB,CAVM,CAAT;AAYAX,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,iBAAiB,CAAC,UAAAD,cAAc;AAAA,+BACzBA,cADyB;AAE5BD,QAAAA,KAAK,EAAEJ,WAAW,CAACK,cAAZ,IAA6B;AAFR;AAAA,KAAf,CAAjB;AAIH,GALQ,EAKN,CAAEL,WAAW,CAACK,cAAd,CALM,CAAT;;AAOA,MAAMQ,iCAAiC,GAAG,SAApCA,iCAAoC,GAAM;AAC5CR,IAAAA,cAAc,CAACF,MAAf,GAAwBG,iBAAiB,mBAAMD,cAAN;AAAsBF,MAAAA,MAAM,EAAE;AAA9B,OAAzC,GAAkFG,iBAAiB,mBAAMD,cAAN;AAAsBF,MAAAA,MAAM,EAAE;AAA9B,OAAnG;AACH,GAFD;;AAIA,MAAMW,qBAAqB,GAAGd,WAAW,CAACK,cAAZ,CAA2BU,GAA3B,CAA+B,UAAAC,IAAI,EAAE;AAC/D,WACI,MAAC,IAAD;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAjB;AAAwB,MAAA,IAAI,EAAED,IAAI,CAACE;AAAnC,OAAwC,iBAAIF,IAAI,CAACC,KAAT,CAAxC,CADJ;AAGH,GAJ6B,CAA9B;AAOA,SACI,4BACI;AAAQ,IAAA,GAAG,EAAEf,mBAAb;AAAkC,IAAA,SAAS,EAAC,qBAA5C;AAAkE,IAAA,OAAO,EAAG;AAAA,aAAMW,iCAAiC,EAAvC;AAAA;AAA5E,YAA2H;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,GAAG,EAAGhB,OAA5C;AAAsD,IAAA,GAAG,EAAC;AAA1D,IAA3H,CADJ,EAEI;AAAK,IAAA,GAAG,EAAGI,UAAX;AAAwB,IAAA,SAAS,EAAC;AAAlC,KACKa,qBADL,CAFJ,CADJ;AAQH,CA7DD;;AA+DA,eAAehB,UAAf","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'\r\n\r\n// import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\r\n\r\nconst Navigation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const navigation = useRef(null)\r\n    const navigationMobileBtn = useRef(null)\r\n    const [ navigationData, setNavigationData ] = useState({\r\n        isOpen: false,\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 768) {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: false\r\n            });\r\n\r\n        } else {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: true\r\n            })\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (navigation.current) {\r\n            if (navigationData.isOpen) {\r\n                navigation.current.style.display = 'flex'\r\n                navigationMobileBtn.current.style.transform = 'rotate(-90deg)'\r\n            } else {\r\n                navigation.current.style.display = 'none'\r\n                navigationMobileBtn.current.style.transform = 'rotate(0deg)'\r\n            }\r\n        }\r\n    }, [ navigationData.isOpen ]);\r\n\r\n    useEffect(() => {\r\n        setNavigationData(navigationData=>({\r\n            ...navigationData,\r\n            items: contextData.navigationData ||[]\r\n        }))\r\n    }, [ contextData.navigationData ]);\r\n\r\n    const onNavigationMobileBtnClickHandler = () => {\r\n        navigationData.isOpen ? setNavigationData({ ...navigationData, isOpen: false }) : setNavigationData({ ...navigationData, isOpen: true })\r\n    };\r\n\r\n    const renderNavigationItems = contextData.navigationData.map(item=>{\r\n        return(\r\n            <Link  key={item.title} href={item.url}><a>{item.title}</a></Link>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <button ref={navigationMobileBtn} className='navigationMobileBtn' onClick={ () => onNavigationMobileBtnClickHandler() }>   <img className='fontawesomeSvgMedium' src={ BarsSvg } alt=\"\"/></button>\r\n            <div ref={ navigation } className='Navigation'>\r\n                {renderNavigationItems}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}