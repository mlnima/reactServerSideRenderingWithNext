{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport { getMultipleSetting } from '../_variables/ajaxVariables';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport { getAbsolutePath } from '../_variables/_variables';\n\nvar Error = function Error(props) {\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"p\", null, props.statusCode ? \"An error \".concat(props.statusCode, \" occurred on server\") : 'An error occurred on client'));\n};\n\nError.getInitialProps = function _callee(_ref) {\n  var req, res, err, domainName, settings, settingsData, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req, res = _ref.res, err = _ref.err;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getMultipleSetting({\n            settings: ['identity', 'navigation', 'design']\n          }, true, domainName));\n\n        case 11:\n          settingsData = _context.sent;\n          settings = settingsData.data.settings ? settingsData.data.settings : [];\n          statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode,\n            settings: settings\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Error;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/_error.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","SiteSettingSetter","getAbsolutePath","Error","props","console","log","statusCode","getInitialProps","req","res","err","domainName","settings","settingsData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,OAAOC,iBAAP,MAA8B,8DAA9B;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnBT,EAAAA,SAAS,CAAC,YAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT;AAGA,SACI,MAAC,SAAD,QAEI,iBACMA,KAAK,CAACG,UAAN,sBACiBH,KAAK,CAACG,UADvB,2BAEI,6BAHV,CAFJ,CADJ;AAUH,CAdD;;AAgBAJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT,EAAcC,GAAd,QAAcA,GAAd,EAAmBC,GAAnB,QAAmBA,GAAnB;;AAAA,eACDF,GADC;AAAA;AAAA;AAAA;;AAAA;AAAA,2CACWP,eAAe,CAACO,GAAD,CAD1B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wBACkC,EADlC;;AAAA;AACdG,UAAAA,UADc;AAAA;AAAA,2CAGOZ,kBAAkB,CAAC;AAAEa,YAAAA,QAAQ,EAAE,CAAE,UAAF,EAAc,YAAd,EAA4B,QAA5B;AAAZ,WAAD,EAAuD,IAAvD,EAA6DD,UAA7D,CAHzB;;AAAA;AAGdE,UAAAA,YAHc;AAIpBD,UAAAA,QAAQ,GAAGC,YAAY,CAACC,IAAb,CAAkBF,QAAlB,GAA6BC,YAAY,CAACC,IAAb,CAAkBF,QAA/C,GAA0D,EAArE;AACMN,UAAAA,UALc,GAKDG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoBI,GAAG,GAAGA,GAAG,CAACJ,UAAP,GAAoB,GAL7C;AAAA,2CAOb;AAAEA,YAAAA,UAAU,EAAVA,UAAF;AAAcM,YAAAA,QAAQ,EAARA;AAAd,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeV,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../components/layouts/AppLayout'\r\nimport { getMultipleSetting } from '../_variables/ajaxVariables'\r\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport { getAbsolutePath } from '../_variables/_variables'\r\n\r\nconst Error = props => {\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n    return (\r\n        <AppLayout>\r\n            {/*<SiteSettingSetter { ...props }/>*/ }\r\n            <p>\r\n                { props.statusCode\r\n                    ? `An error ${ props.statusCode } occurred on server`\r\n                    : 'An error occurred on client' }\r\n            </p>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nError.getInitialProps = async ({ req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    const statusCode = res ? res.statusCode : err ? err.statusCode : 404\r\n\r\n    return { statusCode, settings }\r\n}\r\n\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}