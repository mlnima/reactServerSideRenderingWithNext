{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { saveCustomStyle, getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nconst design = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: colors,\n    1: setColors\n  } = useState({\n    //body\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    bodyTextColor: props.design.bodyTextColor || '#fff',\n    //Logo\n    textLogoColor: props.design.textLogoColor || '#fff',\n    textLogoSize: props.design.textLogoSize || '40px',\n    headLineColor: props.design.headLineColor || '#fff',\n    headLineSize: props.design.headLineSize || '10px',\n    //mobile theme\n    themeColor: props.design.themeColor || '#fff',\n    //top bar\n    topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    topBarTextColor: props.design.topBarTextColor || '#fff',\n    //header\n    headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    headerTextColor: props.design.headerTextColor || '#fff',\n    //navigation\n    navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    navigationTextColor: props.design.navigationTextColor || '#fff',\n    //footer\n    footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\n    footerTextColor: props.design.footerTextColor || '#fff',\n    //widgets\n    widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\n    widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\n    widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\n    widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\n    widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\n    widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\n    widgetBodyBorder: props.design.widgetBodyBorder || 'none',\n    //************Post Page***************\n    //comments\n    commentsAuthorTextColor: props.design.commentsAuthorTextColor || '#0085ba',\n    commentsDateTextColor: props.design.commentsDateTextColor || '#FF3565',\n    commentsBodyTextColor: props.design.commentsBodyTextColor || '#fff',\n    commentsBackgroundColor: props.design.commentsBackgroundColor || 'transparent'\n  });\n  const {\n    0: customStyle,\n    1: setCustomStyle\n  } = useState('');\n  useEffect(() => {\n    console.log(props);\n\n    if (props.customStyles.data) {\n      setCustomStyle(props.customStyles.data);\n    }\n  }, [props]);\n  useEffect(() => {\n    console.log(customStyle);\n  }, [customStyle]);\n\n  const onChangeHandler = e => {\n    setColors(_objectSpread({}, colors, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    updateSetting('design', _objectSpread({}, colors)).then(() => {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  const renderColorsFields = Object.keys(colors).map(element => {\n    return __jsx(\"div\", {\n      key: element,\n      className: \"adminDesignSection\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItems\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItem\"\n    }, __jsx(\"p\", {\n      className: \"adminDesignSectionItemTitle\"\n    }, element.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n      name: element,\n      value: colors[element],\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"div\", {\n      className: \"previewColor\",\n      style: {\n        backgroundColor: colors[element]\n      }\n    }))));\n  });\n\n  const onCustomStyleSaveHandler = e => {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    saveCustomStyle(customStyle).then(() => {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  const onCustomStyleChangeHandler = e => {\n    setCustomStyle(e.target.value);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: e => onSubmitHandler(e)\n  }, __jsx(\"div\", {\n    className: \"colorsContent\"\n  }, renderColorsFields), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Colors\")), __jsx(\"form\", {\n    className: \"customStyle\",\n    onSubmit: e => onCustomStyleSaveHandler(e)\n  }, __jsx(\"textarea\", {\n    value: customStyle,\n    onChange: e => onCustomStyleChangeHandler(e)\n  }), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Custom Style\")));\n};\n\ndesign.getInitialProps = async ({\n  req\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let design;\n  let customStyles;\n  const designData = await getSetting('design', false, domainName);\n  const customStylesData = await getSetting('customStyle', false, domainName);\n  design = designData.data.setting ? designData.data.setting.data : {};\n  customStyles = customStylesData.data.setting ? customStylesData.data.setting : {};\n  return {\n    design,\n    customStyles\n  };\n};\n\nexport default design;","map":null,"metadata":{},"sourceType":"module"}