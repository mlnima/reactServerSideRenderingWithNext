{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport withRouter from \"next/dist/client/with-router\";\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\nimport Head from \"next/head\";\nimport { getSetting, getWidgetsWithData } from \"../../_variables/ajaxVariables\";\nimport { AppContext } from \"../../context/AppContext\";\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport SideBar from '../../components/includes/Sidebar/Sidebar';\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom';\n\nconst Post = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  useEffect(() => {\n    console.log(props);\n\n    if (props.identity.postPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n\n  const RenderMeta = () => {\n    if (props.post.title) {\n      return __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n        name: \"description\",\n        content: props.post.description\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: [...props.post.tags, ...props.post.categories, ...props.post.actors]\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: props.post.title\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: props.post.videoEmbedCode\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: props.post.mainThumbnail\n      }));\n    } else return null;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(RenderMeta, null), __jsx(\"div\", {\n    className: props.identity.postPageSidebar ? 'post withSidebar' : 'post withOutSidebar'\n  }, __jsx(\"div\", {\n    style: state.style,\n    className: \"main\"\n  }, __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode,\n    meta: {\n      description: props.post.description,\n      title: props.post.title,\n      duration: props.post.duration,\n      thumbnailUrl: props.post.mainThumbnail,\n      embedURL: props.post.videoEmbedCode,\n      uploadDate: props.post.lastModify\n    }\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories,\n    id: props.post._id,\n    likes: props.post.likes,\n    disLikes: props.post.disLikes,\n    views: props.post.views,\n    videoEmbedCode: props.post.videoEmbedCode\n  }), __jsx(CommentFrom, null)), __jsx(SideBar, {\n    isActive: props.identity.postPageSidebar,\n    widgets: props.widgets,\n    position: \"postPageSidebar\"\n  }))));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let post;\n  let navigation;\n  let identity;\n  let widgets;\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n  const widgetsData = await getWidgetsWithData('postPageSidebar');\n  const postBody = {\n    postTitle: query.postTitle\n  };\n  const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\n  post = postData.data.post;\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  return {\n    post,\n    query,\n    navigation,\n    identity,\n    widgets\n  };\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getPost","Iframe","PostInfo","withRouter","PostSidebar","Head","getSetting","getWidgetsWithData","AppContext","SiteSettingSetter","SideBar","CommentFrom","Post","props","contextData","state","setState","style","console","log","identity","postPageSidebar","gridArea","RenderMeta","post","title","description","tags","categories","actors","postType","videoEmbedCode","mainThumbnail","duration","thumbnailUrl","embedURL","uploadDate","lastModify","_id","likes","disLikes","views","widgets","getInitialProps","pathname","query","req","res","err","navigation","identityData","navigationData","widgetsData","postBody","postTitle","postData","data","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\r\nimport Head from \"next/head\";\r\nimport { getSetting, getWidgetsWithData } from \"../../_variables/ajaxVariables\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport SideBar from '../../components/includes/Sidebar/Sidebar'\r\nimport CommentFrom from '../../components/includes/Post/CommentFrom/CommentFrom'\r\n\r\nconst Post = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [state,setState]=useState({\r\n        style:{}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        if (props.identity.postPageSidebar){\r\n            setState({\r\n                style: {\r\n                    gridArea:'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    const RenderMeta = () => {\r\n        if (props.post.title) {\r\n            return (\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories, ...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/ }\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <RenderMeta/>\r\n                <div className={ props.identity.postPageSidebar ? 'post withSidebar':'post withOutSidebar'  }>\r\n\r\n                    <div  style={state.style} className=\"main\">\r\n                        <Iframe iframeCode={ props.post.videoEmbedCode } meta={ {\r\n                            description: props.post.description,\r\n                            title: props.post.title,\r\n                            duration: props.post.duration,\r\n                            thumbnailUrl: props.post.mainThumbnail,\r\n                            embedURL: props.post.videoEmbedCode,\r\n                            uploadDate: props.post.lastModify,\r\n                        } }/>\r\n\r\n                        <PostInfo\r\n                            title={ props.post.title }\r\n                            description={ props.post.description }\r\n                            tags={ props.post.tags }\r\n                            actors={ props.post.actors }\r\n                            categories={ props.post.categories }\r\n                            id={ props.post._id }\r\n                            likes={ props.post.likes }\r\n                            disLikes={ props.post.disLikes }\r\n                            views={ props.post.views }\r\n                            videoEmbedCode={ props.post.videoEmbedCode }\r\n                        />\r\n                        <CommentFrom/>\r\n                    </div>\r\n\r\n                    {/*<PostSidebar isActive={props.identity.postPageSidebar}/>*/}\r\n                    <SideBar isActive={props.identity.postPageSidebar} widgets={props.widgets} position='postPageSidebar' />\r\n                </div>\r\n\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('postPageSidebar')\r\n    const postBody = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\r\n    post = postData.data.post\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    return { post, query, navigation, identity,widgets }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}