{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport jwt from 'jsonwebtoken';\nimport axios from \"axios\";\nexport const AppContext = React.createContext();\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({});\n  const {\n    0: settings,\n    1: dispatchSettings\n  } = useState({\n    adminPanelSideBar: false,\n    test: false\n  });\n  const {\n    0: userData,\n    1: dispatchUserData\n  } = useState({\n    username: 'Guest'\n  });\n  const {\n    0: functions,\n    1: dispatchFunctions\n  } = useState({\n    getAndSetUserInfo: () => {}\n  });\n  useEffect(() => {\n    if (localStorage.wt) {\n      useEffect(() => {\n        if (localStorage.wt) {\n          functions.getUserInfo().then(res => {\n            functions.setUserInfo(res);\n            state.functions.requestForGoingOnline();\n            props.history.push('/chat');\n          }).catch(() => {\n            localStorage.removeItem('wt');\n\n            if (props.location.pathname === '/chat') {\n              props.history.push('/');\n            }\n          });\n        } else {\n          if (props.location.pathname === '/chat') {\n            props.history.push('/');\n          }\n        }\n      }, [props.location.pathname]);\n    }\n  }, []);\n  return __jsx(\"div\", null, __jsx(AppContext.Provider, {\n    value: {\n      state,\n      dispatchState,\n      settings,\n      dispatchSettings,\n      userData,\n      dispatchUserData,\n      functions\n    }\n  }, props.children));\n};\n\nexport const AppProviderWithRouter = AppProvider;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/context/AppContext.js"],"names":["React","useEffect","useRef","useState","jwtDecode","jwt","axios","AppContext","createContext","AppProvider","props","state","dispatchState","settings","dispatchSettings","adminPanelSideBar","test","userData","dispatchUserData","username","functions","dispatchFunctions","getAndSetUserInfo","localStorage","wt","getUserInfo","then","res","setUserInfo","requestForGoingOnline","history","push","catch","removeItem","location","pathname","children","AppProviderWithRouter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGP,KAAK,CAACQ,aAAN,EAAnB;;AAEP,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAAA,OAAEU,QAAF;AAAA,OAAYC;AAAZ,MAAiCX,QAAQ,CAAC;AAC5CY,IAAAA,iBAAiB,EAAE,KADyB;AAE5CC,IAAAA,IAAI,EAAE;AAFsC,GAAD,CAA/C;AAIA,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAAiCf,QAAQ,CAAC;AAC5CgB,IAAAA,QAAQ,EAAE;AADkC,GAAD,CAA/C;AAGA,QAAM;AAAA,OAAEC,SAAF;AAAA,OAAaC;AAAb,MAAmClB,QAAQ,CAAC;AAC9CmB,IAAAA,iBAAiB,EAAC,MAAI,CAErB;AAH6C,GAAD,CAAjD;AAMArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIsB,YAAY,CAACC,EAAjB,EAAoB;AAChBvB,MAAAA,SAAS,CAAC,MAAM;AACZ,YAAIsB,YAAY,CAACC,EAAjB,EAAqB;AACjBJ,UAAAA,SAAS,CAACK,WAAV,GAAwBC,IAAxB,CAA6BC,GAAG,IAAI;AAChCP,YAAAA,SAAS,CAACQ,WAAV,CAAsBD,GAAtB;AACAhB,YAAAA,KAAK,CAACS,SAAN,CAAgBS,qBAAhB;AACAnB,YAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACH,WAJD,EAIGC,KAJH,CAIS,MAAM;AACXT,YAAAA,YAAY,CAACU,UAAb,CAAwB,IAAxB;;AACA,gBAAIvB,KAAK,CAACwB,QAAN,CAAeC,QAAf,KAA4B,OAAhC,EAAyC;AACrCzB,cAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;AACJ,WATD;AAUH,SAXD,MAWM;AACF,cAAIrB,KAAK,CAACwB,QAAN,CAAeC,QAAf,KAA4B,OAAhC,EAAyC;AACrCzB,YAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;AACJ;AACJ,OAjBQ,EAiBN,CAACrB,KAAK,CAACwB,QAAN,CAAeC,QAAhB,CAjBM,CAAT;AAkBH;AACJ,GArBQ,EAqBP,EArBO,CAAT;AA4BA,SACI,mBACI,MAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAG;AACJxB,MAAAA,KADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,gBAJI;AAKJG,MAAAA,QALI;AAMJC,MAAAA,gBANI;AAOJE,MAAAA;AAPI;AADZ,KAWMV,KAAK,CAAC0B,QAXZ,CADJ,CADJ;AAiBH,CA7DD;;AA+DA,OAAO,MAAMC,qBAAqB,GAAG5B,WAA9B","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from \"axios\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = props => {\r\n\r\n    const [ state, dispatchState ] = useState({});\r\n    const [ settings, dispatchSettings ] = useState({\r\n        adminPanelSideBar: false,\r\n        test: false\r\n    });\r\n    const [ userData, dispatchUserData ] = useState({\r\n        username: 'Guest'\r\n    });\r\n    const [ functions, dispatchFunctions ] = useState({\r\n        getAndSetUserInfo:()=>{\r\n\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if (localStorage.wt){\r\n            useEffect(() => {\r\n                if (localStorage.wt) {\r\n                    functions.getUserInfo().then(res => {\r\n                        functions.setUserInfo(res)\r\n                        state.functions.requestForGoingOnline();\r\n                        props.history.push('/chat')\r\n                    }).catch(() => {\r\n                        localStorage.removeItem('wt');\r\n                        if (props.location.pathname === '/chat' ){\r\n                            props.history.push('/')\r\n                        }\r\n                    })\r\n                }else {\r\n                    if (props.location.pathname === '/chat' ){\r\n                        props.history.push('/')\r\n                    }\r\n                }\r\n            }, [props.location.pathname]);\r\n        }\r\n    },[ ]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider\r\n                value={ {\r\n                    state,\r\n                    dispatchState,\r\n                    settings,\r\n                    dispatchSettings,\r\n                    userData,\r\n                    dispatchUserData,\r\n                    functions\r\n                } }>\r\n\r\n                { props.children }\r\n            </AppContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AppProviderWithRouter = AppProvider;"]},"metadata":{},"sourceType":"module"}