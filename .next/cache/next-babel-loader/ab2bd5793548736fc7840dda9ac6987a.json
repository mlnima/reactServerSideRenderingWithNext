{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nexport var updateSetting = function updateSetting(type, data) {\n  var body;\n  return _regeneratorRuntime.async(function updateSetting$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          body = {\n            token: localStorage.wt,\n            type: type,\n            data: data\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + '/api/v1/settings/update', body));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getSetting = function getSetting(type, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getSetting$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          body = {\n            type: type\n          };\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + \"/api/v1/settings/get?type=\".concat(type), body));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var addNewWidget = function addNewWidget(data) {\n  var body;\n  return _regeneratorRuntime.async(function addNewWidget$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          body = {\n            data: data,\n            token: localStorage.wt\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + '/api/v1/settings/addWidget', body));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var getWidgets = function getWidgets(position, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getWidgets$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          body = {\n            position: position\n          };\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + '/api/v1/settings/getWidget', body));\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var getMultipleWidgetWithData = function getMultipleWidgetWithData(widgets, cache, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getMultipleWidgetWithData$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          body = _objectSpread({}, widgets);\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + '/api/v1/settings/getMultipleWidgetWithData', body));\n\n        case 3:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var getMultipleSetting = function getMultipleSetting(settings, cache, domainName) {\n  var isCache, body;\n  return _regeneratorRuntime.async(function getMultipleSetting$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          isCache = cache ? '' : \"?cache=\".concat(Date.now());\n          body = _objectSpread({}, settings);\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(axios.post(domainName + \"/api/v1/settings/getMultiple\", body));\n\n        case 4:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var getWidgetsWithData = function getWidgetsWithData(position, domainName) {\n  var body;\n  return _regeneratorRuntime.async(function getWidgetsWithData$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          body = {\n            position: position\n          };\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(domainName + '/api/v1/settings/getWidgetsWithData', body));\n\n        case 3:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\nexport var updateWidgets = function updateWidgets(id, data) {\n  var body;\n  return _regeneratorRuntime.async(function updateWidgets$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          body = {\n            id: id,\n            data: data,\n            token: localStorage.wt\n          };\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + '/api/v1/settings/updateWidget', body));\n\n        case 3:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 4:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};\nexport var deleteWidgets = function deleteWidgets(id) {\n  var body;\n  return _regeneratorRuntime.async(function deleteWidgets$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          body = {\n            id: id,\n            token: localStorage.wt\n          };\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(window.location.origin + '/api/v1/settings/deleteWidget', body));\n\n        case 3:\n          return _context9.abrupt(\"return\", _context9.sent);\n\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}