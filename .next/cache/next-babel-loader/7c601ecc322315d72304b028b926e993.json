{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport TitleDescription from \"../../../components/adminIncludes/PostComponents/TitleDescription/TitleDescription\";\nimport ActionOnPost from \"../../../components/adminIncludes/PostComponents/ActionOnPost/ActionOnPost\";\nimport DropDownWidget from \"../../../components/adminIncludes/PostComponents/DropDownWidget/DropDownWidget\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport Format from \"../../../components/adminIncludes/PostComponents/Format/Format\";\nimport PostCategoriesTagsActors from \"../../../components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors\";\nimport VideoInformation from \"../../../components/adminIncludes/PostComponents/VideoInformation/VideoInformation\";\nimport withRouter from \"next/dist/client/with-router\"; // test query  http://localhost:3000/admin/post?id=123456\n\nvar Index = function Index(props) {\n  var contextData = useContext(AppContext);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, _defineProperty({}, e.target.name, e.target.value)));\n  }; // useEffect(() => {\n  //     console.log(contextData.editingPostData)\n  // }, [ contextData.editingPostData ]);\n\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.query.id) {\n      contextData.functions.getPost(props.query.id).then(function (post) {\n        contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, post.data.post));\n      });\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"Post\"\n  }, __jsx(TitleDescription, {\n    onChangeHandler: onChangeHandler\n  }), __jsx(\"div\", {\n    className: \"side\"\n  }, __jsx(DropDownWidget, {\n    component: ActionOnPost,\n    title: \"action\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    component: Format,\n    title: \"Format\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query[\"new\"] === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"categories\",\n    title: \"Post Category\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query[\"new\"] === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"tags\",\n    title: \"Post Tags\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query[\"new\"] === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"actors\",\n    title: \"Post Actors\",\n    onChangeHandler: onChangeHandler\n  })), __jsx(DropDownWidget, {\n    component: VideoInformation,\n    title: \"Video Information\",\n    onChangeHandler: onChangeHandler\n  }))));\n};\n\nIndex.getInitialProps = function _callee(_ref) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          return _context.abrupt(\"return\", {\n            query: query,\n            user: {\n              name: 'nima'\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Index);","map":null,"metadata":{},"sourceType":"module"}