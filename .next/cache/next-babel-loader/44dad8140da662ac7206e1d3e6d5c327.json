{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../../context/AppContext';\n\nconst CommentsRenderer = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    authorStyle: {},\n    dateStyle: {},\n    bodyStyle: {},\n    style: {}\n  });\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      authorStyle: {\n        color: contextData.siteDesign.commentsAuthorTextColor\n      },\n      dateStyle: {\n        color: contextData.siteDesign.commentsDateTextColor\n      },\n      bodyStyle: {\n        color: contextData.siteDesign.commentsBodyTextColor\n      },\n      style: {\n        backgroundColor: contextData.siteDesign.commentsBackgroundColor\n      }\n    }));\n  }, [props]);\n  const renderComments = props.comments.map(comment => {\n    return __jsx(\"div\", {\n      className: \"comments-item\"\n    }, __jsx(\"p\", {\n      className: \"comment-author\"\n    }, comment.author, \" says:\"), __jsx(\"p\", {\n      className: \"comment-date\"\n    }, comment.postedDate), __jsx(\"p\", {\n      className: \"comment-body\"\n    }, comment.body));\n  });\n  return __jsx(\"div\", {\n    className: \"comments\"\n  }, renderComments);\n};\n\nexport default CommentsRenderer;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/CommentsRenderer/CommentsRenderer.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","CommentsRenderer","props","contextData","state","setState","authorStyle","dateStyle","bodyStyle","style","color","siteDesign","commentsAuthorTextColor","commentsDateTextColor","commentsBodyTextColor","backgroundColor","commentsBackgroundColor","renderComments","comments","map","comment","author","postedDate","body"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEI,KAAF;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC;AACjCS,IAAAA,WAAW,EAAC,EADqB;AAEjCC,IAAAA,SAAS,EAAC,EAFuB;AAGjCC,IAAAA,SAAS,EAAC,EAHuB;AAIjCC,IAAAA,KAAK,EAAC;AAJ2B,GAAD,CAApC;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,mBACDD,KADC;AAEJE,MAAAA,WAAW,EAAC;AACRI,QAAAA,KAAK,EAACP,WAAW,CAACQ,UAAZ,CAAuBC;AADrB,OAFR;AAKJL,MAAAA,SAAS,EAAC;AACNG,QAAAA,KAAK,EAACP,WAAW,CAACQ,UAAZ,CAAuBE;AADvB,OALN;AAQJL,MAAAA,SAAS,EAAC;AACNE,QAAAA,KAAK,EAACP,WAAW,CAACQ,UAAZ,CAAuBG;AADvB,OARN;AAWJL,MAAAA,KAAK,EAAC;AACFM,QAAAA,eAAe,EAACZ,WAAW,CAACQ,UAAZ,CAAuBK;AADrC;AAXF,OAAR;AAeH,GAhBQ,EAgBN,CAACd,KAAD,CAhBM,CAAT;AAkBA,QAAMe,cAAc,GAAEf,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAE;AAC9C,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,OAA+BA,OAAO,CAACC,MAAvC,WADJ,EAEI;AAAG,MAAA,SAAS,EAAC;AAAb,OAA6BD,OAAO,CAACE,UAArC,CAFJ,EAGI;AAAG,MAAA,SAAS,EAAC;AAAb,OAA6BF,OAAO,CAACG,IAArC,CAHJ,CADJ;AAOH,GARqB,CAAtB;AAUA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKN,cADL,CADJ;AAKH,CA5CD;;AA6CA,eAAehB,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst CommentsRenderer = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        authorStyle:{},\r\n        dateStyle:{},\r\n        bodyStyle:{},\r\n        style:{\r\n\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            authorStyle:{\r\n                color:contextData.siteDesign.commentsAuthorTextColor\r\n            },\r\n            dateStyle:{\r\n                color:contextData.siteDesign.commentsDateTextColor\r\n            },\r\n            bodyStyle:{\r\n                color:contextData.siteDesign.commentsBodyTextColor\r\n            },\r\n            style:{\r\n                backgroundColor:contextData.siteDesign.commentsBackgroundColor\r\n            }\r\n        })\r\n    }, [props]);\r\n\r\n    const renderComments= props.comments.map(comment=>{\r\n        return(\r\n            <div className='comments-item'>\r\n                <p className='comment-author'>{comment.author} says:</p>\r\n                <p className='comment-date'>{comment.postedDate}</p>\r\n                <p className='comment-body'>{comment.body}</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='comments'>\r\n            {renderComments}\r\n        </div>\r\n    );\r\n};\r\nexport default CommentsRenderer;\r\n"]},"metadata":{},"sourceType":"module"}