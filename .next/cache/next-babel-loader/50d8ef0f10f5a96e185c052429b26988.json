{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport withRouter from 'next/dist/client/with-router';\nimport SideBar from '../../../components/includes/Sidebar/Sidebar';\n\nvar actors = function actors(props) {\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var renderActors = props.actorsSource.metas.map(function (meta) {\n    return __jsx(ActorElement, {\n      key: props.actorsSource.metas.indexOf(meta),\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  useEffect(function () {\n    console.log(props);\n\n    if (props.identity.actorsPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.actorsPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"actors\"\n  }, renderActors), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getActorsData.pageNo,\n    totalCount: props.actorsSource.totalCount,\n    size: props.getActorsData.size,\n    maxPage: Math.ceil(parseInt(props.actorsSource.totalCount) / parseInt(props.getActorsData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(SideBar, {\n    isActive: props.identity.actorsPageSidebar,\n    widgets: props.widgets,\n    position: \"actorsPageSidebar\"\n  }))));\n};\n\nactors.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, actorsSource, widgets, identityData, navigationData, widgetsData, getActorsData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('actorsPageSidebar'));\n\n        case 9:\n          widgetsData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          getActorsData = {\n            type: 'actor',\n            searchForImageIn: 'actors',\n            pageNo: parseInt(query.page) || 1,\n            size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(getMeta(getActorsData));\n\n        case 16:\n          categoriesData = _context.sent;\n          actorsSource = categoriesData.data ? categoriesData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            actorsSource: actorsSource,\n            getActorsData: getActorsData,\n            pathname: pathname,\n            widgets: widgets\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(actors);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/actors/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","AppContext","TagElement","getSetting","getWidgetsWithData","getMeta","CategoryElement","ActorElement","SiteSettingSetter","PaginationComponent","withRouter","SideBar","actors","props","style","state","setState","renderActors","actorsSource","metas","map","meta","indexOf","imageUrl","noImageUrl","name","count","console","log","identity","actorsPageSidebar","gridArea","getActorsData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","widgets","getInitialProps","req","res","err","identityData","navigationData","widgetsData","data","setting","navigation","type","searchForImageIn","page","tagsCountPerPage","sort","categoriesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport SideBar from '../../../components/includes/Sidebar/Sidebar'\r\nconst actors = props => {\r\n    const [state,setState]=useState({\r\n        style:{}\r\n    })\r\n    const renderActors = props.actorsSource.metas.map(meta => {\r\n        return (\r\n            <ActorElement key={ props.actorsSource.metas.indexOf(meta) } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        if (props.identity.actorsPageSidebar){\r\n            setState({\r\n                style: {\r\n                    gridArea:'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [props]);\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div style={state.style} className={ props.identity.actorsPageSidebar ? 'content withSidebar':'content withOutSidebar'  } >\r\n                    <div>\r\n                        <div className='actors'>\r\n                            { renderActors }\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={props.getActorsData.pageNo }\r\n                            totalCount={ props.actorsSource.totalCount }\r\n                            size={ props.getActorsData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.actorsSource.totalCount) / parseInt(props.getActorsData.size))- 1 }\r\n                            queryData={props.query || props.router.query}\r\n                            pathnameData={props.pathname ||props.router.pathname }\r\n                        />\r\n                    </div>\r\n                    <SideBar isActive={props.identity.actorsPageSidebar} widgets={props.widgets} position='actorsPageSidebar'/>\r\n                </div>\r\n\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nactors.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let actorsSource ;\r\n    let widgets;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('actorsPageSidebar')\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    const getActorsData = {\r\n        type: 'actor',\r\n        searchForImageIn:'actors',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    const categoriesData = await getMeta(getActorsData)\r\n    actorsSource = categoriesData.data ? categoriesData.data : []\r\n\r\n    return { identity, navigation, query, actorsSource,getActorsData,pathname,widgets }\r\n}\r\nexport default withRouter(actors);\r\n"]},"metadata":{},"sourceType":"module"}