{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\n\nvar tags = function tags(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    metaData: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n  useEffect(function () {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(function (siteIdentity) {\n        return _objectSpread({}, siteIdentity, {}, props.identity);\n      });\n    } // if (props.tags.length){\n    //     setState({\n    //         ...state,\n    //         metaData: props.categories\n    //     })\n    // }else if (props.tags.length<1){\n    //     getMeta({\n    //         type: 'tag',\n    //         pageNo: 1,\n    //         size: 100\n    //     }).then(res=>{\n    //         console.log(res )\n    //         setState({\n    //             ...state,\n    //             metaData: res.data.meta\n    //         })\n    //     }).catch(err=>{\n    //         console.log( err)\n    //     })\n    // }\n\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"tags\"\n  }));\n};\n\ntags.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, tags, identityData, navigationData, tagsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          tags = [];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 4:\n          identityData = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 7:\n          navigationData = _context.sent;\n\n          if (!query.meta) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getMeta({\n            type: query.meta,\n            pageNo: 1,\n            size: 100\n          }));\n\n        case 11:\n          tagsData = _context.sent;\n          tags = tagsData.data.meta ? tagsData.data.meta : [];\n\n        case 13:\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            tags: tags\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default tags;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","AppContext","tags","props","contextData","metaData","state","setState","console","log","navigation","dispatchNavigationData","data","identity","dispatchSiteIdentity","siteIdentity","getInitialProps","pathname","query","req","res","err","identityData","navigationData","meta","type","pageNo","size","tagsData","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst tags = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData: []\r\n    });\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n        // if (props.tags.length){\r\n        //     setState({\r\n        //         ...state,\r\n        //         metaData: props.categories\r\n        //     })\r\n        // }else if (props.tags.length<1){\r\n        //     getMeta({\r\n        //         type: 'tag',\r\n        //         pageNo: 1,\r\n        //         size: 100\r\n        //     }).then(res=>{\r\n        //         console.log(res )\r\n        //         setState({\r\n        //             ...state,\r\n        //             metaData: res.data.meta\r\n        //         })\r\n        //     }).catch(err=>{\r\n        //         console.log( err)\r\n        //     })\r\n        // }\r\n    }, [ props ]);\r\n    return (\r\n        <AppLayout>\r\n            <div className='tags'>\r\n\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let tags = []\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n\r\n    if (query.meta) {\r\n        const tagsData = await getMeta({\r\n            type: query.meta,\r\n            pageNo: 1,\r\n            size: 100\r\n        })\r\n        tags = tagsData.data.meta ? tagsData.data.meta : []\r\n    }\r\n\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    return { identity, navigation, query, tags }\r\n}\r\nexport default tags;\r\n"]},"metadata":{},"sourceType":"module"}