{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport Filters from \"../../../components/adminIncludes/PostsComponents/Filters/Filters\";\nimport PostsDataTable from \"../../../components/adminIncludes/PostsComponents/PostsDataTable/PostsDataTable\";\nimport { getAbsolutePath } from '../../../_variables/_variables';\nimport { getPosts } from '../../../_variables/ajaxPostsVariables';\nimport Link from 'next/link';\nimport AppLayout from '../../../components/layouts/AppLayout';\n\nvar adminPosts = function adminPosts(props) {\n  // useEffect(() => {\n  //     console.log( props)\n  // }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(Link, {\n    href: \"/admin/post?new=1\"\n  }, __jsx(\"a\", {\n    className: \"newPostLinkAdminPanel\"\n  }, \"New Post\")), __jsx(\"div\", {\n    className: \"Posts\"\n  }, __jsx(Filters, props), __jsx(PostsDataTable, props))));\n};\n\nadminPosts.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, domainName, postsSource, getPostsData, postsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          getPostsData = {\n            size: parseInt(query.size) || 30,\n            pageNo: parseInt(query.page) || 1,\n            postType: query.type || 'all',\n            fields: ['author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories'],\n            keyword: query.keyword || '',\n            author: query.author || 'all',\n            actor: query.actor || 'all',\n            status: query.status || 'all',\n            tag: query.tag || 'all',\n            category: query.category || 'all',\n            sort: query.sort || 'latest'\n          };\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getPosts(getPostsData, false, domainName));\n\n        case 12:\n          postsData = _context.sent;\n          postsSource = postsData.data ? postsData.data : [];\n          return _context.abrupt(\"return\", {\n            query: query,\n            postsSource: postsSource,\n            getPostsData: getPostsData,\n            pathname: pathname\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default adminPosts;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/posts/index.js"],"names":["React","useEffect","AdminLayout","Filters","PostsDataTable","getAbsolutePath","getPosts","Link","AppLayout","adminPosts","props","getInitialProps","pathname","query","req","res","err","domainName","getPostsData","size","parseInt","pageNo","page","postType","type","fields","keyword","author","actor","status","tag","category","sort","postsData","postsSource","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,OAAP,MAAoB,mEAApB;AACA,OAAOC,cAAP,MAA2B,iFAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAExB;AACA;AACA;AAEA,SACI,4BACI,MAAC,WAAD,QACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAA+B;AAAG,IAAA,SAAS,EAAC;AAAb,gBAA/B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,OAAD,EAAaA,KAAb,CADJ,EAEI,MAAC,cAAD,EAAoBA,KAApB,CAFJ,CAFJ,CADJ,CADJ;AAWH,CAjBD;;AAmBAD,UAAU,CAACE,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;;AAAA,eACNF,GADM;AAAA;AAAA;AAAA;;AAAA;AAAA,2CACMT,eAAe,CAACS,GAAD,CADrB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAC6B,EAD7B;;AAAA;AACnBG,UAAAA,UADmB;AAGnBC,UAAAA,YAHmB,GAGJ;AACjBC,YAAAA,IAAI,EAAEC,QAAQ,CAACP,KAAK,CAACM,IAAP,CAAR,IAAyB,EADd;AAEjBE,YAAAA,MAAM,EAAED,QAAQ,CAACP,KAAK,CAACS,IAAP,CAAR,IAAwB,CAFf;AAGjBC,YAAAA,QAAQ,EAAEV,KAAK,CAACW,IAAN,IAAc,KAHP;AAIjBC,YAAAA,MAAM,EAAE,CAAE,QAAF,EAAY,OAAZ,EAAqB,eAArB,EAAsC,QAAtC,EAAgD,QAAhD,EAA0D,MAA1D,EAAkE,YAAlE,CAJS;AAKjBC,YAAAA,OAAO,EAAEb,KAAK,CAACa,OAAN,IAAiB,EALT;AAMjBC,YAAAA,MAAM,EAAEd,KAAK,CAACc,MAAN,IAAgB,KANP;AAOjBC,YAAAA,KAAK,EAAEf,KAAK,CAACe,KAAN,IAAe,KAPL;AAQjBC,YAAAA,MAAM,EAAEhB,KAAK,CAACgB,MAAN,IAAgB,KARP;AASjBC,YAAAA,GAAG,EAAEjB,KAAK,CAACiB,GAAN,IAAa,KATD;AAUjBC,YAAAA,QAAQ,EAAElB,KAAK,CAACkB,QAAN,IAAkB,KAVX;AAWjBC,YAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAAN,IAAc;AAXH,WAHI;AAAA;AAAA,2CAgBD1B,QAAQ,CAACY,YAAD,EAAe,KAAf,EAAsBD,UAAtB,CAhBP;;AAAA;AAgBnBgB,UAAAA,SAhBmB;AAiBzBC,UAAAA,WAAW,GAAGD,SAAS,CAACE,IAAV,GAAiBF,SAAS,CAACE,IAA3B,GAAkC,EAAhD;AAjByB,2CAmBlB;AAAEtB,YAAAA,KAAK,EAALA,KAAF;AAASqB,YAAAA,WAAW,EAAXA,WAAT;AAAsBhB,YAAAA,YAAY,EAAZA,YAAtB;AAAoCN,YAAAA,QAAQ,EAARA;AAApC,WAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAsBA,eAAeH,UAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport Filters from \"../../../components/adminIncludes/PostsComponents/Filters/Filters\";\r\nimport PostsDataTable from \"../../../components/adminIncludes/PostsComponents/PostsDataTable/PostsDataTable\";\r\nimport { getAbsolutePath } from '../../../_variables/_variables'\r\nimport { getPosts } from '../../../_variables/ajaxPostsVariables'\r\nimport Link from 'next/link'\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\n\r\nconst adminPosts = props => {\r\n\r\n    // useEffect(() => {\r\n    //     console.log( props)\r\n    // }, [props]);\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <Link href='/admin/post?new=1'><a className='newPostLinkAdminPanel'>New Post</a></Link>\r\n                <div className='Posts'>\r\n                    <Filters {...props}/>\r\n                    <PostsDataTable {...props}/>\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nadminPosts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    let postsSource;\r\n    const getPostsData = {\r\n        size: parseInt(query.size)  || 30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        postType: query.type || 'all',\r\n        fields: [ 'author', 'title', 'mainThumbnail', 'status', 'actors', 'tags', 'categories' ],\r\n        keyword: query.keyword || '',\r\n        author: query.author || 'all',\r\n        actor: query.actor || 'all',\r\n        status: query.status || 'all',\r\n        tag: query.tag || 'all',\r\n        category: query.category || 'all',\r\n        sort: query.sort || 'latest',\r\n    }\r\n    const postsData = await getPosts(getPostsData, false, domainName)\r\n    postsSource = postsData.data ? postsData.data : []\r\n\r\n    return { query, postsSource, getPostsData, pathname }\r\n}\r\n\r\nexport default adminPosts;"]},"metadata":{},"sourceType":"module"}