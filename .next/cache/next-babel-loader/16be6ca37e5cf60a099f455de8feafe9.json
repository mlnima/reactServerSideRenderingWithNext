{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './TopBar.scss';\nimport { AppContext } from \"../../../context/AppContext\";\nimport withRouter from \"next/dist/client/with-router\";\nimport FA from \"react-fontawesome\";\nimport AdminActionMenu from \"./AdminActionMenu/AdminActionMenu\"; // import { setSprCache } from \"next/dist/next-server/server/spr-cache\";\n\nconst TopBar = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({\n    AdminActionMenu: false\n  });\n\n  const AdminSideBarOpenCloseHandler = () => {\n    contextData.settings.adminPanelSideBar ? contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: false\n    })) : contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n      adminPanelSideBar: true\n    }));\n  };\n\n  const goToHomePage = () => {\n    props.router.push('/');\n    console.log(props.router);\n  };\n\n  const newAction = () => {\n    props.router.push('/admin/post');\n  };\n\n  const adminActionHandler = () => {\n    state.AdminActionMenu ? dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: false\n    })) : dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: true\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"adminTopBar\"\n  }, __jsx(\"div\", {\n    className: \"adminTopBarControl\"\n  }, __jsx(\"button\", {\n    className: \"adminSideBarMobileBtn adminTopBarItem\",\n    onClick: () => AdminSideBarOpenCloseHandler()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"bars\"\n  })), __jsx(\"button\", {\n    className: \"adminGoToHomePageBtn adminTopBarItem\",\n    onClick: () => goToHomePage()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"home\"\n  })), __jsx(\"button\", {\n    className: \"adminNewActionBtn adminTopBarItem\",\n    onClick: () => newAction()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"plus\"\n  }))), __jsx(\"button\", {\n    className: \"adminActionBtn adminTopBarItem\",\n    onClick: () => adminActionHandler()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"user\"\n  })), __jsx(AdminActionMenu, {\n    active: state.AdminActionMenu\n  })));\n};\n\nexport default withRouter(TopBar);","map":null,"metadata":{},"sourceType":"module"}