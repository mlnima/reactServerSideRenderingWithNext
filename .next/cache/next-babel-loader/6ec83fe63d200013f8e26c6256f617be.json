{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\n\nvar FilterDropDownActions = function FilterDropDownActions(props) {\n  var contextData = useContext(AppContext);\n  var bulkAction = useRef(null);\n  var typeToDisplay = useRef(null);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onFormatChangeHandler = function onFormatChangeHandler() {// if (bulkAction.current.value !== 'none') {\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         loading:true\n    //     });\n    //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\n    //        setData()\n    //     }).catch(err=>{\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading:false\n    //         })\n    //     })\n    // }\n  };\n\n  var changePostsTypeToDisplay = function changePostsTypeToDisplay(e) {// if (e.target.value !== 'none') {\n    //     contextData.setPostsData({\n    //         ...contextData.postsData,\n    //         type: e.target.value\n    //     })\n    // }\n  };\n\n  var onEmptyTrashHandler = function onEmptyTrashHandler() {// emptyTrash().then(res=>{\n    //     if (res.data.error){\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'red'\n    //         })\n    //     }else {\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading: false\n    //         });\n    //         setData();\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'green'\n    //         })\n    //     }\n    // }).catch(()=>{\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         report:'Can Not Communicate With Server'\n    //     })\n    // })\n  };\n\n  var EmptyTrash = function EmptyTrash() {\n    // if (contextData.postsData.status === 'Trash'){\n    //     return (\n    //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\n    //     )\n    // }else\n    return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterDropDownActions\"\n  }, __jsx(\"div\", {\n    className: \"bulkAction\"\n  }, __jsx(\"select\", {\n    ref: bulkAction,\n    placeholder: \"Bulk Actions\"\n  }, __jsx(\"option\", {\n    value: \"none\"\n  }, \"Bulk Actions\"), __jsx(\"option\", {\n    value: \"Published\"\n  }, \"Published\"), __jsx(\"option\", {\n    value: \"Draft\"\n  }, \"Draft\"), __jsx(\"option\", {\n    value: \"Trash\"\n  }, \"Trash\")), __jsx(\"button\", {\n    className: \"actionBtn\",\n    onClick: function onClick() {\n      return onFormatChangeHandler();\n    }\n  }, \"Apply\")), __jsx(\"div\", {\n    className: \"DateCategoryFormat\"\n  }, __jsx(\"select\", {\n    ref: typeToDisplay,\n    onChange: function onChange(e) {\n      return changePostsTypeToDisplay(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"Video\"\n  }, \"Video\"), __jsx(\"option\", {\n    value: \"Standard\"\n  }, \"Standard\"))), __jsx(EmptyTrash, null));\n};\n\nexport default FilterDropDownActions;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterDropDownActions.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FilterDropDownActions","props","contextData","bulkAction","typeToDisplay","state","setState","onFormatChangeHandler","changePostsTypeToDisplay","e","onEmptyTrashHandler","EmptyTrash"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AACnC,MAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;AACA,MAAMI,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMM,aAAa,GAAGN,MAAM,CAAC,IAAD,CAA5B;;AAHmC,kBAKPF,QAAQ,CAAC,EAAD,CALD;AAAA,MAK3BS,KAL2B;AAAA,MAKpBC,QALoB;;AAQnC,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAfD;;AAiBA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,CAAC,EAAI,CAClC;AACA;AACA;AACA;AACA;AACA;AACH,GAPD;;AASA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1BD;;AA4BA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB;AACA;AACA;AACA;AACA;AACA,WAAO,IAAP;AACH,GAPD;;AASA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,GAAG,EAAGR,UAAd;AAA2B,IAAA,WAAW,EAAC;AAAvC,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,iBAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC;AAAd,aAHJ,EAII;AAAQ,IAAA,KAAK,EAAC;AAAd,aAJJ,CADJ,EAOI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAG;AAAA,aAAMI,qBAAqB,EAA3B;AAAA;AAAxC,aAPJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,GAAG,EAAGH,aAAd;AAA8B,IAAA,QAAQ,EAAG,kBAAAK,CAAC;AAAA,aAAID,wBAAwB,CAACC,CAAD,CAA5B;AAAA;AAA1C,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,aADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,gBAFJ,CADJ,CAVJ,EAgBI,MAAC,UAAD,OAhBJ,CADJ;AAoBH,CA3FD;;AA4FA,eAAeT,qBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\n\r\nconst FilterDropDownActions = props => {\r\n    const contextData = useContext(AppContext);\r\n    const bulkAction = useRef(null);\r\n    const typeToDisplay = useRef(null);\r\n\r\n    const [ state, setState ] = useState({});\r\n\r\n\r\n    const onFormatChangeHandler = () => {\r\n        // if (bulkAction.current.value !== 'none') {\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         loading:true\r\n        //     });\r\n        //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\r\n        //        setData()\r\n        //     }).catch(err=>{\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    const changePostsTypeToDisplay = e => {\r\n        // if (e.target.value !== 'none') {\r\n        //     contextData.setPostsData({\r\n        //         ...contextData.postsData,\r\n        //         type: e.target.value\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    const onEmptyTrashHandler = () => {\r\n        // emptyTrash().then(res=>{\r\n        //     if (res.data.error){\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'red'\r\n        //         })\r\n        //     }else {\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading: false\r\n        //         });\r\n        //         setData();\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'green'\r\n        //         })\r\n        //     }\r\n        // }).catch(()=>{\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         report:'Can Not Communicate With Server'\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    const EmptyTrash = () => {\r\n        // if (contextData.postsData.status === 'Trash'){\r\n        //     return (\r\n        //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\r\n        //     )\r\n        // }else\r\n        return null\r\n    };\r\n\r\n    return (\r\n        <div className='FilterDropDownActions'>\r\n            <div className=\"bulkAction\">\r\n                <select ref={ bulkAction } placeholder='Bulk Actions'>\r\n                    <option value='none'>Bulk Actions</option>\r\n                    <option value='Published'>Published</option>\r\n                    <option value='Draft'>Draft</option>\r\n                    <option value='Trash'>Trash</option>\r\n                </select>\r\n                <button className='actionBtn' onClick={ () => onFormatChangeHandler() }>Apply</button>\r\n            </div>\r\n            <div className=\"DateCategoryFormat\">\r\n                <select ref={ typeToDisplay } onChange={ e => changePostsTypeToDisplay(e) }>\r\n                    <option value='Video'>Video</option>\r\n                    <option value='Standard'>Standard</option>\r\n                </select>\r\n            </div>\r\n            <EmptyTrash/>\r\n        </div>\r\n    );\r\n};\r\nexport default FilterDropDownActions;"]},"metadata":{},"sourceType":"module"}