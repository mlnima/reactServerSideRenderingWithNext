{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\nimport Quality from \"./Quality/Quality\";\nimport './VideoInformation.scss';\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\nimport Duration from \"./Duration/Duration\";\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\nimport TextInputWithUploadBtn from \"../TextInputWithUploadBtn/TextInputWithUploadBtn\";\nimport { AppContext } from \"../../../../context/AppContext\";\nimport TextInput from \"./TextInput/TextInput\";\nimport RenderIframe from \"./RenderIframe/RenderIframe\";\nimport ImagePreview from \"../ImagePreview/ImagePreview\";\n\nconst VideoInformation = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    inSlideShow: false\n  });\n\n  const onSaveChanges = () => {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, state));\n  };\n\n  const onDurationChangeHandler = value => {\n    setState(_objectSpread({}, state, {\n      duration: value\n    }));\n  };\n\n  const onIsInSlideShowChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      inSlideShow: e\n    }));\n  };\n\n  if (props.postData.postType === 'video') {\n    return __jsx(\"div\", {\n      className: \"VideoInformation\"\n    }, __jsx(IsInSlideShow, _extends({}, props, {\n      onIsInSlideShowChangeHandler: onIsInSlideShowChangeHandler,\n      isChecked: state.inSlideShow\n    })), __jsx(Quality, props), __jsx(TextInputWithUploadBtn, _extends({}, props, {\n      name: \"videoTrailerUrl\",\n      title: \"Video Url\"\n    })), __jsx(VideoEmbedCode, _extends({}, props, {\n      name: \"videoEmbedCode\"\n    })), __jsx(RenderIframe, props), __jsx(Duration, _extends({}, props, {\n      onDurationChangeHandler: onDurationChangeHandler\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'views',\n      value: state.views || 0\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'likes',\n      value: state.likes || 0\n    })), __jsx(ViewsLikesDisLikes, _extends({}, props, {\n      name: 'disLikes',\n      value: state.disLikes || 0\n    })), __jsx(TextInputWithUploadBtn, _extends({}, props, {\n      name: \"VideoTrailerUrl\",\n      title: \"Video Trailer Url\"\n    })), __jsx(TextInput, _extends({}, props, {\n      name: \"downloadLink\",\n      title: \"Download Link\"\n    })));\n  } else {\n    return __jsx(\"h3\", null, \"This Post Type Does not Support this Feature \");\n  }\n};\n\nexport default VideoInformation;","map":null,"metadata":{},"sourceType":"module"}