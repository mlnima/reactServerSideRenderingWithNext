{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { getAbsolutePathFromWindow } from './_variables';\nconst domainNameNoServerSide = getAbsolutePathFromWindow();\nexport const updateSetting = async (type, data, domainName) => {\n  const body = {\n    token: localStorage.wt,\n    type,\n    data\n  };\n  return await axios.post(domainNameNoServerSide + '/api/v1/settings/update', body);\n};\nexport const getSetting = async (type, cache, domainName) => {\n  const body = {\n    type\n  };\n  return await axios.post(domainName + `/api/v1/settings/get?type=${type}`, body);\n};\nexport const addNewWidget = async (data, domainName) => {\n  const body = {\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(domainName + '/api/v1/settings/addWidget', body);\n};\nexport const getWidgets = async (position, domainName) => {\n  console.log(window.location.hostname);\n  const body = {\n    position\n  };\n  return await axios.post(domainNameNoServerSide + '/api/v1/settings/getWidget', body);\n};\nexport const getMultipleWidgetWithData = async (widgets, cache, domainName) => {\n  console.log(domainName);\n\n  const body = _objectSpread({}, widgets);\n\n  return await axios.post(domainName + '/api/v1/settings/getMultipleWidgetWithData', body);\n};\nexport const getMultipleSetting = async (settings, cache, domainName) => {\n  const isCache = cache ? '' : `?cache=${Date.now()}`;\n\n  const body = _objectSpread({}, settings);\n\n  return await axios.post(domainName + `/api/v1/settings/getMultiple`, body);\n};\nexport const getWidgetsWithData = async position => {\n  const body = {\n    position\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidgetsWithData', body);\n};\nexport const updateWidgets = async (id, data) => {\n  const body = {\n    id,\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/updateWidget', body);\n};\nexport const deleteWidgets = async id => {\n  const body = {\n    id,\n    token: localStorage.wt\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/deleteWidget', body);\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/ajaxVariables.js"],"names":["axios","getAbsolutePathFromWindow","domainNameNoServerSide","updateSetting","type","data","domainName","body","token","localStorage","wt","post","getSetting","cache","addNewWidget","getWidgets","position","console","log","window","location","hostname","getMultipleWidgetWithData","widgets","getMultipleSetting","settings","isCache","Date","now","getWidgetsWithData","process","env","REACT_APP_PRODUCTION_URL","updateWidgets","id","deleteWidgets"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {getAbsolutePathFromWindow} from './_variables'\r\nconst domainNameNoServerSide =  getAbsolutePathFromWindow()\r\n\r\n\r\nexport const updateSetting = async (type, data, domainName) => {\r\n    const body = {\r\n        token: localStorage.wt,\r\n        type,\r\n        data\r\n    };\r\n    return await axios.post(domainNameNoServerSide + '/api/v1/settings/update', body)\r\n};\r\n\r\nexport const getSetting = async (type, cache, domainName) => {\r\n\r\n    const body = {\r\n        type,\r\n    };\r\n    return await axios.post(domainName + `/api/v1/settings/get?type=${ type }`, body)\r\n};\r\n\r\nexport const addNewWidget = async (data, domainName) => {\r\n    const body = {\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(domainName + '/api/v1/settings/addWidget', body)\r\n}\r\n\r\nexport const getWidgets = async (position, domainName) => {\r\n    console.log(window.location.hostname )\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(domainNameNoServerSide + '/api/v1/settings/getWidget', body)\r\n}\r\n\r\nexport const getMultipleWidgetWithData = async (widgets, cache, domainName) => {\r\n    console.log(domainName)\r\n    const body = {\r\n        ...widgets,\r\n    };\r\n    return await axios.post(domainName + '/api/v1/settings/getMultipleWidgetWithData', body)\r\n}\r\n\r\nexport const getMultipleSetting = async (settings, cache, domainName) => {\r\n    const isCache = cache ? '' : `?cache=${ Date.now() }`\r\n    const body = {\r\n        ...settings\r\n    };\r\n    return await axios.post(domainName + `/api/v1/settings/getMultiple`, body)\r\n};\r\n\r\nexport const getWidgetsWithData = async (position) => {\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidgetsWithData', body)\r\n}\r\n\r\nexport const updateWidgets = async (id, data) => {\r\n    const body = {\r\n        id,\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/updateWidget', body)\r\n}\r\n\r\nexport const deleteWidgets = async (id) => {\r\n    const body = {\r\n        id,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/deleteWidget', body)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}