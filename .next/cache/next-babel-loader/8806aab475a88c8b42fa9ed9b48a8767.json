{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\nimport Quality from \"./Quality/Quality\";\nimport './VideoInformation.scss';\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\nimport Duration from \"./Duration/Duration\";\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\nimport { AppContext } from \"../../../../context/AppContext\";\nimport TextInput from \"./TextInput/TextInput\";\n\nconst VideoInformation = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({}); // useEffect(() => {\n  //     setState({ ...state, ...contextData.editingPostData })\n  // }, []);\n\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n  useEffect(() => {\n    setTimeout(() => {\n      contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, state));\n    }, 10000);\n  }, []);\n\n  const onchangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  if (contextData.editingPostData.format === 'video') {\n    return __jsx(\"div\", {\n      className: \"VideoInformation\"\n    }, __jsx(IsInSlideShow, {\n      onChangeHandler: onchangeHandler\n    }), __jsx(Quality, {\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"videoTrailerUrl\",\n      title: \"Video Url\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(VideoEmbedCode, {\n      name: \"videoEmbedCode\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(Duration, props), __jsx(ViewsLikesDisLikes, _extends({\n      name: 'views'\n    }, props)), __jsx(ViewsLikesDisLikes, _extends({\n      name: 'likes'\n    }, props)), __jsx(ViewsLikesDisLikes, _extends({\n      name: 'disLikes'\n    }, props)), __jsx(TextInputWithUploadBtn, _extends({\n      name: \"VideoTrailerUrl\",\n      title: \"Video Trailer Url\"\n    }, props)), __jsx(TextInputWithUploadBtn, _extends({\n      name: \"mainThumbnail\",\n      title: \"Main thumbnail\"\n    }, props)), __jsx(TextInput, _extends({\n      name: \"downloadLink\",\n      title: \"Download Link\"\n    }, props)));\n  } else {\n    return __jsx(\"h3\", null, \"This Post Type Does not Support this Feature \");\n  }\n};\n\nexport default VideoInformation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/VideoInformation.js"],"names":["React","useEffect","useState","useContext","IsInSlideShow","Quality","VideoUrls","VideoEmbedCode","Duration","ViewsLikesDisLikes","TextInputWithUploadBtn","AppContext","TextInput","VideoInformation","props","contextData","state","setState","console","log","setTimeout","dispatchEditingPostData","editingPostData","onchangeHandler","e","target","name","value","format"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,sBAAP,MAAmC,iDAAnC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAMC,WAAW,GAAGZ,UAAU,CAACQ,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEK,KAAF;AAAA,OAASC;AAAT,MAAsBf,QAAQ,CAAC,EAAD,CAApC,CAF8B,CAI9B;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,GAFQ,EAEN,CAAEA,KAAF,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,UAAU,CAAC,MAAM;AACbL,MAAAA,WAAW,CAACM,uBAAZ,mBAAyCN,WAAW,CAACO,eAArD,MAAyEN,KAAzE;AACH,KAFS,EAEP,KAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMO,eAAe,GAAGC,CAAC,IAAI;AACzBP,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFtB,OAAR;AAIH,GALD;;AAOA,MAAIZ,WAAW,CAACO,eAAZ,CAA4BM,MAA5B,KAAuC,OAA3C,EAAoD;AAChD,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,aAAD;AAAe,MAAA,eAAe,EAAGL;AAAjC,MADJ,EAEI,MAAC,OAAD;AAAS,MAAA,eAAe,EAAGA;AAA3B,MAFJ,EAGI,MAAC,sBAAD;AAAwB,MAAA,IAAI,EAAC,iBAA7B;AAA+C,MAAA,KAAK,EAAC,WAArD;AAAiE,MAAA,eAAe,EAAGA;AAAnF,MAHJ,EAII,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,gBAArB;AAAsC,MAAA,eAAe,EAAGA;AAAxD,MAJJ,EAKI,MAAC,QAAD,EAAgBT,KAAhB,CALJ,EAMI,MAAC,kBAAD;AAAoB,MAAA,IAAI,EAAG;AAA3B,OAA0CA,KAA1C,EANJ,EAOI,MAAC,kBAAD;AAAoB,MAAA,IAAI,EAAG;AAA3B,OAA0CA,KAA1C,EAPJ,EAQI,MAAC,kBAAD;AAAoB,MAAA,IAAI,EAAG;AAA3B,OAA6CA,KAA7C,EARJ,EASI,MAAC,sBAAD;AAAwB,MAAA,IAAI,EAAC,iBAA7B;AAA+C,MAAA,KAAK,EAAC;AAArD,OAA8EA,KAA9E,EATJ,EAUI,MAAC,sBAAD;AAAwB,MAAA,IAAI,EAAC,eAA7B;AAA6C,MAAA,KAAK,EAAC;AAAnD,OAAyEA,KAAzE,EAVJ,EAWI,MAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAA+B,MAAA,KAAK,EAAC;AAArC,OAA2DA,KAA3D,EAXJ,CADJ;AAeH,GAhBD,MAgBO;AACH,WACI,kEADJ;AAGH;AAEJ,CA/CD;;AAgDA,eAAeD,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport './VideoInformation.scss'\r\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\r\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\r\nimport Duration from \"./Duration/Duration\";\r\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\r\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport TextInput from \"./TextInput/TextInput\";\r\n\r\nconst VideoInformation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n\r\n    // useEffect(() => {\r\n    //     setState({ ...state, ...contextData.editingPostData })\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(state)\r\n    }, [ state ]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\r\n        }, 10000)\r\n    }, []);\r\n\r\n    const onchangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    if (contextData.editingPostData.format === 'video') {\r\n        return (\r\n            <div className='VideoInformation' >\r\n                <IsInSlideShow onChangeHandler={ onchangeHandler }/>\r\n                <Quality onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='videoTrailerUrl' title='Video Url' onChangeHandler={ onchangeHandler }/>\r\n                <VideoEmbedCode name='videoEmbedCode' onChangeHandler={ onchangeHandler }/>\r\n                <Duration  { ...props }/>\r\n                <ViewsLikesDisLikes name={ 'views' } { ...props }/>\r\n                <ViewsLikesDisLikes name={ 'likes' } { ...props }/>\r\n                <ViewsLikesDisLikes name={ 'disLikes' } { ...props }/>\r\n                <TextInputWithUploadBtn name='VideoTrailerUrl' title='Video Trailer Url' { ...props }/>\r\n                <TextInputWithUploadBtn name='mainThumbnail' title='Main thumbnail' { ...props }/>\r\n                <TextInput name='downloadLink' title='Download Link'  { ...props } />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <h3>This Post Type Does not Support this Feature </h3>\r\n        )\r\n    }\r\n\r\n};\r\nexport default VideoInformation;"]},"metadata":{},"sourceType":"module"}