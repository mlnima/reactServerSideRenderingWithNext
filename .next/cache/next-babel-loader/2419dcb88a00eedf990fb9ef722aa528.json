{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport withRouter from \"next/dist/client/with-router\";\nimport Link from \"next/link\"; // import {Link} from \"react-router-dom\";\n\nimport { AppContext } from \"../../../context/AppContext\"; // import {withRouter} from \"react-router-dom\";\n\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport FA from 'react-fontawesome'; // import {deletedVideoAutoRemover} from \"../../../variables/ajaxRequestVariables\";\n\nvar VideoElement = function VideoElement(props) {\n  var qualityLabel = useRef(null);\n  var durationLabel = useRef(null);\n  var viewLabel = useRef(null);\n  var element = useRef(null);\n  var videoElement = useRef(null);\n  var contextData = useContext(AppContext);\n  var path = '/post/' + props.state._id + '/' + props.state.title;\n\n  var _useState = useState({\n    isHover: false,\n    isWatched: false\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // useEffect(()=>{\n  //     console.log( props.state)\n  // },[ ]);\n\n\n  useEffect(function () {\n    hoverCleaner();\n  }, [state.isHover]);\n  useEffect(function () {\n    if (contextData.state.videoPreviewID !== props.state._id) {\n      setState(_objectSpread({}, state, {\n        isHover: false\n      }));\n    }\n  }, [contextData.state.videoPreviewID]);\n\n  var isHoverHandler = function isHoverHandler() {\n    if (props.state.videoTrailerUrl) {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        videoPreviewID: props.state._id\n      }));\n      state.isHover ? setState(_objectSpread({}, state, {\n        isHover: false\n      })) : setState(_objectSpread({}, state, {\n        isHover: true\n      }));\n    }\n  };\n\n  var hoverCleaner = function hoverCleaner() {\n    if (props.state.videoTrailerUrl) {\n      if (state.isHover) {\n        qualityLabel.current.style.visibility = 'hidden';\n        durationLabel.current.style.visibility = 'hidden';\n        viewLabel.current.style.visibility = 'hidden';\n      } else {\n        qualityLabel.current.style.visibility = 'visible';\n        durationLabel.current.style.visibility = 'visible';\n        viewLabel.current.style.visibility = 'visible';\n      }\n    }\n  };\n\n  var imageContent = function imageContent() {\n    var dataToRender = function dataToRender() {\n      if (state.isHover && props.state._id === contextData.state.videoPreviewID && props.state.videoTrailerUrl) {\n        return __jsx(\"video\", {\n          ref: videoElement,\n          src: props.state.videoTrailerUrl,\n          autoPlay: true,\n          loop: true,\n          onMouseOut: function onMouseOut(e) {\n            isHoverHandler();\n          }\n        });\n      } else if (!state.isHover) {\n        return __jsx(\"img\", {\n          src: props.state.mainThumbnail,\n          alt: props.state.title,\n          onError: function onError(err) {\n            // deletedVideoAutoRemover(props.state)\n            console.log(props.state);\n          },\n          onMouseEnter: function onMouseEnter() {\n            return isHoverHandler();\n          }\n        });\n      }\n    };\n\n    return dataToRender();\n  };\n\n  var VideoPreviewMobileBtnLogo = function VideoPreviewMobileBtnLogo() {\n    var element = __jsx(\"i\", {\n      className: \"fas fa-fast-forward\"\n    });\n\n    if (state.isHover) {\n      element = __jsx(\"i\", {\n        className: \"fas fa-stop\"\n      });\n    } else {\n      element = __jsx(\"i\", {\n        className: \"fas fa-fast-forward\"\n      });\n    }\n\n    return element;\n  };\n\n  var MobilePreviewBtn = function MobilePreviewBtn() {\n    if (props.state.videoTrailerUrl) {\n      return __jsx(\"button\", {\n        className: \"videoPreviewMobile\",\n        onClick: function onClick() {\n          contextData.dispatchState(_objectSpread({}, contextData.state, {\n            videoPreviewID: props.state._id\n          }));\n          state.isHover ? setState(_objectSpread({}, state, {\n            isHover: false\n          })) : setState(_objectSpread({}, state, {\n            isHover: true\n          }));\n        }\n      }, \"   \", __jsx(VideoPreviewMobileBtnLogo, null), \"  \");\n    } else return null;\n  };\n\n  return __jsx(\"div\", {\n    ref: element,\n    className: \"videoElementDiv\"\n  }, __jsx(Link, {\n    as: \"/\".concat(props.state.title),\n    href: {\n      pathname: '/post',\n      query: {\n        postTitle: props.state.title\n      }\n    }\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"VideoElement\",\n    key: props.state.title\n  }, __jsx(\"div\", {\n    className: \"image\"\n  }, __jsx(\"span\", {\n    ref: qualityLabel,\n    className: \"quality\"\n  }, props.state.quality), imageContent(), __jsx(\"span\", {\n    ref: viewLabel,\n    className: \"views\"\n  }, __jsx(FA, {\n    className: \"fontawesomeSmall\",\n    name: \"eye\"\n  }), props.state.views), __jsx(\"span\", {\n    ref: durationLabel,\n    className: \"duration\"\n  }, props.state.duration)), __jsx(ProgressBar, {\n    value: contextData.functions.likeValueCalculator(props.state.likes, props.state.disLikes),\n    percent: true\n  }), __jsx(\"h3\", null, props.state.title)))));\n};\n\nexport default withRouter(VideoElement);","map":null,"metadata":{},"sourceType":"module"}