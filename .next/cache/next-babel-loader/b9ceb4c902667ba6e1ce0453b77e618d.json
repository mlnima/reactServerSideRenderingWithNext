{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { AppContext } from '../../../../context/AppContext';\n\nvar WidgetHeader = function WidgetHeader(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    setState(_objectSpread({}, state, {\n      style: {\n        widgetHead: {\n          backgroundColor: contextData.siteDesign.widgetHeaderBackgroundColor,\n          color: contextData.siteDesign.widgetHeaderTextColor\n        },\n        redirectLink: {\n          backgroundColor: contextData.siteDesign.widgetHeaderRedirectLinkBackgroundColor,\n          color: contextData.siteDesign.widgetHeaderRedirectLinkTextColor\n        }\n      }\n    }));\n  }, [contextData.siteDesign]);\n\n  var RenderTitle = function RenderTitle() {\n    if (props.title) {\n      return __jsx(\"p\", {\n        className: \"WidgetHeaderTitle\"\n      }, props.title);\n    } else return null;\n  };\n\n  var RenderRedirectLink = function RenderRedirectLink() {\n    if (props.redirectLink && props.redirectToTitle) {\n      return __jsx(Link, {\n        href: props.redirectLink\n      }, __jsx(\"a\", {\n        style: state.style.redirectLink\n      }, props.redirectToTitle));\n    } else return null;\n  };\n\n  if (props.title) {\n    return __jsx(\"div\", {\n      className: \"WidgetHeader\",\n      style: state.style.widgetHead\n    }, __jsx(RenderTitle, null), __jsx(RenderRedirectLink, null));\n  } else return null;\n};\n\nexport default WidgetHeader;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Widget/WidgetHeader/WidgetHeader.js"],"names":["React","useContext","useEffect","useState","Link","AppContext","WidgetHeader","props","contextData","style","state","setState","widgetHead","backgroundColor","siteDesign","widgetHeaderBackgroundColor","color","widgetHeaderTextColor","redirectLink","widgetHeaderRedirectLinkBackgroundColor","widgetHeaderRedirectLinkTextColor","RenderTitle","title","RenderRedirectLink","redirectToTitle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1B,MAAMC,WAAW,GAAGP,UAAU,CAACI,UAAD,CAA9B;;AAD0B,kBAEEF,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAC;AAD2B,GAAD,CAFV;AAAA,MAElBC,KAFkB;AAAA,MAEXC,QAFW;;AAM1BT,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,mBACDD,KADC;AAEJD,MAAAA,KAAK,EAAC;AACFG,QAAAA,UAAU,EAAC;AACPC,UAAAA,eAAe,EAACL,WAAW,CAACM,UAAZ,CAAuBC,2BADhC;AAEPC,UAAAA,KAAK,EAACR,WAAW,CAACM,UAAZ,CAAuBG;AAFtB,SADT;AAKFC,QAAAA,YAAY,EAAC;AACTL,UAAAA,eAAe,EAACL,WAAW,CAACM,UAAZ,CAAuBK,uCAD9B;AAETH,UAAAA,KAAK,EAACR,WAAW,CAACM,UAAZ,CAAuBM;AAFpB;AALX;AAFF,OAAR;AAaH,GAdQ,EAcN,CAACZ,WAAW,CAACM,UAAb,CAdM,CAAT;;AAiBA,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAId,KAAK,CAACe,KAAV,EAAiB;AACb,aACI;AAAG,QAAA,SAAS,EAAC;AAAb,SAAmCf,KAAK,CAACe,KAAzC,CADJ;AAGH,KAJD,MAIO,OAAO,IAAP;AACV,GAND;;AAQA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,QAAIhB,KAAK,CAACW,YAAN,IAAsBX,KAAK,CAACiB,eAAhC,EAAiD;AAC7C,aACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAGjB,KAAK,CAACW;AAAnB,SAAkC;AAAG,QAAA,KAAK,EAAER,KAAK,CAACD,KAAN,CAAYS;AAAtB,SAAsCX,KAAK,CAACiB,eAA5C,CAAlC,CADJ;AAGH,KAJD,MAIO,OAAO,IAAP;AACV,GAND;;AAQA,MAAIjB,KAAK,CAACe,KAAV,EAAiB;AACb,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAEZ,KAAK,CAACD,KAAN,CAAYG;AAAjD,OACI,MAAC,WAAD,OADJ,EAEI,MAAC,kBAAD,OAFJ,CADJ;AAMH,GAPD,MAOO,OAAO,IAAP;AAEV,CAhDD;;AAkDA,eAAeN,YAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Link from 'next/link'\r\nimport { AppContext } from '../../../../context/AppContext'\r\n\r\nconst WidgetHeader = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        style:{}\r\n    });\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            style:{\r\n                widgetHead:{\r\n                    backgroundColor:contextData.siteDesign.widgetHeaderBackgroundColor,\r\n                    color:contextData.siteDesign.widgetHeaderTextColor\r\n                },\r\n                redirectLink:{\r\n                    backgroundColor:contextData.siteDesign.widgetHeaderRedirectLinkBackgroundColor,\r\n                    color:contextData.siteDesign.widgetHeaderRedirectLinkTextColor\r\n                }\r\n            }\r\n        })\r\n    }, [contextData.siteDesign]);\r\n\r\n\r\n    const RenderTitle = () => {\r\n        if (props.title) {\r\n            return (\r\n                <p className='WidgetHeaderTitle'>{ props.title }</p>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const RenderRedirectLink = () => {\r\n        if (props.redirectLink && props.redirectToTitle) {\r\n            return (\r\n                <Link href={ props.redirectLink }><a style={state.style.redirectLink}>{ props.redirectToTitle }</a></Link>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    if (props.title) {\r\n        return (\r\n            <div className='WidgetHeader' style={state.style.widgetHead}>\r\n                <RenderTitle/>\r\n                <RenderRedirectLink/>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\n\r\nexport default WidgetHeader;\r\n"]},"metadata":{},"sourceType":"module"}