{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport { getMultipleSetting, getSetting, getWidgetsWithData, getMultipleWidgetWithData } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport withRouter from 'next/dist/client/with-router';\nimport SideBar from '../../../components/includes/Sidebar/Sidebar';\nimport Footer from '../../../components/includes/Footer/Footer';\n\nconst actors = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  const renderActors = props.actorsSource.metas.map(meta => {\n    return __jsx(ActorElement, {\n      key: props.actorsSource.metas.indexOf(meta),\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  useEffect(() => {\n    console.log(props);\n\n    if (props.identity.actorsPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.data.actorsPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"actors\"\n  }, renderActors), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getActorsData.pageNo,\n    totalCount: props.actorsSource.totalCount,\n    size: props.getActorsData.size,\n    maxPage: Math.ceil(parseInt(props.actorsSource.totalCount) / parseInt(props.getActorsData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(SideBar, {\n    key: \"actorsPageSidebar\",\n    isActive: props.identity.data.actorsPageSidebar,\n    widgets: props.widgets,\n    position: \"actorsPageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nactors.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const getActorsData = {\n    type: 'actor',\n    searchForImageIn: 'actors',\n    pageNo: parseInt(query.page) || 1,\n    size: parseInt(query.size) || 30,\n    sort: query.sort || 'latest'\n  };\n  let actorsSource;\n  let widgets;\n  let settings;\n  const widgetsData = await getWidgetsWithData('actorsPageSidebar');\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true);\n  const categoriesData = await getMeta(getActorsData);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  actorsSource = categoriesData.data ? categoriesData.data : [];\n  settings = settingsData.data.settings ? settingsData.data.settings : [];\n  return _objectSpread({}, settings, {\n    query,\n    actorsSource,\n    getActorsData,\n    pathname,\n    widgets\n  });\n};\n\nexport default withRouter(actors);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/actors/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","AppContext","TagElement","getMultipleSetting","getSetting","getWidgetsWithData","getMultipleWidgetWithData","getMeta","CategoryElement","ActorElement","SiteSettingSetter","PaginationComponent","withRouter","SideBar","Footer","actors","props","state","setState","style","renderActors","actorsSource","metas","map","meta","indexOf","imageUrl","noImageUrl","name","count","console","log","identity","actorsPageSidebar","gridArea","data","getActorsData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","widgets","getInitialProps","req","res","err","type","searchForImageIn","page","sort","settings","widgetsData","settingsData","categoriesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport { getMultipleSetting, getSetting, getWidgetsWithData,getMultipleWidgetWithData } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport ActorElement from '../../../components/includes/ActorElement/ActorElement'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport SideBar from '../../../components/includes/Sidebar/Sidebar'\r\nimport Footer from '../../../components/includes/Footer/Footer'\r\n\r\nconst actors = props => {\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n    const renderActors = props.actorsSource.metas.map(meta => {\r\n        return (\r\n            <ActorElement key={ props.actorsSource.metas.indexOf(meta) } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.identity.actorsPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [ props ]);\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div style={ state.style } className={ props.identity.data.actorsPageSidebar ? 'content withSidebar' : 'content withOutSidebar' }>\r\n                    <div>\r\n                        <div className='actors'>\r\n                            { renderActors }\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={ props.getActorsData.pageNo }\r\n                            totalCount={ props.actorsSource.totalCount }\r\n                            size={ props.getActorsData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.actorsSource.totalCount) / parseInt(props.getActorsData.size)) - 1 }\r\n                            queryData={ props.query || props.router.query }\r\n                            pathnameData={ props.pathname || props.router.pathname }\r\n                        />\r\n                    </div>\r\n                    <SideBar key='actorsPageSidebar' isActive={ props.identity.data.actorsPageSidebar } widgets={ props.widgets } position='actorsPageSidebar'/>\r\n                </div>\r\n                <Footer widgets={ props.widgets } position='footer'/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nactors.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const getActorsData = {\r\n        type: 'actor',\r\n        searchForImageIn: 'actors',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size)  || 30,\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    let actorsSource;\r\n    let widgets;\r\n    let settings;\r\n\r\n    const widgetsData = await getWidgetsWithData('actorsPageSidebar')\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true)\r\n    const categoriesData = await getMeta(getActorsData)\r\n\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    actorsSource = categoriesData.data ? categoriesData.data : []\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n\r\n    return { ...settings, query, actorsSource, getActorsData, pathname, widgets }\r\n}\r\nexport default withRouter(actors);\r\n"]},"metadata":{},"sourceType":"module"}