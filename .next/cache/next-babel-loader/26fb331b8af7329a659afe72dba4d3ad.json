{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { getComments } from '../../../_variables/ajaxPostsVariables';\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments';\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nconst comments = props => {\n  return __jsx(AdminLayout, null, __jsx(\"div\", null, __jsx(AdminCommentsControl, {\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCommentsData.pageNo,\n    totalCount: props.totalComments,\n    size: props.getCommentsData.size,\n    maxPage: Math.ceil(parseInt(props.totalComments) / parseInt(props.getCommentsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(AdminRenderComments, props)));\n};\n\ncomments.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let comments;\n  const getCommentsData = {\n    size: parseInt(query.size) || 30,\n    pageNo: parseInt(query.page) || 1,\n    keyword: query.keyword || '',\n    sort: query.sort || 'latest',\n    status: query.status || 'all'\n  };\n  const commentsData = await getComments(getCommentsData, false, domainName);\n  comments = commentsData.data;\n  return {\n    query,\n    pathname,\n    comments: comments.comments,\n    totalComments: comments.count,\n    getCommentsData\n  };\n};\n\nexport default comments;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/comments/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","getComments","AdminRenderComments","AdminCommentsControl","PaginationComponent","AppLayout","getAbsolutePath","comments","props","query","router","pathname","getCommentsData","pageNo","totalComments","size","Math","ceil","parseInt","getInitialProps","req","res","err","domainName","page","keyword","sort","status","commentsData","data","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,OAAOC,mBAAP,MAAgC,kGAAhC;AACA,OAAOC,oBAAP,MAAiC,oGAAjC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,SACI,MAAC,WAAD,QACI,mBACI,MAAC,oBAAD;AACI,IAAA,SAAS,EAAGA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,MAAN,CAAaD,KAD5C;AAEI,IAAA,YAAY,EAAGD,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACE,MAAN,CAAaC;AAFlD,IADJ,EAKI,MAAC,mBAAD;AACI,IAAA,QAAQ,EAAG,IADf;AAEI,IAAA,WAAW,EAAGH,KAAK,CAACI,eAAN,CAAsBC,MAFxC;AAGI,IAAA,UAAU,EAAGL,KAAK,CAACM,aAHvB;AAII,IAAA,IAAI,EAAGN,KAAK,CAACI,eAAN,CAAsBG,IAJjC;AAKI,IAAA,OAAO,EAAGC,IAAI,CAACC,IAAL,CAAUC,QAAQ,CAACV,KAAK,CAACM,aAAP,CAAR,GAAgCI,QAAQ,CAACV,KAAK,CAACI,eAAN,CAAsBG,IAAvB,CAAlD,CALd;AAMI,IAAA,SAAS,EAAGP,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,MAAN,CAAaD,KAN5C;AAOI,IAAA,YAAY,EAAGD,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACE,MAAN,CAAaC;AAPlD,IALJ,EAcI,MAAC,mBAAD,EAA0BH,KAA1B,CAdJ,CADJ,CADJ;AAoBH,CArBD;;AAuBAD,QAAQ,CAACY,eAAT,GAA2B,OAAO;AAAER,EAAAA,QAAF;AAAYF,EAAAA,KAAZ;AAAmBW,EAAAA,GAAnB;AAAwBC,EAAAA,GAAxB;AAA6BC,EAAAA;AAA7B,CAAP,KAA8C;AACrE,QAAMC,UAAU,GAAGH,GAAG,GAAG,MAAMd,eAAe,CAACc,GAAD,CAAxB,GAAgC,EAAtD;AACA,MAAIb,QAAJ;AACA,QAAMK,eAAe,GAAG;AACpBG,IAAAA,IAAI,EAAEG,QAAQ,CAACT,KAAK,CAACM,IAAP,CAAR,IAAwB,EADV;AAEpBF,IAAAA,MAAM,EAAEK,QAAQ,CAACT,KAAK,CAACe,IAAP,CAAR,IAAwB,CAFZ;AAGpBC,IAAAA,OAAO,EAAEhB,KAAK,CAACgB,OAAN,IAAiB,EAHN;AAIpBC,IAAAA,IAAI,EAAEjB,KAAK,CAACiB,IAAN,IAAc,QAJA;AAKpBC,IAAAA,MAAM,EAAElB,KAAK,CAACkB,MAAN,IAAgB;AALJ,GAAxB;AAOA,QAAMC,YAAY,GAAG,MAAM3B,WAAW,CAACW,eAAD,EAAiB,KAAjB,EAAuBW,UAAvB,CAAtC;AACAhB,EAAAA,QAAQ,GAAGqB,YAAY,CAACC,IAAxB;AACA,SAAO;AAAEpB,IAAAA,KAAF;AAASE,IAAAA,QAAT;AAAmBJ,IAAAA,QAAQ,EAAEA,QAAQ,CAACA,QAAtC;AAAgDO,IAAAA,aAAa,EAAEP,QAAQ,CAACuB,KAAxE;AAA+ElB,IAAAA;AAA/E,GAAP;AACH,CAbD;;AAcA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout'\r\nimport { getComments } from '../../../_variables/ajaxPostsVariables'\r\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments'\r\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getAbsolutePath } from '../../../_variables/_variables'\r\n\r\nconst comments = props => {\r\n    return (\r\n        <AdminLayout>\r\n            <div>\r\n                <AdminCommentsControl\r\n                    queryData={ props.query || props.router.query }\r\n                    pathnameData={ props.pathname || props.router.pathname }\r\n                />\r\n                <PaginationComponent\r\n                    isActive={ true }\r\n                    currentPage={ props.getCommentsData.pageNo }\r\n                    totalCount={ props.totalComments }\r\n                    size={ props.getCommentsData.size }\r\n                    maxPage={ Math.ceil(parseInt(props.totalComments) / parseInt(props.getCommentsData.size)) }\r\n                    queryData={ props.query || props.router.query }\r\n                    pathnameData={ props.pathname || props.router.pathname }\r\n                />\r\n                <AdminRenderComments { ...props }/>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ncomments.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : '';\r\n    let comments;\r\n    const getCommentsData = {\r\n        size: parseInt(query.size) || 30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        keyword: query.keyword || '',\r\n        sort: query.sort || 'latest',\r\n        status: query.status || 'all',\r\n    }\r\n    const commentsData = await getComments(getCommentsData,false,domainName)\r\n    comments = commentsData.data\r\n    return { query, pathname, comments: comments.comments, totalComments: comments.count, getCommentsData }\r\n}\r\nexport default comments;\r\n"]},"metadata":{},"sourceType":"module"}