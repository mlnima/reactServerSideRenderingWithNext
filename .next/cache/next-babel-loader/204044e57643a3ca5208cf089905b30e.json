{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\nimport withRouter from \"next/dist/client/with-router\";\n\nconst Post = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    post: {}\n  });\n  useEffect(() => {// console.log(props)\n    // if (!props.post._id) {\n    //     const body = {\n    //         postTitle: props.router.query.postTitle,\n    //     };\n    //     axios.post('http://localhost:3000/api/v1/posts/post', body).then(res => {\n    //         console.log( res)\n    //         setState({\n    //             ...state,\n    //             post:res.data.post\n    //         })\n    //     }).catch(err => {\n    //         console.log(err)\n    //     })\n    //\n    // }else {\n    //     setState({\n    //         ...state,\n    //         post:props.post\n    //     })\n    // }\n  }, []);\n  useEffect(() => {\n    console.log(state);\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"div\", null, \"post\", __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode\n  }), __jsx(DownloadLink, {\n    downloadLink: props.post.videoEmbedCode\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    categories: props.post.categories\n  })));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let post;\n  const body = {\n    postTitle: query.postTitle\n  };\n\n  try {\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body);\n    post = postData.data.post;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    post,\n    query\n  };\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getPost","Iframe","PostInfo","DownloadLink","withRouter","Post","props","state","setState","post","console","log","videoEmbedCode","title","description","tags","categories","getInitialProps","pathname","query","req","res","err","body","postTitle","postData","data","e","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,OAAOC,YAAP,MAAyB,0DAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC;AACjCa,IAAAA,IAAI,EAAE;AAD2B,GAAD,CAApC;AAGAd,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAvBQ,EAuBN,EAvBM,CAAT;AA0BAA,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFQ,EAEP,CAAED,KAAF,CAFO,CAAT;AAIA,SACI,MAAC,SAAD,QACI,2BAEI,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAGA,KAAK,CAACG,IAAN,CAAWG;AAAhC,IAFJ,EAGI,MAAC,YAAD;AAAc,IAAA,YAAY,EAAEN,KAAK,CAACG,IAAN,CAAWG;AAAvC,IAHJ,EAII,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAK,CAACG,IAAN,CAAWI,KAA5B;AAAmC,IAAA,WAAW,EAAEP,KAAK,CAACG,IAAN,CAAWK,WAA3D;AAAwE,IAAA,IAAI,EAAER,KAAK,CAACG,IAAN,CAAWM,IAAzF;AAA+F,IAAA,UAAU,EAAET,KAAK,CAACG,IAAN,CAAWO;AAAtH,IAJJ,CADJ,CADJ;AAUH,CA5CD;;AA8CAX,IAAI,CAACY,eAAL,GAAuB,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,GAAnB;AAAwBC,EAAAA,GAAxB;AAA6BC,EAAAA;AAA7B,CAAP,KAA8C;AACjE,MAAIb,IAAJ;AACA,QAAMc,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAEL,KAAK,CAACK;AADR,GAAb;;AAGA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAACU,IAAN,CAAW,yCAAX,EAAsDc,IAAtD,CAAvB;AACAd,IAAAA,IAAI,GAAGgB,QAAQ,CAACC,IAAT,CAAcjB,IAArB;AACH,GAHD,CAGE,OAAQkB,CAAR,EAAY;AACVjB,IAAAA,OAAO,CAACkB,KAAR,CAAcD,CAAd;AAEH;;AAED,SAAO;AAAElB,IAAAA,IAAF;AAAQU,IAAAA;AAAR,GAAP;AACH,CAdD;;AAgBA,eAAef,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\n\r\nconst Post = props => {\r\n    const [ state, setState ] = useState({\r\n        post: {}\r\n    });\r\n    useEffect(() => {\r\n        // console.log(props)\r\n        // if (!props.post._id) {\r\n        //     const body = {\r\n        //         postTitle: props.router.query.postTitle,\r\n        //     };\r\n        //     axios.post('http://localhost:3000/api/v1/posts/post', body).then(res => {\r\n        //         console.log( res)\r\n        //         setState({\r\n        //             ...state,\r\n        //             post:res.data.post\r\n        //         })\r\n        //     }).catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n        //\r\n        // }else {\r\n        //     setState({\r\n        //         ...state,\r\n        //         post:props.post\r\n        //     })\r\n        // }\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(state)\r\n    },[ props]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div>\r\n                post\r\n                <Iframe iframeCode={ props.post.videoEmbedCode }/>\r\n                <DownloadLink downloadLink={props.post.videoEmbedCode}/>\r\n                <PostInfo title={props.post.title} description={props.post.description} tags={props.post.tags} categories={props.post.categories}/>\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    const body = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    try {\r\n        const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body)\r\n        post = postData.data.post\r\n    } catch ( e ) {\r\n        console.error(e)\r\n\r\n    }\r\n\r\n    return { post, query }\r\n}\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}