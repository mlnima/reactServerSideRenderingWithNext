{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './DropDownWidget.scss';\nimport FA from \"react-fontawesome\";\n\nconst DropDownWidget = (Component, title) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: true,\n    icon: 'sort-up'\n  });\n  useEffect(() => {\n    state.open ? setState(_objectSpread({}, state, {\n      icon: 'sort-up'\n    })) : setState(_objectSpread({}, state, {\n      icon: 'sort-down'\n    }));\n  }, [state.open]);\n\n  const openCloseHandler = () => {\n    state.open ? setState(_objectSpread({}, state, {\n      open: false\n    })) : setState(_objectSpread({}, state, {\n      open: true\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"DropDownWidget\"\n  }, __jsx(\"div\", {\n    className: \"DropDownWidgetHead\"\n  }, __jsx(\"p\", {\n    className: \"DropDownWidgetHeadTitle\"\n  }, \"Title\", title), __jsx(\"button\", {\n    className: \"DropDownWidgetHeadOpenCloseBtn\",\n    onClick: () => openCloseHandler()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: state.icon\n  }))), __jsx(Component, null));\n};\n\nexport default DropDownWidget;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/post/DropDownWidget/DropDownWidget.js"],"names":["React","useEffect","useState","useContext","FA","DropDownWidget","Component","title","state","setState","open","icon","openCloseHandler"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,uBAAP;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAEA,MAAMC,cAAc,GAAG,CAACC,SAAD,EAAWC,KAAX,KAAqB;AACxC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,IAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAApC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACE,IAAN,GACID,QAAQ,mBACDD,KADC;AAEJG,MAAAA,IAAI,EAAC;AAFD,OADZ,GAKIF,QAAQ,mBACDD,KADC;AAEJG,MAAAA,IAAI,EAAC;AAFD,OALZ;AASH,GAVQ,EAUN,CAAEH,KAAK,CAACE,IAAR,CAVM,CAAT;;AAYA,QAAME,gBAAgB,GAAG,MAAI;AACzBJ,IAAAA,KAAK,CAACE,IAAN,GACID,QAAQ,mBACDD,KADC;AAEJE,MAAAA,IAAI,EAAC;AAFD,OADZ,GAKID,QAAQ,mBACDD,KADC;AAEJE,MAAAA,IAAI,EAAC;AAFD,OALZ;AASH,GAVD;;AAYA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAG,IAAA,SAAS,EAAC;AAAb,cAA8CH,KAA9C,CADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,gCAAlB;AAAmD,IAAA,OAAO,EAAE,MAAIK,gBAAgB;AAAhF,KAAoF,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAGJ,KAAK,CAACG;AAA/C,IAApF,CAFJ,CADJ,EAKI,MAAC,SAAD,OALJ,CADJ;AASH,CAvCD;;AAwCA,eAAeN,cAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './DropDownWidget.scss';\r\nimport FA from \"react-fontawesome\";\r\n\r\nconst DropDownWidget = (Component,title) => {\r\n    const [ state, setState ] = useState({\r\n        open: true,\r\n        icon: 'sort-up'\r\n    });\r\n\r\n    useEffect(() => {\r\n        state.open?\r\n            setState({\r\n                ...state,\r\n                icon:'sort-up'\r\n            }):\r\n            setState({\r\n                ...state,\r\n                icon:'sort-down'\r\n            })\r\n    }, [ state.open ]);\r\n\r\n    const openCloseHandler = ()=>{\r\n        state.open?\r\n            setState({\r\n                ...state,\r\n                open:false\r\n            }):\r\n            setState({\r\n                ...state,\r\n                open:true\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className='DropDownWidget'>\r\n            <div className=\"DropDownWidgetHead\">\r\n                <p className='DropDownWidgetHeadTitle'>Title{ title }</p>\r\n                <button className='DropDownWidgetHeadOpenCloseBtn' onClick={()=>openCloseHandler()}><FA className='fontawesomeMedium' name={ state.icon }/></button>\r\n            </div>\r\n            <Component/>\r\n        </div>\r\n    );\r\n};\r\nexport default DropDownWidget;"]},"metadata":{},"sourceType":"module"}