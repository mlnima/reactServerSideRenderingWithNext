{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../../../context/AppContext';\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables';\n\nconst WidgetModel = props => {\n  const contextData = useContext(AppContext);\n  const title = useRef(null);\n  const categories = useRef(null);\n  const tags = useRef(null);\n  const count = useRef(null);\n  const pagination = useRef(null);\n  const redirectLink = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.data.title || '',\n    categories: props.data.categories || [],\n    tags: props.data.tags || [],\n    count: props.data.count || 6,\n    pagination: props.data.pagination || false,\n    redirectLink: props.data.redirectLink || '',\n    redirectToTitle: props.data.redirectToTitle || '',\n    type: props.data.type || 'posts',\n    position: props.data.position || 'home',\n    sortBy: props.data.position || '-id',\n    text: props.data.text || '',\n    textAlign: props.data.text || 'center',\n    customHtml: props.data.customHtml || ''\n  });\n  const {\n    0: widgetSettings,\n    1: setWidgetSettings\n  } = useState({\n    open: false\n  });\n\n  const onOpenHandler = () => {\n    widgetSettings.open ? setWidgetSettings(_objectSpread({}, widgetSettings, {\n      open: false\n    })) : setWidgetSettings(_objectSpread({}, widgetSettings, {\n      open: true\n    }));\n  };\n\n  const onDeleteHandler = () => {\n    deleteWidgets(props.data._id).then(() => {\n      contextData.dispatchWidgetsSettings({\n        widgets: contextData.widgetsSettings.widgets.filter(w => w._id !== props.data._id)\n      });\n    });\n  };\n\n  const onSaveHandler = () => {\n    updateWidgets(props.data._id, state).then(res => {\n      // let newData = res.data.updatedWidgets\n      // setState({ ...state, ...newData })\n      getWidgets('all').then(res => {\n        contextData.dispatchWidgetsSettings({\n          widgets: [...res.data.widgets]\n        });\n      });\n    });\n  };\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onNewCategoryAddHandler = () => {\n    setState(_objectSpread({}, state, {\n      categories: [...state.categories, categories.current.value]\n    }));\n    categories.current.value = '';\n  };\n\n  const onNewTagAddHandler = () => {\n    setState(_objectSpread({}, state, {\n      tags: [...state.tags, tags.current.value]\n    }));\n    tags.current.value = '';\n  };\n\n  const deleteTagHandler = e => {\n    setState(_objectSpread({}, state, {\n      tags: state.tags.filter(tag => tag !== e.target.name)\n    }));\n  };\n\n  const deleteCategoryHandler = e => {\n    setState(_objectSpread({}, state, {\n      categories: state.categories.filter(category => category !== e.target.name)\n    }));\n  };\n\n  const renderTags = state.tags.map(tag => {\n    return __jsx(\"button\", {\n      name: tag,\n      onClick: e => deleteTagHandler(e)\n    }, tag, \"X\");\n  });\n  const renderCategories = state.categories.map(category => {\n    return __jsx(\"button\", {\n      name: category,\n      onClick: e => deleteCategoryHandler(e)\n    }, category, \"X\");\n  });\n  useEffect(() => {\n    setTimeout(() => {\n      let items = ['count'];\n      items.forEach(item => {\n        if ([item].current) {\n          [item].current.value = state[item];\n        }\n      });\n    }, 2000);\n  }, []);\n\n  const RenderOptionByFormat = () => {\n    switch (state.type) {\n      case 'posts':\n        return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Sort By:\"), __jsx(\"select\", {\n          name: \"sortBy\",\n          value: state.sortBy,\n          onChange: e => onChangeHandler(e)\n        }, __jsx(\"option\", {\n          value: \"id\"\n        }, \"ID\"), __jsx(\"option\", {\n          value: \"views\"\n        }, \"Views\"), __jsx(\"option\", {\n          value: \"likes\"\n        }, \"Likes\")), __jsx(\"p\", null, \"Categories:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: categories,\n          name: \"category\",\n          className: \"category\",\n          placeholder: \"Categories\"\n        }), __jsx(\"button\", {\n          onClick: () => onNewCategoryAddHandler()\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderCategories), __jsx(\"p\", null, \"Tags:\"), __jsx(\"div\", {\n          className: \"inputWithAddBtn\"\n        }, __jsx(\"input\", {\n          ref: tags,\n          className: \"tags\",\n          name: \"tags\",\n          placeholder: \"Tags\"\n        }), __jsx(\"button\", {\n          onClick: () => onNewTagAddHandler()\n        }, \"add\")), __jsx(\"div\", {\n          className: \"categoriesTags\"\n        }, renderTags), __jsx(\"p\", null, \"Count:\"), __jsx(\"input\", {\n          ref: count,\n          name: \"count\",\n          type: \"number\",\n          className: \"count\",\n          placeholder: \"count\",\n          value: state.count,\n          onChange: e => onChangeHandler(e)\n        }), __jsx(\"span\", null, \"Pagination:\"), __jsx(\"select\", {\n          name: \"pagination\",\n          value: state.pagination,\n          onChange: e => onChangeHandler(e)\n        }, __jsx(\"option\", {\n          value: false\n        }, \"false\"), __jsx(\"option\", {\n          value: true\n        }, \"true\")));\n        break;\n\n      case 'text':\n        return __jsx(React.Fragment, null);\n        break;\n\n      default:\n        return null;\n        break;\n    }\n  };\n\n  if (widgetSettings.open) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"widget-open-control\"\n    }, __jsx(\"p\", null, props.data.title || props.data._id || props.data.type), __jsx(\"button\", {\n      onClick: () => onOpenHandler()\n    }, widgetSettings.open ? 'open' : 'close')), __jsx(\"div\", {\n      className: \"widgetModel\"\n    }, __jsx(\"div\", {\n      className: \"widgetInfo\"\n    }, __jsx(\"label\", {\n      className: \"widgetId\"\n    }, __jsx(\"p\", null, \"ID :\"), \" \", __jsx(\"p\", null, props.data._id))), __jsx(\"p\", null, \"Title:\"), __jsx(\"input\", {\n      name: \"title\",\n      ref: title,\n      className: \"title\",\n      placeholder: \"Title\",\n      value: state.title,\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"p\", null, \"Type:\"), __jsx(\"select\", {\n      name: \"type\",\n      value: state.type,\n      onChange: e => onChangeHandler(e)\n    }, __jsx(\"option\", {\n      value: \"posts\"\n    }, \"Posts\"), __jsx(\"option\", {\n      value: \"text\"\n    }, \"Text\")), __jsx(\"p\", null, \"Position:\"), __jsx(\"select\", {\n      name: \"position\",\n      value: state.position,\n      onChange: e => onChangeHandler(e)\n    }, __jsx(\"option\", {\n      value: \"home\"\n    }, \"Home\"), __jsx(\"option\", {\n      value: \"sidebar\"\n    }, \"Sidebar\"), __jsx(\"option\", {\n      value: \"postPageSideBar\"\n    }, \"postPageSideBar\"), __jsx(\"option\", {\n      value: \"footer\"\n    }, \"footer\")), __jsx(\"p\", null, \"Text:\"), __jsx(\"textarea\", {\n      name: \"text\",\n      value: state.text,\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"p\", null, \"Text Align:\"), __jsx(\"select\", {\n      name: \"textAlign\",\n      value: state.textAlign,\n      onChange: e => onChangeHandler(e)\n    }, __jsx(\"option\", {\n      value: \"left\"\n    }, \"Left\"), __jsx(\"option\", {\n      value: \"center\"\n    }, \"Center\"), __jsx(\"option\", {\n      value: \"right\"\n    }, \"Right\")), __jsx(RenderOptionByFormat, null), __jsx(\"p\", null, \"Redirect Link:\"), __jsx(\"input\", {\n      className: \"redirectLink\",\n      name: \"redirectLink\",\n      placeholder: \"Redirect\",\n      value: state.redirectLink,\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"p\", null, \"Title for Redirect Link\"), __jsx(\"input\", {\n      className: \"redirectToTitle\",\n      name: \"redirectToTitle\",\n      placeholder: \"Title for Redirect Link\",\n      value: state.redirectToTitle,\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"div\", {\n      className: \"control\"\n    }, __jsx(\"button\", {\n      onClick: () => onSaveHandler()\n    }, \"Save\"), __jsx(\"button\", {\n      onClick: () => onDeleteHandler()\n    }, \"Delete\"))));\n  } else {\n    return __jsx(\"div\", {\n      className: \"widget-open-control\"\n    }, __jsx(\"p\", null, props.data.title || props.data._id || props.data.type), __jsx(\"button\", {\n      onClick: () => onOpenHandler()\n    }, widgetSettings.open ? 'open' : 'close'));\n  }\n};\n\nexport default WidgetModel;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/widgetsModel/WidgetModel/WidgetModel.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","deleteWidgets","getWidgets","updateWidgets","WidgetModel","props","contextData","title","categories","tags","count","pagination","redirectLink","state","setState","data","redirectToTitle","type","position","sortBy","text","textAlign","customHtml","widgetSettings","setWidgetSettings","open","onOpenHandler","onDeleteHandler","_id","then","dispatchWidgetsSettings","widgets","widgetsSettings","filter","w","onSaveHandler","res","onChangeHandler","e","target","name","value","onNewCategoryAddHandler","current","onNewTagAddHandler","deleteTagHandler","tag","deleteCategoryHandler","category","renderTags","map","renderCategories","setTimeout","items","forEach","item","RenderOptionByFormat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport { deleteWidgets, getWidgets, updateWidgets } from '../../../../_variables/ajaxVariables'\r\n\r\nconst WidgetModel = props => {\r\n    const contextData = useContext(AppContext);\r\n    const title = useRef(null)\r\n    const categories = useRef(null)\r\n    const tags = useRef(null)\r\n    const count = useRef(null)\r\n    const pagination = useRef(null)\r\n    const redirectLink = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        title: props.data.title || '',\r\n        categories: props.data.categories || [],\r\n        tags: props.data.tags || [],\r\n        count: props.data.count || 6,\r\n        pagination: props.data.pagination || false,\r\n        redirectLink: props.data.redirectLink || '',\r\n        redirectToTitle:props.data.redirectToTitle ||'',\r\n        type: props.data.type || 'posts',\r\n        position: props.data.position || 'home',\r\n        sortBy: props.data.position || '-id',\r\n        text: props.data.text || '',\r\n        textAlign:props.data.text || 'center',\r\n        customHtml: props.data.customHtml || ''\r\n    });\r\n\r\n    const [widgetSettings,setWidgetSettings] = useState({\r\n        open:false\r\n    })\r\n\r\n\r\n    const onOpenHandler = ()=>{\r\n        widgetSettings.open?setWidgetSettings({...widgetSettings,open: false}):setWidgetSettings({...widgetSettings,open: true})\r\n    }\r\n\r\n\r\n\r\n    const onDeleteHandler = () => {\r\n        deleteWidgets(props.data._id).then(() => {\r\n            contextData.dispatchWidgetsSettings({\r\n                widgets: contextData.widgetsSettings.widgets.filter(w => w._id !== props.data._id)\r\n            })\r\n        })\r\n    }\r\n    const onSaveHandler = () => {\r\n        updateWidgets(props.data._id, state).then(res => {\r\n            // let newData = res.data.updatedWidgets\r\n            // setState({ ...state, ...newData })\r\n            getWidgets('all').then(res => {\r\n                contextData.dispatchWidgetsSettings({\r\n                    widgets: [ ...res.data.widgets ]\r\n                })\r\n            })\r\n        })\r\n    }\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const onNewCategoryAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            categories: [ ...state.categories, categories.current.value ]\r\n        })\r\n        categories.current.value = ''\r\n    }\r\n    const onNewTagAddHandler = () => {\r\n        setState({\r\n            ...state,\r\n            tags: [ ...state.tags, tags.current.value ]\r\n        })\r\n        tags.current.value = ''\r\n    }\r\n    const deleteTagHandler = e => {\r\n        setState({\r\n            ...state,\r\n            tags: state.tags.filter(tag => tag !== e.target.name)\r\n        })\r\n    }\r\n    const deleteCategoryHandler = e => {\r\n        setState({\r\n            ...state,\r\n            categories: state.categories.filter(category => category !== e.target.name)\r\n        })\r\n    }\r\n\r\n    const renderTags = state.tags.map(tag => {\r\n        return (\r\n            <button name={ tag } onClick={ e => deleteTagHandler(e) }>{ tag }X</button>\r\n        )\r\n    })\r\n    const renderCategories = state.categories.map(category => {\r\n        return (\r\n            <button name={ category } onClick={ e => deleteCategoryHandler(e) }>{ category }X</button>\r\n        )\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        setTimeout(()=>{\r\n            let items= ['count']\r\n            items.forEach(item=>{\r\n                if ([item].current){\r\n                    [item].current.value=state[item]\r\n                }\r\n            })\r\n        },2000)\r\n\r\n    },[])\r\n\r\n    const RenderOptionByFormat = () => {\r\n        switch ( state.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <>\r\n                        <p>Sort By:</p>\r\n                        <select name='sortBy' value={ state.sortBy } onChange={ e => onChangeHandler(e) }>\r\n                            <option value='id'>ID</option>\r\n                            <option value='views'>Views</option>\r\n                            <option value='likes'>Likes</option>\r\n                        </select>\r\n                        <p>Categories:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ categories } name='category' className='category' placeholder='Categories'/>\r\n                            <button onClick={ () => onNewCategoryAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderCategories }\r\n                        </div>\r\n                        <p>Tags:</p>\r\n                        <div className='inputWithAddBtn'>\r\n                            <input ref={ tags } className='tags' name='tags' placeholder='Tags'/>\r\n                            <button onClick={ () => onNewTagAddHandler() }>add</button>\r\n                        </div>\r\n\r\n                        <div className='categoriesTags'>\r\n                            { renderTags }\r\n                        </div>\r\n                        <p>Count:</p>\r\n                        <input ref={count} name='count' type='number' className='count' placeholder='count' value={state.count}  onChange={ e => onChangeHandler(e) }/>\r\n                        <span>Pagination:</span>\r\n                        <select name='pagination' value={ state.pagination } onChange={ e => onChangeHandler(e) }>\r\n                            <option value={ false }>false</option>\r\n                            <option value={ true }>true</option>\r\n                        </select>\r\n                    </>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n                break\r\n            default:\r\n                return null\r\n                break\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if(widgetSettings.open){\r\n        return (\r\n            <>\r\n                <div className='widget-open-control'>\r\n                    <p>{props.data.title||props.data._id||props.data.type}</p>\r\n                    <button onClick={()=>onOpenHandler()}>{widgetSettings.open?'open':'close'}</button>\r\n                </div>\r\n            <div className='widgetModel'>\r\n                <div className='widgetInfo'>\r\n                    <label className='widgetId'><p>ID :</p> <p>{ props.data._id }</p></label>\r\n                </div>\r\n                <p>Title:</p>\r\n                <input name='title' ref={ title } className='title' placeholder='Title' value={ state.title } onChange={ e => onChangeHandler(e) }/>\r\n                <p>Type:</p>\r\n                <select name='type' value={ state.type } onChange={ e => onChangeHandler(e) }>\r\n                    <option value='posts'>Posts</option>\r\n                    <option value='text'>Text</option>\r\n                </select>\r\n                <p>Position:</p>\r\n                <select name='position' value={ state.position } onChange={ e => onChangeHandler(e) }>\r\n                    <option value='home'>Home</option>\r\n                    <option value='sidebar'>Sidebar</option>\r\n                    <option value='postPageSideBar'>postPageSideBar</option>\r\n                    <option value='footer'>footer</option>\r\n                </select>\r\n                <p>Text:</p>\r\n                <textarea name='text' value={state.text} onChange={e=>onChangeHandler(e)}/>\r\n                <p>Text Align:</p>\r\n                <select name='textAlign' value={ state.textAlign } onChange={ e => onChangeHandler(e) }>\r\n                    <option value='left'>Left</option>\r\n                    <option value='center'>Center</option>\r\n                    <option value='right'>Right</option>\r\n                </select>\r\n                <RenderOptionByFormat/>\r\n                <p>Redirect Link:</p>\r\n                <input className='redirectLink' name='redirectLink' placeholder='Redirect' value={ state.redirectLink } onChange={ e => onChangeHandler(e) }/>\r\n                <p>Title for Redirect Link</p>\r\n                <input className='redirectToTitle' name='redirectToTitle' placeholder='Title for Redirect Link' value={ state.redirectToTitle } onChange={ e => onChangeHandler(e) }/>\r\n                <div className='control'>\r\n                    <button onClick={ () => onSaveHandler() }>Save</button>\r\n                    <button onClick={ () => onDeleteHandler() }>Delete</button>\r\n                </div>\r\n            </div>\r\n                </>\r\n        );\r\n    }else {\r\n        return (\r\n            <div className='widget-open-control'>\r\n                <p>{props.data.title||props.data._id||props.data.type}</p>\r\n                <button onClick={()=>onOpenHandler()}>{widgetSettings.open?'open':'close'}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\nexport default WidgetModel;\r\n"]},"metadata":{},"sourceType":"module"}