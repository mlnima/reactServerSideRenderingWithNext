{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport Link from 'next/link';\nimport './AdminCommentsControl.scss';\n\nconst AdminCommentsControl = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n  return __jsx(\"div\", {\n    className: \"AdminCommentsControl\"\n  }, __jsx(\"div\", {\n    className: \"status\"\n  }, __jsx(Link, {\n    href: {\n      pathname: props.pathnameData,\n      query: _objectSpread({}, props.queryData, {\n        status: 'all'\n      })\n    }\n  }, __jsx(\"a\", null, \"All\")), __jsx(Link, {\n    href: {\n      pathname: props.pathnameData,\n      query: _objectSpread({}, props.queryData, {\n        status: 'approved'\n      })\n    }\n  }, __jsx(\"a\", null, \"Approved\")), __jsx(Link, {\n    href: {\n      pathname: props.pathnameData,\n      query: _objectSpread({}, props.queryData, {\n        status: 'trash'\n      })\n    }\n  }, __jsx(\"a\", null, \"Trash\")), __jsx(Link, {\n    href: {\n      pathname: props.pathnameData,\n      query: _objectSpread({}, props.queryData, {\n        status: 'pending'\n      })\n    }\n  }, __jsx(\"a\", null, \"Pending\"))));\n};\n\nexport default AdminCommentsControl;","map":null,"metadata":{},"sourceType":"module"}