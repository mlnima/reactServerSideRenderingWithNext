{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { clickPathGenerator } from '../../../../_variables/_variables';\nimport './FileManagerArea.scss';\nimport { AppContext } from '../../../../context/AppContext';\nimport withRouter from 'next/dist/client/with-router';\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg';\nimport JsLogoSvg from '../../../../static/images/fontawesome/js-square-brands.svg';\nimport SliderSvg from '../../../../static/images/fontawesome/sliders-h-solid.svg';\nimport FolderSvg from '../../../../static/images/fontawesome/folder-solid.svg';\nimport SassSvg from '../../../../static/images/fontawesome/sass-brands.svg';\nimport FileSvg from '../../../../static/images/fontawesome/file-solid.svg';\n\nconst FileManagerArea = props => {\n  const contextData = useContext(AppContext);\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n\n  const classGenerator = fileName => {\n    let nextClass = '';\n\n    if (props.data.clickedItem === clickPathGenerator(fileName, props.data.path)) {\n      nextClass = ' clickedItem';\n    } else {\n      nextClass = ' unClickedItem';\n    }\n  };\n\n  const logoDetector = fileName => {\n    if (fileName.includes('.js')) {\n      return JsLogoSvg;\n    } else if (fileName.includes('.env')) {\n      return SliderSvg;\n    } else if (!fileName.includes('.')) {\n      return FolderSvg;\n    } else if (fileName.includes('.scss')) {\n      return SassSvg;\n    } else return FileSvg;\n  };\n\n  const onClickHandler = e => {\n    let clickedItem = props.data.clickedItem;\n    let filePath = clickPathGenerator(e.currentTarget.name, props.data.path);\n\n    if (props.data.clickedItem === filePath) {\n      props.setStateHandler('clickedItem', '');\n    } else {\n      props.setStateHandler('clickedItem', filePath);\n      props.setStateHandler('path', filePath);\n    }\n  };\n\n  let renderDir = props.data.files.map(item => {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"dirItem\"\n    }, __jsx(\"button\", {\n      // ref={() => selectedItem.current[props.data.files.indexOf(item)]}\n      className: [classGenerator(item)],\n      key: item,\n      name: item,\n      onClick: e => onClickHandler(e) // onDoubleClick={(e) => onDoubleClickHandler(e)}\n      // onContextMenu={(e) => onContextMenuHandler(e)}\n\n    }, __jsx(\"img\", {\n      className: \"fontawesomeSvgLarge\",\n      src: logoDetector(item),\n      alt: \"\"\n    })), __jsx(\"p\", null, \" \", item));\n  });\n  return __jsx(\"div\", {\n    className: \"FileManagerArea\"\n  }, renderDir);\n};\n\nexport default withRouter(FileManagerArea); // <buttonref={() => selectedItem.current[props.data.files.indexOf(item)]}\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea.js"],"names":["React","useEffect","useState","useContext","useRef","clickPathGenerator","AppContext","withRouter","BarsSvg","JsLogoSvg","SliderSvg","FolderSvg","SassSvg","FileSvg","FileManagerArea","props","contextData","console","log","classGenerator","fileName","nextClass","data","clickedItem","path","logoDetector","includes","onClickHandler","e","filePath","currentTarget","name","setStateHandler","renderDir","files","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {clickPathGenerator} from '../../../../_variables/_variables';\r\nimport './FileManagerArea.scss';\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'\r\nimport JsLogoSvg from '../../../../static/images/fontawesome/js-square-brands.svg'\r\nimport SliderSvg from '../../../../static/images/fontawesome/sliders-h-solid.svg'\r\nimport FolderSvg from '../../../../static/images/fontawesome/folder-solid.svg'\r\nimport SassSvg from '../../../../static/images/fontawesome/sass-brands.svg'\r\nimport FileSvg from '../../../../static/images/fontawesome/file-solid.svg'\r\n\r\n\r\nconst FileManagerArea = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n\r\n\r\n\r\n    const classGenerator = fileName => {\r\n        let nextClass = '';\r\n        if (props.data.clickedItem === clickPathGenerator(fileName,props.data.path)) {\r\n            nextClass = ' clickedItem'\r\n        } else {\r\n            nextClass = ' unClickedItem'\r\n        }\r\n    };\r\n\r\n    const logoDetector = fileName =>{\r\n        if (fileName.includes('.js')) {\r\n            return JsLogoSvg\r\n        } else if (fileName.includes('.env')) {\r\n            return SliderSvg\r\n        } else if (!fileName.includes('.')) {\r\n            return FolderSvg\r\n        } else if (fileName.includes('.scss')) {\r\n            return SassSvg\r\n        } else return FileSvg\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onClickHandler = e => {\r\n        let clickedItem = props.data.clickedItem;\r\n        let filePath = clickPathGenerator(e.currentTarget.name,props.data.path);\r\n        if (props.data.clickedItem === filePath ){\r\n            props.setStateHandler('clickedItem','')\r\n        }else{\r\n            props.setStateHandler('clickedItem',filePath)\r\n            props.setStateHandler('path',filePath)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    let renderDir = props.data.files.map(item => {\r\n        return (\r\n            <div key={item} className='dirItem'>\r\n               <button\r\n                   // ref={() => selectedItem.current[props.data.files.indexOf(item)]}\r\n                   className={[classGenerator(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\r\n                   // onDoubleClick={(e) => onDoubleClickHandler(e)}\r\n                   // onContextMenu={(e) => onContextMenuHandler(e)}\r\n               >\r\n                   <img className='fontawesomeSvgLarge' src={ logoDetector(item) } alt=\"\"/>\r\n               </button>\r\n                <p> {item}</p>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div className='FileManagerArea'>\r\n            {renderDir}\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(FileManagerArea);\r\n\r\n// <buttonref={() => selectedItem.current[props.data.files.indexOf(item)]}\r\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\r\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>"]},"metadata":{},"sourceType":"module"}