{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../../components/layouts/AdminLayout';\nimport AddWidgetMenu from '../../../../components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetMenu';\nimport { AppContext } from '../../../../context/AppContext';\nimport WidgetModel from '../../../../components/adminIncludes/widgetsModel/WidgetModel/WidgetModel';\nimport { getSetting, getWidgets, getWidgetsWithData, updateSetting, getMultipleWidgetWithData } from '../../../../_variables/ajaxVariables';\nimport { getAbsolutePath } from '../../../../_variables/_variables';\nimport ColorSection from '../../../../components/adminIncludes/design/ColorSection';\n\nconst HomePageWidgets = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    home: [],\n    homePageSidebar: [],\n    postPageSidebar: [],\n    postsPageSidebar: [],\n    footer: [],\n    tagsPageSidebar: [],\n    categoriesPageSidebar: [],\n    actorsPageSidebar: [],\n    header: []\n  });\n  useEffect(() => {\n    if (props.widgets) {\n      contextData.dispatchWidgetsSettings(_objectSpread({}, contextData.widgetsSettings, {\n        widgets: [...props.widgets]\n      })); //=============\n    }\n  }, []);\n  const renderHomeWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'home') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderHomePageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'homePageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderPostPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'postPageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderPostsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'postsPageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderFooterWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'footer') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderTagsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'tagsPageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderCategoriesPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'categoriesPageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderActorsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'actorsPageSidebar') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  const renderHeaderPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\n    if (widget.position === 'header') {\n      return __jsx(WidgetModel, {\n        key: contextData.widgetsSettings.widgets.indexOf(widget),\n        data: widget\n      });\n    }\n  });\n  return __jsx(AdminLayout, null, __jsx(\"h1\", null, \"Widgets Settings :\"), __jsx(\"div\", {\n    className: \"colorSettingSections\"\n  }, __jsx(ColorSection, {\n    designName: \"widgetHeaderBackgroundColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetHeaderTextColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetHeaderRedirectLinkBackgroundColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetHeaderRedirectLinkTextColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetBodyBackgroundColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetBodyTextColor\"\n  }), __jsx(ColorSection, {\n    designName: \"widgetBodyBorder\"\n  })), __jsx(\"div\", {\n    id: \"HomePageWidgets\"\n  }, __jsx(\"div\", {\n    className: \"sidePanel\"\n  }, __jsx(AddWidgetMenu, null)), __jsx(\"div\", {\n    className: \"widgets\"\n  }, __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Homepage\"), renderHomeWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Header\"), renderHeaderPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Home Page Sidebar\"), renderHomePageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Post Page\"), renderPostPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Posts Page\"), renderPostsPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Tags Page\"), renderTagsPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Categories Page\"), renderCategoriesPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Actors Page\"), renderActorsPageSidebarWidgets), __jsx(\"div\", {\n    className: \"widgetAdminPanelItem\"\n  }, __jsx(\"p\", {\n    className: \"widgetAdminPanelItemHeader\"\n  }, \"Footer\"), renderFooterWidgets))));\n};\n\nHomePageWidgets.getInitialProps = async ({\n  asPath,\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let widgets;\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['all']\n  }, false, domainName);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  return {\n    widgets,\n    domainName\n  };\n};\n\nexport default HomePageWidgets;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/widgets/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","AddWidgetMenu","AppContext","WidgetModel","getSetting","getWidgets","getWidgetsWithData","updateSetting","getMultipleWidgetWithData","getAbsolutePath","ColorSection","HomePageWidgets","props","contextData","state","setState","home","homePageSidebar","postPageSidebar","postsPageSidebar","footer","tagsPageSidebar","categoriesPageSidebar","actorsPageSidebar","header","widgets","dispatchWidgetsSettings","widgetsSettings","renderHomeWidgets","map","widget","position","indexOf","renderHomePageSidebarWidgets","renderPostPageSidebarWidgets","renderPostsPageSidebarWidgets","renderFooterWidgets","renderTagsPageSidebarWidgets","renderCategoriesPageSidebarWidgets","renderActorsPageSidebarWidgets","renderHeaderPageSidebarWidgets","getInitialProps","asPath","pathname","query","req","res","err","domainName","widgetsData","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../../components/layouts/AdminLayout'\r\nimport AddWidgetMenu from '../../../../components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetMenu'\r\nimport { AppContext } from '../../../../context/AppContext'\r\nimport WidgetModel from '../../../../components/adminIncludes/widgetsModel/WidgetModel/WidgetModel';\r\nimport { getSetting, getWidgets, getWidgetsWithData, updateSetting, getMultipleWidgetWithData } from '../../../../_variables/ajaxVariables'\r\nimport { getAbsolutePath } from '../../../../_variables/_variables'\r\nimport ColorSection from '../../../../components/adminIncludes/design/ColorSection'\r\n\r\nconst HomePageWidgets = props => {\r\n\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        home: [],\r\n        homePageSidebar: [],\r\n        postPageSidebar: [],\r\n        postsPageSidebar: [],\r\n        footer: [],\r\n        tagsPageSidebar: [],\r\n        categoriesPageSidebar: [],\r\n        actorsPageSidebar: [],\r\n        header: []\r\n    })\r\n    useEffect(() => {\r\n\r\n        if (props.widgets) {\r\n            contextData.dispatchWidgetsSettings({\r\n                ...contextData.widgetsSettings,\r\n                widgets: [ ...props.widgets ]\r\n            })\r\n\r\n            //=============\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const renderHomeWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'home') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderHomePageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'homePageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderPostPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'postPageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderPostsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'postsPageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderFooterWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'footer') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderTagsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'tagsPageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderCategoriesPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'categoriesPageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderActorsPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'actorsPageSidebar') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n    const renderHeaderPageSidebarWidgets = contextData.widgetsSettings.widgets.map(widget => {\r\n        if (widget.position === 'header') {\r\n            return (\r\n                <WidgetModel key={ contextData.widgetsSettings.widgets.indexOf(widget) } data={ widget }/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <AdminLayout>\r\n\r\n            <h1>Widgets Settings :</h1>\r\n            <div className='colorSettingSections'>\r\n                <ColorSection designName='widgetHeaderBackgroundColor'/>\r\n                <ColorSection designName='widgetHeaderTextColor'/>\r\n                <ColorSection designName='widgetHeaderRedirectLinkBackgroundColor'/>\r\n                <ColorSection designName='widgetHeaderRedirectLinkTextColor'/>\r\n                <ColorSection designName='widgetBodyBackgroundColor'/>\r\n                <ColorSection designName='widgetBodyTextColor'/>\r\n                <ColorSection designName='widgetBodyBorder'/>\r\n            </div>\r\n\r\n\r\n\r\n            <div id='HomePageWidgets'>\r\n                <div className=\"sidePanel\">\r\n                    <AddWidgetMenu/>\r\n                </div>\r\n                <div className=\"widgets\">\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Homepage</p>\r\n                        { renderHomeWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Header</p>\r\n                        { renderHeaderPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Home Page Sidebar</p>\r\n                        { renderHomePageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Post Page</p>\r\n                        { renderPostPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Posts Page</p>\r\n                        { renderPostsPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Tags Page</p>\r\n                        { renderTagsPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Categories Page</p>\r\n                        { renderCategoriesPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Actors Page</p>\r\n                        { renderActorsPageSidebarWidgets }\r\n                    </div>\r\n                    <div className='widgetAdminPanelItem'>\r\n                        <p className='widgetAdminPanelItemHeader'>Footer</p>\r\n                        { renderFooterWidgets }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nHomePageWidgets.getInitialProps = async ({ asPath, pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : '';\r\n    let widgets;\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'all' ] }, false, domainName)\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n\r\n    return { widgets, domainName }\r\n}\r\n\r\nexport default HomePageWidgets;\r\n"]},"metadata":{},"sourceType":"module"}