{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\n\nvar metaPage = function metaPage(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    metaData: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(function (siteIdentity) {\n        return _objectSpread({}, siteIdentity, {}, props.identity);\n      });\n    }\n  }, [props]);\n  var renderMetas = state.metaData.map(function (meta) {\n    if (meta.count > 0) {\n      return __jsx(CategoryElement, {\n        key: meta._id,\n        imageUrl: meta.imageUrl,\n        noImageUrl: meta.noImageUrl,\n        name: meta.name,\n        count: meta.count\n      });\n    }\n  });\n  useEffect(function () {\n    console.log(props);\n  }, []);\n  return __jsx(AppLayout, null, __jsx(\"div\", null, \"xxx\"), renderMetas);\n};\n\nmetaPage.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, metaData, metaDetail, identityData, navigationData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          metaData = [];\n          metaDetail = {\n            type: query.meta,\n            pageNo: 1,\n            size: 100,\n            searchForImageIn: 'categories'\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 5:\n          identityData = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 8:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default metaPage;","map":null,"metadata":{},"sourceType":"module"}