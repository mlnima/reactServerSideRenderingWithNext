{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nexport const updateSetting = async (type, data) => {\n  const body = {\n    token: localStorage.wt,\n    type,\n    data\n  };\n  return await axios.post(window.location.origin + '/api/v1/settings/update', body);\n};\nexport const getSetting = async (type, cache, domainName) => {\n  const body = {\n    type\n  };\n  return await axios.post(domainName + `/api/v1/settings/get?type=${type}`, body);\n};\nexport const addNewWidget = async data => {\n  const body = {\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(window.location.origin + '/api/v1/settings/addWidget', body);\n};\nexport const getWidgets = async (position, cache, domainName) => {\n  const body = {\n    position\n  };\n  return await axios.post(domainName + '/api/v1/settings/getWidget', body);\n};\nexport const getMultipleWidgetWithData = async (widgets, cache, domainName) => {\n  const body = _objectSpread({}, widgets);\n\n  return await axios.post(domainName + '/api/v1/settings/getMultipleWidgetWithData', body);\n};\nexport const getMultipleSetting = async (settings, cache, domainName) => {\n  const isCache = cache ? '' : `?cache=${Date.now()}`;\n\n  const body = _objectSpread({}, settings);\n\n  return await axios.post(domainName + `/api/v1/settings/getMultiple`, body);\n};\nexport const getWidgetsWithData = async (position, domainName) => {\n  const body = {\n    position\n  };\n  return await axios.post(domainName + '/api/v1/settings/getWidgetsWithData', body);\n};\nexport const updateWidgets = async (id, data) => {\n  const body = {\n    id,\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(window.location.origin + '/api/v1/settings/updateWidget', body);\n};\nexport const deleteWidgets = async id => {\n  const body = {\n    id,\n    token: localStorage.wt\n  };\n  return await axios.post(window.location.origin + '/api/v1/settings/deleteWidget', body);\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/ajaxVariables.js"],"names":["axios","updateSetting","type","data","body","token","localStorage","wt","post","window","location","origin","getSetting","cache","domainName","addNewWidget","getWidgets","position","getMultipleWidgetWithData","widgets","getMultipleSetting","settings","isCache","Date","now","getWidgetsWithData","updateWidgets","id","deleteWidgets"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const updateSetting = async (type, data) => {\r\n    const body = {\r\n        token: localStorage.wt,\r\n        type,\r\n        data\r\n    };\r\n    return await axios.post(window.location.origin + '/api/v1/settings/update', body)\r\n};\r\n\r\n\r\nexport const getSetting = async (type, cache, domainName) => {\r\n\r\n    const body = {\r\n        type,\r\n    };\r\n    return await axios.post(domainName + `/api/v1/settings/get?type=${ type }`, body)\r\n};\r\n\r\n\r\nexport const addNewWidget = async (data) => {\r\n    const body = {\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(window.location.origin + '/api/v1/settings/addWidget', body)\r\n}\r\n\r\n\r\nexport const getWidgets = async (position,cache, domainName) => {\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(domainName + '/api/v1/settings/getWidget', body)\r\n}\r\n\r\n\r\nexport const getMultipleWidgetWithData = async (widgets, cache, domainName) => {\r\n    const body = {\r\n        ...widgets,\r\n    };\r\n    return await axios.post(domainName + '/api/v1/settings/getMultipleWidgetWithData', body)\r\n}\r\n\r\n\r\nexport const getMultipleSetting = async (settings, cache, domainName) => {\r\n    const isCache = cache ? '' : `?cache=${ Date.now() }`\r\n    const body = {\r\n        ...settings\r\n    };\r\n    return await axios.post(domainName + `/api/v1/settings/getMultiple`, body)\r\n};\r\n\r\n\r\nexport const getWidgetsWithData = async (position,domainName) => {\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(domainName + '/api/v1/settings/getWidgetsWithData', body)\r\n}\r\n\r\n\r\nexport const updateWidgets = async (id, data) => {\r\n    const body = {\r\n        id,\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(window.location.origin + '/api/v1/settings/updateWidget', body)\r\n}\r\n\r\n\r\nexport const deleteWidgets = async (id) => {\r\n    const body = {\r\n        id,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(window.location.origin + '/api/v1/settings/deleteWidget', body)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}