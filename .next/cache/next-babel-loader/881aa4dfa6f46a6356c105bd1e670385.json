{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport StarSvg from '../../../../static/images/fontawesome/star-solid.svg';\nimport TagSvg from '../../../../static/images/fontawesome/tag-solid.svg';\nimport CategorySvg from '../../../../static/images/fontawesome/folder-solid.svg';\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg';\n\nvar TagsAndCategoriesActors = function TagsAndCategoriesActors(props) {\n  var _useState = useState({\n    data: props.data || [],\n    type: props.type,\n    fontawesome: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var fontawesome = '';\n\n    switch (props.type) {\n      case 'actors':\n        fontawesome = 'star';\n        break;\n\n      case 'tags':\n        fontawesome = 'tags';\n        break;\n\n      case 'categories':\n        fontawesome = 'folder';\n        break;\n    }\n\n    setState(_objectSpread({}, state, {\n      fontawesome: fontawesome\n    }));\n  }, []); //\n  // useEffect(() => {\n  //     console.log( props)\n  //     console.log( state)\n  // }, []);\n\n  var renderData = props.data.map(function (item) {\n    var typeForUrl = state.type === 'categories' ? 'category' : state.type === 'tags' ? 'tag' : state.type === 'actors' ? 'actor' : 'tag';\n    var path = \"/posts?\".concat(typeForUrl, \"=\").concat(item);\n    var icon = state.type === 'categories' ? CategorySvg : state.type === 'tags' ? TagSvg : state.type === 'actors' ? StarSvg : TagSvg;\n    return __jsx(\"div\", {\n      className: \"post-meta-item\"\n    }, __jsx(\"img\", {\n      className: \"fontawesomeSvgSmall\",\n      src: icon,\n      alt: \"\"\n    }), __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", {\n      className: state.type\n    }, item)));\n  });\n\n  if (props.data.length >= 1) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, __jsx(\"span\", null, \" \", state.type.charAt(0).toUpperCase() + state.type.substring(1), \":\"), __jsx(\"div\", {\n      className: \"content\"\n    }, renderData));\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":null,"metadata":{},"sourceType":"module"}