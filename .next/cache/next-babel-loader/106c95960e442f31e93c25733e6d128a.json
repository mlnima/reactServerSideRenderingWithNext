{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useContext, useState, useRef } from 'react';\nimport Head from \"next/head\";\nimport '../../styles/styles.scss';\nimport TopBar from \"../adminIncludes/TopBar/AdminTopBar\";\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { withRouter } from \"next/router\";\nimport Loading from \"../includes/Loading/Loading\";\n\nvar Panel = function Panel(props) {\n  var contextData = useContext(AppContext);\n  var container = useRef(null);\n  var Admin = useRef(null);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      dispatchState = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth > 768) {\n      contextData.dispatchSettings(function (settings) {\n        return _objectSpread({}, settings, {\n          adminPanelSideBar: true\n        });\n      });\n    }\n  }, []); // useEffect(()=>{\n  //     if (contextData.userData.role !=='administrator' && props.router.pathname.includes('/admin')){\n  //         props.router.push('/')\n  //     }\n  // },[ props.router]);\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin Panel\"), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#000000\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    ref: container,\n    className: \"container\"\n  }, __jsx(TopBar, null), __jsx(SideBar, null), __jsx(\"div\", {\n    ref: Admin,\n    className: \"Admin\"\n  }, props.children), __jsx(Loading, null)));\n};\n\nexport default withRouter(Panel);","map":null,"metadata":{},"sourceType":"module"}