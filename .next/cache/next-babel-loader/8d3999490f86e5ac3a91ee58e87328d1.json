{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome'; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nvar Navigation = function Navigation() {\n  var navigation = useRef(null);\n\n  var _useState = useState({\n    isOpen: false\n  }),\n      navigationData = _useState[0],\n      setNavigationData = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(function () {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n      } else {\n        navigation.current.style.display = 'none';\n      }\n    }\n  }, [navigationData.isOpen]);\n\n  var onNavigationMobileBtnClickHandler = function onNavigationMobileBtnClickHandler() {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    className: \"navigationMobileBtn\",\n    onClick: function onClick() {\n      return onNavigationMobileBtnClickHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: navigationData.isOpen ? 'times' : 'bars'\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Home\")), __jsx(Link, {\n    href: \"/categories\"\n  }, __jsx(\"a\", null, \"Categories\")), __jsx(Link, {\n    href: \"/tags\"\n  }, __jsx(\"a\", null, \"Tags\"))));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Navigation/Navigation.js"],"names":["React","useState","useRef","useEffect","Link","FA","Navigation","navigation","isOpen","navigationData","setNavigationData","window","innerWidth","current","style","display","onNavigationMobileBtnClickHandler"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf,C,CACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;;AADqB,kBAEyBD,QAAQ,CAAC;AACnDO,IAAAA,MAAM,EAAE;AAD2C,GAAD,CAFjC;AAAA,MAEbC,cAFa;AAAA,MAEGC,iBAFH;;AAMrBP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AACzBF,MAAAA,iBAAiB,mBACVD,cADU;AAEbD,QAAAA,MAAM,EAAE;AAFK,SAAjB;AAKH,KAND,MAMO;AACHE,MAAAA,iBAAiB,mBACVD,cADU;AAEbD,QAAAA,MAAM,EAAE;AAFK,SAAjB;AAIH;AACJ,GAbQ,EAaN,EAbM,CAAT;AAeAL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAII,UAAU,CAACM,OAAf,EAAwB;AACpB,UAAIJ,cAAc,CAACD,MAAnB,EAA2B;AACvBD,QAAAA,UAAU,CAACM,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AACH,OAFD,MAEO;AACHR,QAAAA,UAAU,CAACM,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AACH;AACJ;AACJ,GARQ,EAQN,CAAEN,cAAc,CAACD,MAAjB,CARM,CAAT;;AAUA,MAAMQ,iCAAiC,GAAG,SAApCA,iCAAoC,GAAM;AAC5CP,IAAAA,cAAc,CAACD,MAAf,GAAwBE,iBAAiB,mBAAMD,cAAN;AAAsBD,MAAAA,MAAM,EAAE;AAA9B,OAAzC,GAAkFE,iBAAiB,mBAAMD,cAAN;AAAsBD,MAAAA,MAAM,EAAE;AAA9B,OAAnG;AACH,GAFD;;AAIA,SACI,4BACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAG;AAAA,aAAMQ,iCAAiC,EAAvC;AAAA;AAAlD,KAA8F,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAGP,cAAc,CAACD,MAAf,GAAwB,OAAxB,GAAkC;AAA3E,IAA9F,CADJ,EAGI;AAAK,IAAA,GAAG,EAAGD,UAAX;AAAwB,IAAA,SAAS,EAAC;AAAlC,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAe,wBAAf,CADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAyB,8BAAzB,CAFJ,EAGI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAmB,wBAAnB,CAHJ,CAHJ,CADJ;AAWH,CA9CD;;AAgDA,eAAeD,UAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\n// import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\r\n\r\nconst Navigation = () => {\r\n    const navigation = useRef(null)\r\n    const [ navigationData, setNavigationData ] = useState({\r\n        isOpen: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 768) {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: false\r\n            });\r\n\r\n        } else {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: true\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (navigation.current) {\r\n            if (navigationData.isOpen) {\r\n                navigation.current.style.display = 'flex'\r\n            } else {\r\n                navigation.current.style.display = 'none'\r\n            }\r\n        }\r\n    }, [ navigationData.isOpen ]);\r\n\r\n    const onNavigationMobileBtnClickHandler = () => {\r\n        navigationData.isOpen ? setNavigationData({ ...navigationData, isOpen: false }) : setNavigationData({ ...navigationData, isOpen: true })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button className='navigationMobileBtn' onClick={ () => onNavigationMobileBtnClickHandler() }><FA className='fontawesomeMedium' name={ navigationData.isOpen ? 'times' : 'bars' }/></button>\r\n\r\n            <div ref={ navigation } className='Navigation'>\r\n                <Link href='/'><a>Home</a></Link>\r\n                <Link href='/categories'><a>Categories</a></Link>\r\n                <Link href='/tags'><a>Tags</a></Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}