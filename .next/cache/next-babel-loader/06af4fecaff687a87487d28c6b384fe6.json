{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text';\nimport PaginationComponent from '../components/includes/PaginationComponent/PaginationComponent';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport HomePageSidebar from '../components/includes/HomePageSidebar/HomePageSidebar';\n\nconst Home = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.identity.title || '',\n    themeColor: props.identity.themeColor || '',\n    description: props.identity.description || '',\n    keywords: props.identity.keywords || [],\n    homePageH1: props.identity.homePageH1 || 'H1 element',\n    style: {}\n  });\n  useEffect(() => {\n    console.log(props);\n\n    if (props.identity.homePageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  const renderWidgets = props.widgets.map(widget => {\n    switch (widget.type) {\n      case 'posts':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          component: Posts,\n          posts: widget.posts,\n          title: widget.title,\n          redirectLink: widget.redirectLink,\n          redirectToTitle: widget.redirectToTitle,\n          pagination: widget.pagination\n        });\n        break;\n\n      case 'text':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          title: widget.title,\n          mainLinkUrl: \"/posts/\",\n          redirectToTitle: \"More videos\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.homePageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(\"h1\", null, state.homePageH1), renderWidgets), __jsx(HomePageSidebar, {\n    isActive: props.identity.homePageSidebar\n  }))));\n};\n\nHome.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let widgets;\n\n  try {\n    const identityData = await getSetting('identity');\n    const navigationData = await getSetting('navigation');\n    const widgetsData = [...(await getWidgetsWithData('all')), await getWidgetsWithData('all')];\n    identity = identityData.data.setting ? identityData.data.setting.data : {};\n    navigation = navigationData.data.setting ? navigationData.data.setting : {};\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    identity,\n    navigation,\n    widgets\n  };\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","Widget","Posts","withRouter","getPosts","Head","axios","getSetting","getWidgets","getWidgetsWithData","Text","PaginationComponent","SiteSettingSetter","HomePageSidebar","Home","props","contextData","state","setState","title","identity","themeColor","description","keywords","homePageH1","style","console","log","homePageSidebar","gridArea","renderWidgets","widgets","map","widget","type","_id","text","textAlign","posts","redirectLink","redirectToTitle","pagination","getInitialProps","pathname","query","req","res","err","navigation","identityData","navigationData","widgetsData","data","setting","e","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport Widget from \"../components/includes/Widget/Widget\";\r\nimport Posts from \"../components/includes/Posts/Posts\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\r\nimport Head from \"next/head\";\r\nimport axios from \"axios\";\r\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\r\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text'\r\nimport PaginationComponent from '../components/includes/PaginationComponent/PaginationComponent'\r\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport HomePageSidebar from '../components/includes/HomePageSidebar/HomePageSidebar'\r\n\r\nconst Home = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        title: props.identity.title || '',\r\n        themeColor: props.identity.themeColor || '',\r\n        description: props.identity.description || '',\r\n        keywords: props.identity.keywords || [],\r\n        homePageH1: props.identity.homePageH1 || 'H1 element',\r\n        style:{}\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props )\r\n        if (props.identity.homePageSidebar){\r\n            setState({\r\n                style: {\r\n                    gridArea:'content'\r\n                }\r\n            })\r\n        }\r\n    }, [props]);\r\n\r\n    const renderWidgets = props.widgets.map(widget => {\r\n        switch ( widget.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } component={ Posts } posts={ widget.posts } title={ widget.title } redirectLink={ widget.redirectLink } redirectToTitle={ widget.redirectToTitle }\r\n                            pagination={ widget.pagination }/>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } title={ widget.title } mainLinkUrl='/posts/' redirectToTitle='More videos'/>\r\n                )\r\n                break\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        <AppLayout>\r\n            <SiteSettingSetter { ...props }/>\r\n            <div  style={state.style} className={ props.identity.homePageSidebar ? 'content withSidebar':'content withOutSidebar'}>\r\n                <div className='HomePage'>\r\n                    <h1>{ state.homePageH1 }</h1>\r\n                    { renderWidgets }\r\n                </div>\r\n                <HomePageSidebar isActive={props.identity.homePageSidebar}/>\r\n            </div>\r\n\r\n        </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n\r\n    try {\r\n        const identityData = await getSetting('identity');\r\n        const navigationData = await getSetting('navigation');\r\n        const widgetsData = [...await getWidgetsWithData('all'),await getWidgetsWithData('all')]\r\n\r\n        identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n        navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n        widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    } catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { identity, navigation, widgets }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}