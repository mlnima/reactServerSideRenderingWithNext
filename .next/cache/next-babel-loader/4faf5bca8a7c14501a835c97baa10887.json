{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\n\nconst categories = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    metaData: []\n  }); // useEffect(() => {\n  //     console.log( props)\n  //     setState({\n  //         ...state,\n  //         metaData: props.categories || []\n  //     })\n  // }, []);\n\n  console.log(props);\n  useEffect(() => {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(siteIdentity => _objectSpread({}, siteIdentity, {}, props.identity));\n    }\n  }, [props]);\n  const renderCategories = state.metaData.map(meta => {\n    return __jsx(\"div\", {\n      className: \"category-item\"\n    }, __jsx(\"p\", null, meta));\n  });\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"categories\"\n  }, renderCategories));\n};\n\ncategories.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let categories = [];\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n\n  if (query.meta) {\n    const categoriesData = await getMeta({\n      type: query.meta,\n      pageNo: 1,\n      size: 100\n    });\n    categories = categoriesData.data.meta ? categoriesData.data.meta : [];\n  }\n\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  return {\n    identity,\n    navigation,\n    query,\n    categories\n  };\n};\n\nexport default withRouter(categories);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","AppContext","getMeta","withRouter","categories","props","contextData","state","setState","metaData","console","log","navigation","dispatchNavigationData","data","identity","dispatchSiteIdentity","siteIdentity","renderCategories","map","meta","getInitialProps","pathname","query","req","res","err","identityData","navigationData","categoriesData","type","pageNo","size","setting"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAAQC,OAAR,QAAsB,wCAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,WAAW,GAAGT,UAAU,CAACI,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEM,KAAF;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC;AACjCa,IAAAA,QAAQ,EAAC;AADwB,GAAD,CAApC,CAFwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,CAACO,UAAV,EAAsB;AAClBN,MAAAA,WAAW,CAACO,sBAAZ,CAAmCR,KAAK,CAACO,UAAN,CAAiBE,IAApD;AACH;;AACD,QAAIT,KAAK,CAACU,QAAV,EAAoB;AAChBT,MAAAA,WAAW,CAACU,oBAAZ,CAAiCC,YAAY,sBACtCA,YADsC,MAEtCZ,KAAK,CAACU,QAFgC,CAA7C;AAIH;AACJ,GAVQ,EAUN,CAAEV,KAAF,CAVM,CAAT;AAYA,QAAMa,gBAAgB,GAAGX,KAAK,CAACE,QAAN,CAAeU,GAAf,CAAmBC,IAAI,IAAE;AAC9C,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,iBAAIA,IAAJ,CADJ,CADJ;AAKH,GANwB,CAAzB;AAQA,SACI,MAAC,SAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKF,gBADL,CADJ,CADJ;AAOH,CA1CD;;AA4CAd,UAAU,CAACiB,eAAX,GAA6B,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,GAAnB;AAAwBC,EAAAA,GAAxB;AAA6BC,EAAAA;AAA7B,CAAP,KAA6C;AACtE,MAAId,UAAJ;AACA,MAAIG,QAAJ;AACA,MAAIX,UAAU,GAAG,EAAjB;AACA,QAAMuB,YAAY,GAAG,MAAM3B,UAAU,CAAC,UAAD,CAArC;AACA,QAAM4B,cAAc,GAAG,MAAM5B,UAAU,CAAC,YAAD,CAAvC;;AAGA,MAAIuB,KAAK,CAACH,IAAV,EAAe;AACX,UAAMS,cAAc,GAAG,MAAO3B,OAAO,CAAC;AAClC4B,MAAAA,IAAI,EAACP,KAAK,CAACH,IADuB;AAElCW,MAAAA,MAAM,EAAC,CAF2B;AAGlCC,MAAAA,IAAI,EAAC;AAH6B,KAAD,CAArC;AAKA5B,IAAAA,UAAU,GAAGyB,cAAc,CAACf,IAAf,CAAoBM,IAApB,GAA2BS,cAAc,CAACf,IAAf,CAAoBM,IAA/C,GAAsD,EAAnE;AACH;;AAGDL,EAAAA,QAAQ,GAAGY,YAAY,CAACb,IAAb,CAAkBmB,OAAlB,GAA4BN,YAAY,CAACb,IAAb,CAAkBmB,OAAlB,CAA0BnB,IAAtD,GAA6D,EAAxE;AACAF,EAAAA,UAAU,GAAGgB,cAAc,CAACd,IAAf,CAAoBmB,OAApB,GAA8BL,cAAc,CAACd,IAAf,CAAoBmB,OAAlD,GAA4D,EAAzE;AACA,SAAO;AAAElB,IAAAA,QAAF;AAAYH,IAAAA,UAAZ;AAAuBW,IAAAA,KAAvB;AAA6BnB,IAAAA;AAA7B,GAAP;AACH,CArBD;;AAsBA,eAAeD,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport {getMeta} from '../../../_variables/ajaxPostsVariables'\r\nimport withRouter from 'next/dist/client/with-router';\r\n\r\nconst categories = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData:[]\r\n    });\r\n    // useEffect(() => {\r\n    //     console.log( props)\r\n    //     setState({\r\n    //         ...state,\r\n    //         metaData: props.categories || []\r\n    //     })\r\n    // }, []);\r\n\r\n    console.log(props )\r\n\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderCategories = state.metaData.map(meta=>{\r\n        return(\r\n            <div className='category-item'>\r\n                <p>{meta}</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='categories'>\r\n                {renderCategories}\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) =>{\r\n    let navigation;\r\n    let identity;\r\n    let categories = []\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n\r\n\r\n    if (query.meta){\r\n        const categoriesData = await  getMeta({\r\n            type:query.meta,\r\n            pageNo:1,\r\n            size:100\r\n        })\r\n        categories = categoriesData.data.meta ? categoriesData.data.meta : []\r\n    }\r\n\r\n\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    return { identity, navigation,query,categories }\r\n}\r\nexport default withRouter(categories);\r\n"]},"metadata":{},"sourceType":"module"}