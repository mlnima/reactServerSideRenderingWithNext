{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from 'react-fontawesome';\nimport Link from 'next/link';\nimport withRouter from 'next/dist/client/with-router';\n\nvar FilterPagination = function FilterPagination(props) {\n  var contextData = useContext(AppContext);\n  var currentPageInput = useRef(null);\n  var size = useRef(null);\n\n  var _useState = useState(props.getPostsData.pageNo),\n      targetInputPage = _useState[0],\n      setTargetInputPage = _useState[1]; // const [ state, setState ] = useState({\n  //     totalPosts: 0,\n  //     perPage: 0,\n  //     totalPage: 0,\n  //     currentPage: 1\n  // });\n  // useEffect(()=>{\n  //     currentPageInput.current.value = contextData.postsData.pageNo\n  //     size.current.value = contextData.postsData.size\n  // },[contextData.postsData.pageNo]);\n\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n\n  var nextPage = function nextPage() {\n    var nextPage = contextData.adminPostsData.pageNo + 1;\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: nextPage\n    }));\n  };\n\n  var previousPage = function previousPage() {\n    if (contextData.adminPostsData.pageNo - 1 <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: contextData.adminPostsData.pageNo - 1\n      }));\n    }\n  };\n\n  var lastPage = function lastPage() {\n    var lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size);\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: lastPage\n    }));\n  };\n\n  var firstPage = function firstPage() {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: 1\n    }));\n  };\n\n  var changePageNoManually = function changePageNoManually() {\n    if (currentPageInput.current.value <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n      currentPageInput.current.value = 1;\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: currentPageInput.current.value\n      }));\n    }\n  };\n\n  var changeSizeHandler = function changeSizeHandler() {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      size: parseInt(size.current.value)\n    }));\n  };\n\n  useEffect(function () {\n    if (currentPageInput.current) {\n      console.log(currentPageInput.current.value);\n    }\n  }, [currentPageInput.current]);\n  return __jsx(\"div\", {\n    className: \"FilterPagination\"\n  }, __jsx(\"div\", {\n    className: \"pagesNavigation\"\n  }, __jsx(\"label\", {\n    className: \"totalPosts\"\n  }, contextData.adminPostsData.totalPosts, \" items\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return firstPage();\n    },\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-left\"\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-left\"\n  })), __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    placeholder: contextData.adminPostsData.pageNo,\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-right\"\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return lastPage();\n    },\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-right\"\n  }))), __jsx(\"div\", {\n    className: \"pagesNavigation\"\n  }, __jsx(\"label\", {\n    className: \"totalPosts\"\n  }, props.postsSource.totalCount, \" items\"), __jsx(Link, {\n    key: \"...1\",\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-left\"\n  }))), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: props.getPostsData.pageNo + -1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-left\"\n  }))), __jsx(\"div\", null, __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    value: props.getPostsData.pageNo,\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: currentPageInput.current ? parseInt(currentPageInput.current.value) : 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, \"GO\"))), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: props.getPostsData.pageNo + 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-right\"\n  }))), __jsx(Link, {\n    key: \"...\".concat(Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))),\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        page: Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-right\"\n  })))));\n};\n\nFilterPagination.getInitialProps = function (ctx) {\n  return {\n    ctx: ctx\n  };\n};\n\nexport default withRouter(FilterPagination);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterPagination.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FA","Link","withRouter","FilterPagination","props","contextData","currentPageInput","size","getPostsData","pageNo","targetInputPage","setTargetInputPage","console","log","nextPage","adminPostsData","dispatchAdminPostsData","previousPage","lastPage","Math","floor","totalPosts","firstPage","changePageNoManually","current","value","changeSizeHandler","parseInt","postsSource","totalCount","pathname","router","query","page","ceil","getInitialProps","ctx"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAC9B,MAAMC,WAAW,GAAGR,UAAU,CAACE,UAAD,CAA9B;AACA,MAAIO,gBAAgB,GAAGR,MAAM,CAAC,IAAD,CAA7B;AACA,MAAIS,IAAI,GAAGT,MAAM,CAAC,IAAD,CAAjB;;AAH8B,kBAKeF,QAAQ,CAACQ,KAAK,CAACI,YAAN,CAAmBC,MAApB,CALvB;AAAA,MAKvBC,eALuB;AAAA,MAKPC,kBALO,iBAM9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAaT,KAAb;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAKA,MAAIU,QAAQ,GAAG,oBAAM;AAEjB,QAAMA,QAAQ,GAAGT,WAAW,CAACU,cAAZ,CAA2BN,MAA3B,GAAoC,CAArD;AACAJ,IAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,MAAAA,MAAM,EAAEK;AAFZ;AAMH,GATD;;AAWA,MAAIG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACrB,QAAKZ,WAAW,CAACU,cAAZ,CAA2BN,MAA3B,GAAoC,CAArC,IAA2C,CAA/C,EAAkD;AAC9CJ,MAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,QAAAA,MAAM,EAAE;AAFZ;AAIH,KALD,MAKO;AACHJ,MAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,QAAAA,MAAM,EAAEJ,WAAW,CAACU,cAAZ,CAA2BN,MAA3B,GAAoC;AAFhD;AAIH;AAEJ,GAbD;;AAeA,MAAIS,QAAQ,GAAG,oBAAM;AACjB,QAAMA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWf,WAAW,CAACU,cAAZ,CAA2BM,UAA3B,GAAwChB,WAAW,CAACU,cAAZ,CAA2BR,IAA9E,CAAjB;AACAF,IAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,MAAAA,MAAM,EAAES;AAFZ;AAIH,GAND;;AAQA,MAAII,SAAS,GAAG,SAAZA,SAAY,GAAM;AAClBjB,IAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,MAAAA,MAAM,EAAE;AAFZ;AAIH,GALD;;AAOA,MAAIc,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC7B,QAAIjB,gBAAgB,CAACkB,OAAjB,CAAyBC,KAAzB,IAAkC,CAAtC,EAAyC;AACrCpB,MAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,QAAAA,MAAM,EAAE;AAFZ;AAIAH,MAAAA,gBAAgB,CAACkB,OAAjB,CAAyBC,KAAzB,GAAiC,CAAjC;AACH,KAND,MAMO;AACHpB,MAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIN,QAAAA,MAAM,EAAEH,gBAAgB,CAACkB,OAAjB,CAAyBC;AAFrC;AAIH;AACJ,GAbD;;AAeA,MAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC1BrB,IAAAA,WAAW,CAACW,sBAAZ,mBACOX,WAAW,CAACU,cADnB;AAEIR,MAAAA,IAAI,EAAEoB,QAAQ,CAACpB,IAAI,CAACiB,OAAL,CAAaC,KAAd;AAFlB;AAIH,GALD;;AAQJ9B,EAAAA,SAAS,CAAC,YAAI;AACV,QAAIW,gBAAgB,CAACkB,OAArB,EAA6B;AACzBZ,MAAAA,OAAO,CAACC,GAAR,CAAYP,gBAAgB,CAACkB,OAAjB,CAAyBC,KAArC;AACH;AACJ,GAJQ,EAIP,CAAEnB,gBAAgB,CAACkB,OAAnB,CAJO,CAAT;AAOI,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAgCnB,WAAW,CAACU,cAAZ,CAA2BM,UAA3D,WADJ,EAEI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAMC,SAAS,EAAf;AAAA,KAAlB;AAAsC,IAAA,SAAS,EAAC;AAAhD,KAA4D,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAA5D,CAFJ,EAGI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAML,YAAY,EAAlB;AAAA,KAAlB;AAAyC,IAAA,SAAS,EAAC;AAAnD,KAA+D,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAA/D,CAHJ,EAII;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAmC,IAAA,WAAW,EAAGZ,WAAW,CAACU,cAAZ,CAA2BN,MAA5E;AAAqF,IAAA,GAAG,EAAGH,gBAA3F;AAA8G,IAAA,IAAI,EAAC,QAAnH;AAA4H,IAAA,GAAG,EAAG;AAAlI,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAMQ,QAAQ,EAAd;AAAA,KAAlB;AAAqC,IAAA,SAAS,EAAC;AAA/C,KAA2D,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAA3D,CALJ,EAMI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAMI,QAAQ,EAAd;AAAA,KAAlB;AAAqC,IAAA,SAAS,EAAC;AAA/C,KAA2D,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAA3D,CANJ,CADJ,EASI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAgCd,KAAK,CAACwB,WAAN,CAAkBC,UAAlD,WADJ,EAEI,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAE;AACnBC,MAAAA,QAAQ,EAAC1B,KAAK,CAAC0B,QAAN,IAAkB1B,KAAK,CAAC2B,MAAN,CAAaD,QADrB;AAC8BE,MAAAA,KAAK,oBAAK5B,KAAK,CAAC4B,KAAX;AAAiBC,QAAAA,IAAI,EAAC;AAAtB;AADnC;AAAvB,KAEG;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyB,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAzB,CAFH,CAFJ,EAOI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRH,MAAAA,QAAQ,EAAC1B,KAAK,CAAC0B,QAAN,IAAkB1B,KAAK,CAAC2B,MAAN,CAAaD,QADhC;AACyCE,MAAAA,KAAK,oBAAK5B,KAAK,CAAC4B,KAAX;AAAiBC,QAAAA,IAAI,EAAC7B,KAAK,CAACI,YAAN,CAAmBC,MAAnB,GAA2B,CAAC;AAAlD;AAD9C;AAAZ,KAEG;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyB,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAzB,CAFH,CAPJ,EAYI,mBACI;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAmC,IAAA,KAAK,EAAGL,KAAK,CAACI,YAAN,CAAmBC,MAA9D;AAAuE,IAAA,GAAG,EAAGH,gBAA7E;AAAgG,IAAA,IAAI,EAAC,QAArG;AAA8G,IAAA,GAAG,EAAG;AAApH,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRwB,MAAAA,QAAQ,EAAC1B,KAAK,CAAC0B,QAAN,IAAkB1B,KAAK,CAAC2B,MAAN,CAAaD,QADhC;AACyCE,MAAAA,KAAK,oBAAK5B,KAAK,CAAC4B,KAAX;AAAiBC,QAAAA,IAAI,EAAC3B,gBAAgB,CAACkB,OAAjB,GAAyBG,QAAQ,CAACrB,gBAAgB,CAACkB,OAAjB,CAAyBC,KAA1B,CAAjC,GAAkE;AAAxF;AAD9C;AAAZ,KAEG;AAAG,IAAA,SAAS,EAAC;AAAb,UAFH,CAFJ,CAZJ,EAqBI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRK,MAAAA,QAAQ,EAAC1B,KAAK,CAAC0B,QAAN,IAAkB1B,KAAK,CAAC2B,MAAN,CAAaD,QADhC;AACyCE,MAAAA,KAAK,oBAAK5B,KAAK,CAAC4B,KAAX;AAAiBC,QAAAA,IAAI,EAAC7B,KAAK,CAACI,YAAN,CAAmBC,MAAnB,GAA2B;AAAjD;AAD9C;AAAZ,KAEG;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyB,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAzB,CAFH,CArBJ,EA0BI,MAAC,IAAD;AAAM,IAAA,GAAG,eAAQU,IAAI,CAACe,IAAL,CAAUP,QAAQ,CAACvB,KAAK,CAACwB,WAAN,CAAkBC,UAAnB,CAAR,GAAyCF,QAAQ,CAACvB,KAAK,CAACI,YAAN,CAAmBD,IAApB,CAA3D,CAAR,CAAT;AAA0G,IAAA,IAAI,EAAE;AAC5GuB,MAAAA,QAAQ,EAAC1B,KAAK,CAAC0B,QAAN,IAAkB1B,KAAK,CAAC2B,MAAN,CAAaD,QADoE;AAC3DE,MAAAA,KAAK,oBAAK5B,KAAK,CAAC4B,KAAX;AAAiBC,QAAAA,IAAI,EAACd,IAAI,CAACe,IAAL,CAAUP,QAAQ,CAACvB,KAAK,CAACwB,WAAN,CAAkBC,UAAnB,CAAR,GAAyCF,QAAQ,CAACvB,KAAK,CAACI,YAAN,CAAmBD,IAApB,CAA3D;AAAtB;AADsD;AAAhH,KAEG;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyB,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAAzB,CAFH,CA1BJ,CATJ,CADJ;AA2CH,CAxID;;AA0IAJ,gBAAgB,CAACgC,eAAjB,GAAmC,UAACC,GAAD,EAAS;AACxC,SAAO;AAAEA,IAAAA,GAAG,EAAHA;AAAF,GAAP;AACH,CAFD;;AAGA,eAAelC,UAAU,CAACC,gBAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport FA from 'react-fontawesome';\r\nimport Link from 'next/link'\r\nimport withRouter from 'next/dist/client/with-router'\r\nconst FilterPagination = props => {\r\n    const contextData = useContext(AppContext);\r\n    let currentPageInput = useRef(null);\r\n    let size = useRef(null);\r\n\r\n    const [targetInputPage,setTargetInputPage] = useState(props.getPostsData.pageNo)\r\n    // const [ state, setState ] = useState({\r\n    //     totalPosts: 0,\r\n    //     perPage: 0,\r\n    //     totalPage: 0,\r\n    //     currentPage: 1\r\n    // });\r\n    // useEffect(()=>{\r\n    //     currentPageInput.current.value = contextData.postsData.pageNo\r\n    //     size.current.value = contextData.postsData.size\r\n    // },[contextData.postsData.pageNo]);\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, [props]);\r\n\r\n\r\n    let nextPage = () => {\r\n\r\n        const nextPage = contextData.adminPostsData.pageNo + 1;\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: nextPage\r\n        })\r\n\r\n\r\n    };\r\n\r\n    let previousPage = () => {\r\n        if ((contextData.adminPostsData.pageNo - 1) <= 0) {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: 1\r\n            })\r\n        } else {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: contextData.adminPostsData.pageNo - 1\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    let lastPage = () => {\r\n        const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size)\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: lastPage\r\n        })\r\n    };\r\n\r\n    let firstPage = () => {\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: 1\r\n        })\r\n    };\r\n\r\n    let changePageNoManually = () => {\r\n        if (currentPageInput.current.value <= 0) {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: 1\r\n            });\r\n            currentPageInput.current.value = 1\r\n        } else {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: currentPageInput.current.value\r\n            })\r\n        }\r\n    };\r\n\r\n    let changeSizeHandler = () => {\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            size: parseInt(size.current.value)\r\n        })\r\n    }\r\n\r\n\r\nuseEffect(()=>{\r\n    if (currentPageInput.current){\r\n        console.log(currentPageInput.current.value )\r\n    }\r\n},[ currentPageInput.current]);\r\n\r\n\r\n    return (\r\n        <div className='FilterPagination'>\r\n            <div className='pagesNavigation'>\r\n                <label className='totalPosts'>{ contextData.adminPostsData.totalPosts } items</label>\r\n                <button onClick={ () => firstPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-left\"/></button>\r\n                <button onClick={ () => previousPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-left\"/></button>\r\n                <input className='pageNumberInput' placeholder={ contextData.adminPostsData.pageNo}  ref={ currentPageInput } type='number' min={ 0 }/>\r\n                <button onClick={ () => nextPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-right\"/></button>\r\n                <button onClick={ () => lastPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-right\"/></button>\r\n            </div>\r\n            <div className='pagesNavigation'>\r\n                <label className='totalPosts'>{ props.postsSource.totalCount } items</label>\r\n                <Link key='...1' href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-left\"/></a></Link>\r\n\r\n\r\n                <Link href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:props.getPostsData.pageNo +-1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-left\"/></a></Link>\r\n\r\n\r\n                <div >\r\n                    <input className='pageNumberInput' value={ props.getPostsData.pageNo}  ref={ currentPageInput } type='number' min={ 0 }/>\r\n                    <Link href={{\r\n                        pathname:props.pathname || props.router.pathname,query:{...props.query,page:currentPageInput.current?parseInt(currentPageInput.current.value):1}\r\n                    }}><a className='actionBtn'>GO</a></Link>\r\n                </div>\r\n\r\n\r\n\r\n                <Link href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:props.getPostsData.pageNo +1}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-right\"/></a></Link>\r\n\r\n\r\n                <Link key={`...${Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))}`} href={{\r\n                    pathname:props.pathname || props.router.pathname,query:{...props.query,page:Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size))}\r\n                }}><a className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-right\"/></a></Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterPagination.getInitialProps = (ctx) => {\r\n    return { ctx }\r\n};\r\nexport default withRouter(FilterPagination);"]},"metadata":{},"sourceType":"module"}