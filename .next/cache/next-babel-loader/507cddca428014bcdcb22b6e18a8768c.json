{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\n\nvar navigation = function navigation(props) {\n  var titleEl = useRef(null);\n  var urlEl = useRef(null);\n\n  var _useState = useState({\n    type: 'navigation',\n    items: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    getSetting(state.type).then(function (res) {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {\n          items: res.data.setting.items || []\n        }));\n      }\n    });\n  }, []);\n\n  var onSaveChangesHandler = function onSaveChangesHandler() {\n    updateSetting(state).then(function () {\n      getSetting(state.type).then(function (res) {\n        if (res.data.setting) {\n          setState(_objectSpread({}, state, {\n            items: res.data.setting.items || []\n          }));\n        }\n      });\n    });\n  };\n\n  var onAddItemHandler = function onAddItemHandler() {\n    var newItem = {\n      title: titleEl.current.value,\n      url: urlEl.current.value\n    };\n    setState(_objectSpread({}, state, {\n      items: [].concat(_toConsumableArray(state.items), [newItem])\n    }));\n    titleEl.current.value = '';\n    urlEl.current.value = '';\n  };\n\n  var renderItems = state.items.map(function (item) {\n    return __jsx(\"div\", {\n      className: \"items-preview-item\"\n    }, __jsx(\"p\", null, item.title), __jsx(\"p\", null, item.url));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"div\", {\n    className: \"add-navigation-items\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    ref: titleEl,\n    type: \"text\",\n    name: \"title\"\n  }), __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    ref: urlEl,\n    type: \"text\",\n    name: \"url\"\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onAddItemHandler();\n    }\n  }, \"Add\")), __jsx(\"div\", {\n    className: \"items-preview\"\n  }, renderItems), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onSaveChangesHandler();\n    }\n  }, \"Save\")));\n};\n\nexport default navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/navigation/index.js"],"names":["React","useEffect","useState","useRef","AdminLayout","getSetting","updateSetting","navigation","props","titleEl","urlEl","type","items","state","setState","then","res","data","setting","onSaveChangesHandler","onAddItemHandler","newItem","title","current","value","url","renderItems","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting, updateSetting } from \"../../../../_variables/ajaxVariables\";\r\n\r\nconst navigation = props => {\r\n    const titleEl = useRef(null)\r\n    const urlEl = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSetting(state.type).then(res => {\r\n            if (res.data.setting) {\r\n                setState({\r\n                    ...state,\r\n                    items: res.data.setting.items || []\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n        updateSetting(state).then(()=>{\r\n            getSetting(state.type).then(res => {\r\n                if (res.data.setting) {\r\n                    setState({\r\n                        ...state,\r\n                        items: res.data.setting.items || []\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n        const newItem = {\r\n            title: titleEl.current.value,\r\n            url: urlEl.current.value\r\n        };\r\n        setState({\r\n            ...state,\r\n            items: [ ...state.items, newItem ]\r\n        })\r\n\r\n        titleEl.current.value = '';\r\n        urlEl.current.value = ''\r\n    };\r\n\r\n    const renderItems = state.items.map(item => {\r\n        return (\r\n            <div className='items-preview-item'>\r\n                <p>{ item.title }</p>\r\n                <p>{ item.url }</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <div className='add-navigation-items'>\r\n                    <p>Title :</p>\r\n                    <input ref={ titleEl } type=\"text\" name='title'/>\r\n                    <p>Url :</p>\r\n                    <input ref={ urlEl } type=\"text\" name='url'/>\r\n                    <button onClick={ () => onAddItemHandler() }>Add</button>\r\n                </div>\r\n                <div className='items-preview'>\r\n                    { renderItems }\r\n                </div>\r\n                <button onClick={ () => onSaveChangesHandler() }>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default navigation;"]},"metadata":{},"sourceType":"module"}