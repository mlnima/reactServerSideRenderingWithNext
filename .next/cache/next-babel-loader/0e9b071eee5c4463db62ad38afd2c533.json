{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nconst backendUrl = process.env.REACT_APP_PRODUCTION_URL;\nexport const updateSetting = async (type, data) => {\n  const body = {\n    token: localStorage.wt,\n    type,\n    data\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/update', body);\n};\nexport const getSetting = async (type, unCached) => {\n  const body = {\n    type\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + `/api/v1/settings/get?type=${type}`, body);\n};\nexport const getMultipleSetting = async (settings, cache) => {\n  const isCache = cache ? '' : `?cache=${Date.now()}`;\n\n  const body = _objectSpread({}, settings);\n\n  return await axios.post(`/api/v1/settings/getMultiple`, body);\n}; // export const getMultipleSettings = async (settingsType)=>{\n//\n// }\n\nexport const addNewWidget = async data => {\n  const body = {\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/addWidget', body);\n};\nexport const getWidgets = async position => {\n  const body = {\n    position\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidget', body);\n};\nexport const getMultipleWidgetWithData = async (widgets, cache) => {\n  const body = _objectSpread({}, widgets);\n\n  return await axios.post('/api/v1/settings/getMultipleWidgetWithData', body);\n};\nexport const getWidgetsWithData = async position => {\n  const body = {\n    position\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidgetsWithData', body);\n};\nexport const updateWidgets = async (id, data) => {\n  const body = {\n    id,\n    data,\n    token: localStorage.wt\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/updateWidget', body);\n};\nexport const deleteWidgets = async id => {\n  const body = {\n    id,\n    token: localStorage.wt\n  };\n  return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/deleteWidget', body);\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/ajaxVariables.js"],"names":["axios","backendUrl","process","env","REACT_APP_PRODUCTION_URL","updateSetting","type","data","body","token","localStorage","wt","post","getSetting","unCached","getMultipleSetting","settings","cache","isCache","Date","now","addNewWidget","getWidgets","position","getMultipleWidgetWithData","widgets","getWidgetsWithData","updateWidgets","id","deleteWidgets"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst backendUrl = process.env.REACT_APP_PRODUCTION_URL\r\nexport const updateSetting = async (type, data) => {\r\n\r\n    const body = {\r\n        token: localStorage.wt,\r\n        type,\r\n        data\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/update', body)\r\n\r\n};\r\n\r\nexport const getSetting = async (type, unCached) => {\r\n    const body = {\r\n        type,\r\n    };\r\n    return await axios.post( process.env.REACT_APP_PRODUCTION_URL + `/api/v1/settings/get?type=${ type }`, body)\r\n};\r\nexport const getMultipleSetting = async (settings, cache) => {\r\n    const isCache = cache ? '' : `?cache=${ Date.now() }`\r\n    const body = {\r\n        ...settings\r\n    };\r\n    return await axios.post( `/api/v1/settings/getMultiple`, body)\r\n};\r\n\r\n// export const getMultipleSettings = async (settingsType)=>{\r\n//\r\n// }\r\n\r\nexport const addNewWidget = async (data) => {\r\n    const body = {\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/addWidget', body)\r\n}\r\n\r\nexport const getWidgets = async (position) => {\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidget', body)\r\n}\r\nexport const getMultipleWidgetWithData = async (widgets, cache) => {\r\n    const body = {\r\n        ...widgets,\r\n    };\r\n    return await axios.post( '/api/v1/settings/getMultipleWidgetWithData', body)\r\n}\r\nexport const getWidgetsWithData = async (position) => {\r\n    const body = {\r\n        position,\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/getWidgetsWithData', body)\r\n}\r\n\r\nexport const updateWidgets = async (id, data) => {\r\n    const body = {\r\n        id,\r\n        data,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/updateWidget', body)\r\n}\r\n\r\nexport const deleteWidgets = async (id) => {\r\n    const body = {\r\n        id,\r\n        token: localStorage.wt\r\n    };\r\n    return await axios.post(process.env.REACT_APP_PRODUCTION_URL + '/api/v1/settings/deleteWidget', body)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}