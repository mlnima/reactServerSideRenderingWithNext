{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport settings from '../settings/general';\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\n\nconst design = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: colors,\n    1: setColors\n  } = useState({\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    bodyTextColor: props.design.bodyTextColor || '#000',\n    topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    topBarTextColor: props.design.topBarTextColor || '#fff',\n    headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    headerTextColor: props.design.headerTextColor || '#fff',\n    navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    navigationTextColor: props.design.navigationTextColor || '#fff',\n    footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\n    footerTextColor: props.design.footerTextColor || '#fff',\n    widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\n    widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\n    widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\n    widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff'\n  });\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    updateSetting('design', state).then(() => {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  const renderColorsFields = Object.keys(colors).map(element => {\n    return __jsx(\"div\", {\n      className: \"adminDesignSection\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItems\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItem\"\n    }, __jsx(\"p\", null, element.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n      name: element,\n      value: state[element],\n      onChange: e => onChangeHandler(e)\n    }), __jsx(\"div\", {\n      className: \"previewColor\",\n      style: {\n        backgroundColor: state[element]\n      }\n    }))));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: e => onSubmitHandler(e)\n  }, __jsx(\"div\", {\n    className: \"colorsContent\"\n  }, renderColorsFields), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\ndesign.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let design;\n  const designData = await getSetting('design');\n  design = designData.data.setting ? designData.data.setting.data : {};\n  return {\n    design\n  };\n};\n\nexport default design;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","settings","getSetting","updateSetting","AppContext","design","props","contextData","colors","setColors","bodyBackgroundColor","bodyTextColor","topBarBackgroundColor","topBarTextColor","headerBackgroundColor","headerTextColor","navigationBackgroundColor","navigationTextColor","footerBackgroundColor","footerTextColor","widgetHeaderBackgroundColor","widgetHeaderTextColor","widgetHeaderRedirectLinkBackgroundColor","widgetHeaderRedirectLinkTextColor","onChangeHandler","e","setState","state","target","name","value","onSubmitHandler","preventDefault","dispatchState","loading","then","renderColorsFields","Object","keys","map","element","replace","backgroundColor","getInitialProps","pathname","query","req","res","err","designData","data","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport settings from '../settings/general'\r\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables'\r\nimport './design.scss'\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst design = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ colors, setColors ] = useState({\r\n        bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\r\n        bodyTextColor: props.design.bodyTextColor || '#000',\r\n        topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\r\n        topBarTextColor: props.design.topBarTextColor || '#fff',\r\n        headerBackgroundColor: props.design.headerBackgroundColor || '#000',\r\n        headerTextColor: props.design.headerTextColor || '#fff',\r\n        navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\r\n        navigationTextColor: props.design.navigationTextColor || '#fff',\r\n        footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\r\n        footerTextColor: props.design.footerTextColor || '#fff',\r\n        widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\r\n        widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\r\n        widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\r\n        widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\r\n\r\n    });\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading:true\r\n        })\r\n        updateSetting('design', state).then(()=>{\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading:false\r\n            })\r\n        })\r\n    };\r\n\r\n    const renderColorsFields = Object.keys(colors).map(element=>{\r\n        return(\r\n            <div className=\"adminDesignSection\">\r\n                <div className=\"adminDesignSectionItems\">\r\n                    <div className=\"adminDesignSectionItem\">\r\n                        <p>{element.replace(/([A-Z])/g, \" $1\") } :</p>\r\n                        <input name={element} value={ state[element] } onChange={ e => onChangeHandler(e) }/>\r\n                        <div className=\"previewColor\" style={ { backgroundColor: state[element] } }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <form className='adminDesign' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className='colorsContent'>\r\n                    {renderColorsFields}\r\n                </div>\r\n\r\n\r\n                <button className='submitBtn' type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ndesign.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let design;\r\n    const designData = await getSetting('design');\r\n    design = designData.data.setting ? designData.data.setting.data : {}\r\n    return { design }\r\n}\r\nexport default design;\r\n"]},"metadata":{},"sourceType":"module"}