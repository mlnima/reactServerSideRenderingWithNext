{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from \"../../../components/layouts/AppLayout\";\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport withRouter from 'next/dist/client/with-router';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport CategoriesSidebar from '../../../components/includes/pages/Categories/CategoriesSidebar/CategoriesSidebar';\nimport SideBar from '../../../components/includes/SideBar/SideBar';\nimport Footer from '../../../components/includes/Footer/Footer'; // import './categories.scss'import './categories.scss'\n\nvar categories = function categories(props) {\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.identity.categoriesPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  var renderCategories = props.categoriesSource.metas.map(function (meta) {\n    return __jsx(CategoryElement, {\n      key: props.categoriesSource.metas.indexOf(meta),\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.categoriesPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"categories\"\n  }, renderCategories), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCategoriesData.pageNo,\n    totalCount: props.categoriesSource.totalCount,\n    size: props.getCategoriesData.size,\n    maxPage: Math.ceil(parseInt(props.categoriesSource.totalCount) / parseInt(props.getCategoriesData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(SideBar, {\n    key: \"categoriesPageSidebar\",\n    isActive: props.identity.categoriesPageSidebar,\n    widgets: props.widgets,\n    position: \"categoriesPageSidebar\"\n  })), __jsx(Footer, null)));\n};\n\ncategories.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, widgets, categoriesSource, identityData, navigationData, widgetsData, getCategoriesData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('categoriesPageSidebar'));\n\n        case 9:\n          widgetsData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          getCategoriesData = {\n            type: 'category',\n            searchForImageIn: 'categories',\n            pageNo: parseInt(query.page) || 1,\n            size: parseInt(query.size) || parseInt(identity.postsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(getMeta(getCategoriesData));\n\n        case 16:\n          categoriesData = _context.sent;\n          categoriesSource = categoriesData.data ? categoriesData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            categoriesSource: categoriesSource,\n            getCategoriesData: getCategoriesData,\n            pathname: pathname,\n            widgets: widgets\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(categories);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/categories/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getWidgetsWithData","AppContext","getMeta","withRouter","CategoryElement","RenderMetaDataPages","SiteSettingSetter","PaginationComponent","CategoriesSidebar","SideBar","Footer","categories","props","style","state","setState","identity","categoriesPageSidebar","gridArea","renderCategories","categoriesSource","metas","map","meta","indexOf","imageUrl","noImageUrl","name","count","getCategoriesData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","widgets","getInitialProps","req","res","err","identityData","navigationData","widgetsData","data","setting","navigation","type","searchForImageIn","page","postsCountPerPage","sort","categoriesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from \"../../../components/layouts/AppLayout\";\r\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport withRouter from 'next/dist/client/with-router';\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\r\nimport RenderMetaDataPages from '../../../components/includes/RenderMetaDataPages/RenderMetaDataPages'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport CategoriesSidebar from '../../../components/includes/pages/Categories/CategoriesSidebar/CategoriesSidebar'\r\nimport SideBar from '../../../components/includes/SideBar/SideBar'\r\nimport Footer from '../../../components/includes/Footer/Footer'\r\n\r\n// import './categories.scss'import './categories.scss'\r\n\r\nconst categories = props => {\r\n\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n    useEffect(() => {\r\n        if (props.identity.categoriesPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderCategories = props.categoriesSource.metas.map(meta => {\r\n        return (\r\n            <CategoryElement key={ props.categoriesSource.metas.indexOf(meta) } imageUrl={ meta.imageUrl } noImageUrl={ meta.noImageUrl } name={ meta.name } count={ meta.count }/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div style={ state.style } className={ props.identity.categoriesPageSidebar ? 'content withSidebar' : 'content withOutSidebar' }>\r\n                    <div>\r\n                        <div className='categories'>\r\n                            { renderCategories }\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={ props.getCategoriesData.pageNo }\r\n                            totalCount={ props.categoriesSource.totalCount }\r\n                            size={ props.getCategoriesData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.categoriesSource.totalCount) / parseInt(props.getCategoriesData.size)) - 1 }\r\n                            queryData={ props.query || props.router.query }\r\n                            pathnameData={ props.pathname || props.router.pathname }\r\n                        />\r\n                    </div>\r\n                    <SideBar key='categoriesPageSidebar' isActive={ props.identity.categoriesPageSidebar } widgets={ props.widgets } position='categoriesPageSidebar'/>\r\n                </div>\r\n                <Footer/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\ncategories.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n    let categoriesSource;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('categoriesPageSidebar')\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n\r\n    const getCategoriesData = {\r\n        type: 'category',\r\n        searchForImageIn: 'categories',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.postsCountPerPage) || 30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n    const categoriesData = await getMeta(getCategoriesData)\r\n    categoriesSource = categoriesData.data ? categoriesData.data : []\r\n    return { identity, navigation, query, categoriesSource, getCategoriesData, pathname, widgets }\r\n}\r\nexport default withRouter(categories);\r\n"]},"metadata":{},"sourceType":"module"}