{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\n\nconst tags = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    metaData: [],\n    totalCount: 0\n  });\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  useEffect(() => {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(siteIdentity => _objectSpread({}, siteIdentity, {}, props.identity));\n    }\n\n    if (props.tags.length) {\n      setState(_objectSpread({}, state, {\n        metaData: props.tags\n      }));\n    } else if (props.tags.length < 1) {// getMeta({\n      //     type: 'tag',\n      //     pageNo: 1,\n      //     size: 100,\n      //     searchForImageIn:'tags',\n      //     sortBy:'-_id'\n      // }).then(res=>{\n      //     console.log(res )\n      //     setState({\n      //         ...state,\n      //         metaData: res.data.metas\n      //     })\n      // }).catch(err=>{\n      //     console.log( err)\n      // })\n    }\n  }, [props]);\n  const renderTags = props.tags.map(meta => {\n    if (meta.count > 0) {\n      return __jsx(TagElement, {\n        key: meta._id,\n        imageUrl: meta.imageUrl,\n        noImageUrl: meta.noImageUrl,\n        name: meta.name,\n        count: meta.count\n      });\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getTagsData.pageNo,\n    totalCount: state.totalCount,\n    size: props.getTagsData.size,\n    maxPage: Math.ceil(parseInt(state.totalCount) / parseInt(props.getTagsData.size)) - 1,\n    mainLinkUrl: \"http://localhost:3000/posts\"\n  })));\n};\n\ntags.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let tags = [];\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  const getTagsData = {\n    type: 'tag',\n    searchForImageIn: 'tags',\n    pageNo: parseInt(query.page) || 1,\n    size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) || 30,\n    sort: query.sort || 'latest'\n  };\n  const tagsData = await getMeta(getTagsData);\n  tags = tagsData.data.metas ? tagsData.data.metas : [];\n  return {\n    identity,\n    navigation,\n    query,\n    tags,\n    getTagsData\n  };\n};\n\nexport default tags;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","AppContext","TagElement","CategoryElement","PaginationComponent","tags","props","contextData","state","setState","metaData","totalCount","console","log","navigation","dispatchNavigationData","data","identity","dispatchSiteIdentity","siteIdentity","length","renderTags","map","meta","count","_id","imageUrl","noImageUrl","name","getTagsData","pageNo","size","Math","ceil","parseInt","getInitialProps","pathname","query","req","res","err","identityData","navigationData","setting","type","searchForImageIn","page","tagsCountPerPage","sort","tagsData","metas"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\n\r\nconst tags = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData: [],\r\n        totalCount: 0\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n        if (props.tags.length){\r\n            setState({\r\n                ...state,\r\n                metaData: props.tags\r\n            })\r\n        }else if (props.tags.length<1){\r\n            // getMeta({\r\n            //     type: 'tag',\r\n            //     pageNo: 1,\r\n            //     size: 100,\r\n            //     searchForImageIn:'tags',\r\n            //     sortBy:'-_id'\r\n            // }).then(res=>{\r\n            //     console.log(res )\r\n            //     setState({\r\n            //         ...state,\r\n            //         metaData: res.data.metas\r\n            //     })\r\n            // }).catch(err=>{\r\n            //     console.log( err)\r\n            // })\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderTags = props.tags.map(meta => {\r\n        if (meta.count>0){\r\n            return (\r\n                <TagElement key={meta._id} imageUrl={meta.imageUrl} noImageUrl={meta.noImageUrl} name={meta.name} count={meta.count}/>\r\n            )\r\n        }\r\n\r\n    })\r\n    return (\r\n        <>\r\n        <AppLayout>\r\n            <div className='tags'>\r\n                {renderTags}\r\n            </div>\r\n            <PaginationComponent\r\n                isActive={ true }\r\n                currentPage={props.getTagsData.pageNo }\r\n                totalCount={ state.totalCount }\r\n                size={ props.getTagsData.size }\r\n                maxPage={ Math.ceil(parseInt(state.totalCount) / parseInt(props.getTagsData.size))- 1 }\r\n                mainLinkUrl='http://localhost:3000/posts'\r\n            />\r\n        </AppLayout>\r\n            </>\r\n    );\r\n};\r\n\r\n\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let tags = []\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getTagsData = {\r\n        type: 'tag',\r\n        searchForImageIn:'tags',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n\r\n\r\n        const tagsData = await getMeta(getTagsData)\r\n        tags = tagsData.data.metas ? tagsData.data.metas : []\r\n\r\n\r\n\r\n    return { identity, navigation, query, tags,getTagsData }\r\n}\r\nexport default tags;\r\n"]},"metadata":{},"sourceType":"module"}