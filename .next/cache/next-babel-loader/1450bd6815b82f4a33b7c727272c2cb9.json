{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\n\nconst TextInputWithUploadBtn = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    text: ''\n  });\n  useEffect(() => {}, []);\n\n  const onWriteHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"TextInputWithUploadBtn VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, props.name)), __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(\"input\", {\n    className: \"textInputWithUpload\",\n    name: props.name,\n    onChange: e => {}\n  }), __jsx(\"button\", {\n    className: \"uploadBtn\"\n  }, \"Upload\")));\n};\n\nexport default TextInputWithUploadBtn;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/TextInputWithUploadBtn/TextInputWithUploadBtn.js"],"names":["React","useEffect","useState","useContext","TextInputWithUploadBtn","props","state","setState","text","onWriteHandler","e","target","name","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;;AACA,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC;AAC9BM,IAAAA,IAAI,EAAC;AADyB,GAAD,CAAlC;AAIAP,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMQ,cAAc,GAAGC,CAAC,IAAG;AACxBH,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFtB,OAAR;AAIF,GALD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iBAAIR,KAAK,CAACO,IAAV,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAuC,IAAA,IAAI,EAAEP,KAAK,CAACO,IAAnD;AAAyD,IAAA,QAAQ,EAAEF,CAAC,IAAE,CAErE;AAFD,IADJ,EAII;AAAQ,IAAA,SAAS,EAAC;AAAlB,cAJJ,CAJJ,CADJ;AAaH,CA9BD;;AA+BA,eAAeN,sBAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nconst TextInputWithUploadBtn = props => {\r\n    const [state, setState] = useState({\r\n         text:''\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n    },[]);\r\n\r\n    const onWriteHandler = e =>{\r\n       setState({\r\n           ...state,\r\n           [e.target.name]: e.target.value\r\n       })\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='TextInputWithUploadBtn VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>{props.name}</p>\r\n            </div>\r\n            <div className=\"editor\">\r\n                <input className='textInputWithUpload' name={props.name} onChange={e=>{\r\n\r\n                }}/>\r\n                <button className='uploadBtn'>Upload</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TextInputWithUploadBtn;"]},"metadata":{},"sourceType":"module"}