{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { getSetting } from \"../_variables/ajaxVariables\";\n\nconst Home = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.identity.title || '',\n    themeColor: props.identity.themeColor || '',\n    description: props.identity.description || '',\n    keywords: props.identity.keywords || []\n  });\n  useEffect(() => {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, state.title), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: state.themeColor\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: state.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: state.keywords\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(\"h1\", null, \"Header 1\"), __jsx(Widget, {\n    component: Posts,\n    posts: props.posts,\n    title: \"latest video\",\n    mainLinkUrl: \"/posts/\",\n    redirectToTitle: \"More videos\",\n    pagination: true,\n    contextData: contextData\n  })));\n};\n\nHome.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let posts;\n  let navigation;\n  let identity;\n  let data = {\n    pageNo: query.pageNo ? parseInt(query.pageNo) : 1,\n    size: 30,\n    totalPosts: 0,\n    postType: 'all',\n    keyword: '',\n    status: 'published',\n    author: 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    checkedPosts: []\n  };\n\n  try {\n    const postsData = await axios.post('http://localhost:3000/api/v1/posts/', _objectSpread({}, data));\n    const identityData = await getSetting('identity');\n    const navigationData = await getSetting('navigation');\n    posts = postsData.data.posts ? postsData.data.posts : [];\n    identity = identityData.data.setting ? identityData.data.setting.data : {};\n    navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    posts,\n    identity,\n    navigation\n  };\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","Widget","Posts","withRouter","getPosts","Head","axios","getSetting","Home","props","contextData","state","setState","title","identity","themeColor","description","keywords","navigation","dispatchNavigationData","data","posts","getInitialProps","pathname","query","req","res","err","pageNo","parseInt","size","totalPosts","postType","keyword","status","author","fields","checkedPosts","postsData","post","identityData","navigationData","setting","e","console","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport Widget from \"../components/includes/Widget/Widget\";\r\nimport Posts from \"../components/includes/Posts/Posts\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport {getPosts} from \"../_variables/ajaxPostsVariables\";\r\nimport Head from \"next/head\";\r\nimport axios from \"axios\";\r\nimport { getSetting } from \"../_variables/ajaxVariables\";\r\n\r\nconst Home = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        title: props.identity.title || '',\r\n        themeColor: props.identity.themeColor || '',\r\n        description:props.identity.description|| '',\r\n        keywords:props.identity.keywords|| []\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(props.navigation){\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n    },[props ]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{state.title}</title>\r\n                <meta name=\"theme-color\" content={state.themeColor}/>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n                <meta charSet=\"utf-8\"/>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n                <meta name=\"description\" content={state.description}/>\r\n                <meta name=\"keywords\" content={state.keywords}/>\r\n                <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n            </Head>\r\n            <div className='HomePage'>\r\n                <h1>Header 1</h1>\r\n                <Widget component={Posts} posts={props.posts} title='latest video' mainLinkUrl='/posts/' redirectToTitle='More videos' pagination={true} contextData={contextData} />\r\n                {/*<Posts posts={props.posts} />*/}\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({pathname,query,req,res,err}) => {\r\n    let posts;\r\n    let navigation;\r\n    let identity;\r\n    let data = {\r\n        pageNo: query.pageNo ? parseInt(query.pageNo): 1,\r\n        size: 30,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'published',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    };\r\n\r\n    try {\r\n        const postsData = await axios.post('http://localhost:3000/api/v1/posts/', {...data});\r\n        const identityData = await getSetting('identity');\r\n        const navigationData=await getSetting('navigation');\r\n        posts = postsData.data.posts ? postsData.data.posts : []\r\n        identity= identityData.data.setting ? identityData.data.setting.data : {}\r\n        navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    }catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { posts,identity,navigation }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}