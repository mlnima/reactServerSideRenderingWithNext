{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { AppContext } from '../../../context/AppContext';\nimport Head from 'next/dist/next-server/lib/head';\nimport AppLayout from '../../layouts/AppLayout';\nimport withRouter from 'next/dist/client/with-router';\n\nconst SiteSettingSetter = props => {\n  const contextData = useContext(AppContext);\n  const customScriptElement = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.identity.data.title || '',\n    themeColor: props.design.data.themeColor || '',\n    description: props.identity.data.description || '',\n    keywords: props.identity.data.keywords || [],\n    homePageH1: props.identity.data.homePageH1 || 'H1 element' // customScript: props.identity.data.customScript || 'your Script will be here',\n\n  });\n  useEffect(() => {\n    if (props.design) {\n      contextData.dispatchSiteDesign(props.design.data);\n    }\n\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(props.identity.data);\n    }\n\n    if (props.widgets) {\n      contextData.setSiteWidgets(props.widgets);\n    }\n  }, [props]);\n  useEffect(() => {\n    document.body.style.backgroundColor = contextData.siteDesign.bodyBackgroundColor;\n    document.body.style.color = contextData.siteDesign.bodyBackgroundColor;\n  }, [contextData.siteDesign]);\n  const renderCustomScripts = (props.identity.data.customScripts || []).map(script => {\n    return __jsx(\"script\", {\n      key: script.scriptName\n    }, script.scriptBody);\n  }); // const RenderGoogleAnalyticsScript = () => {\n  //     if (props.identity.data.googleAnalyticsID) {\n  //         console.log( 'there is')\n  //         return (\n  //             <>\n  //                                 <script dangerouslySetInnerHTML={ {\n  //                                     __html: `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n  //                     new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n  //                     j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n  //                     'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n  //                   })(window,document,'script','dataLayer',${ props.identity.data.googleAnalyticsID });`\n  //                 } }/>\n  //             </>\n  //\n  //         )\n  //     } else return null\n  // }\n\n  useEffect(() => {\n    googleAnalyticsHandler();\n  }, [props.router]);\n\n  const googleAnalyticsHandler = () => {\n    window.dataLayer = window.dataLayer || [];\n\n    const gTag = () => {\n      dataLayer.push(arguments);\n    };\n\n    gTag('js', new Date());\n    gTag('config', contextData.siteIdentity.googleAnalyticsID);\n  };\n\n  return __jsx(Head, null, __jsx(\"title\", null, state.title), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: state.themeColor\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: state.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: state.keywords\n  }), __jsx(\"script\", {\n    async: true,\n    src: `https://www.googletagmanager.com/gtag/js?id=${contextData.siteIdentity.googleAnalyticsID}`\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Patrick+Hand&display=swap\",\n    rel: \"stylesheet\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/static/style-sheet/customStyle.css\"\n  }), renderCustomScripts);\n};\n\nexport default withRouter(SiteSettingSetter);","map":null,"metadata":{},"sourceType":"module"}