{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\n\nvar TagsAndCategoriesActors = function TagsAndCategoriesActors(props) {\n  var _useState = useState({\n    data: props.data || [],\n    type: props.type || 'tags',\n    fontawesome: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var fontawesome = '';\n\n    switch (props.type) {\n      case 'actors':\n        fontawesome = 'star';\n        break;\n\n      case 'tags':\n        fontawesome = 'tags';\n        break;\n\n      case 'categories':\n        fontawesome = 'folder';\n        break;\n    }\n\n    setState(_objectSpread({}, state, {\n      fontawesome: fontawesome\n    }));\n  }, []);\n  var renderData = state.data.map(function (item) {\n    var path = \"/posts?tag=\".concat(item);\n    return __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", {\n      className: state.type\n    }, item));\n  });\n\n  if (props.data.length > 1) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, __jsx(\"span\", null, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: state.fontawesome\n    }), \" \", state.type.charAt(0).toUpperCase() + state.type.substring(1), \":\"), __jsx(\"div\", {\n      className: \"content\"\n    }, renderData));\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/TagsAndCategoriesActors/TagsAndCategoriesActors.js"],"names":["React","useEffect","useState","useContext","Link","FA","TagsAndCategoriesActors","props","data","type","fontawesome","state","setState","renderData","map","item","path","length","charAt","toUpperCase","substring"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AAAA,kBACTL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,IAAc,EADa;AAEjCC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,IAAc,MAFa;AAGjCC,IAAAA,WAAW,EAAE;AAHoB,GAAD,CADC;AAAA,MAC7BC,KAD6B;AAAA,MACtBC,QADsB;;AAOrCX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIS,WAAW,GAAG,EAAlB;;AACA,YAASH,KAAK,CAACE,IAAf;AACI,WAAK,QAAL;AACIC,QAAAA,WAAW,GAAG,MAAd;AACA;;AACJ,WAAK,MAAL;AACIA,QAAAA,WAAW,GAAG,MAAd;AACA;;AACJ,WAAK,YAAL;AACIA,QAAAA,WAAW,GAAG,QAAd;AACA;AATR;;AAYAE,IAAAA,QAAQ,mBACDD,KADC;AAEJD,MAAAA,WAAW,EAAXA;AAFI,OAAR;AAIH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,MAAMG,UAAU,GAAGF,KAAK,CAACH,IAAN,CAAWM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACtC,QAAMC,IAAI,wBAAkBD,IAAlB,CAAV;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAGC,IAAb;AAAoB,MAAA,GAAG,EAAGD;AAA1B,OAAiC;AAAG,MAAA,SAAS,EAAGJ,KAAK,CAACF;AAArB,OAA8BM,IAA9B,CAAjC,CADJ;AAGH,GALkB,CAAnB;;AAOA,MAAIR,KAAK,CAACC,IAAN,CAAWS,MAAX,GAAoB,CAAxB,EAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAGN,KAAK,CAACF,IAAN,GAAa;AAA9B,OACI,oBAAM,MAAC,EAAD;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAkC,MAAA,IAAI,EAAGE,KAAK,CAACD;AAA/C,MAAN,OAAuEC,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCR,KAAK,CAACF,IAAN,CAAWW,SAAX,CAAqB,CAArB,CAA5G,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACMP,UADN,CAFJ,CADJ;AAQH,GATD,MASO,OAAO,IAAP;AAEV,CA7CD;;AA8CA,eAAeP,uBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\n\r\nconst TagsAndCategoriesActors = props => {\r\n    const [ state, setState ] = useState({\r\n        data: props.data || [],\r\n        type: props.type || 'tags',\r\n        fontawesome: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        let fontawesome = '';\r\n        switch ( props.type ) {\r\n            case 'actors':\r\n                fontawesome = 'star'\r\n                break\r\n            case 'tags':\r\n                fontawesome = 'tags'\r\n                break\r\n            case 'categories':\r\n                fontawesome = 'folder'\r\n                break\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            fontawesome\r\n        })\r\n    }, []);\r\n\r\n    const renderData = state.data.map(item => {\r\n        const path =  `/posts?tag=${item}`;\r\n        return (\r\n            <Link href={ path } key={ item }><a className={ state.type }>{ item }</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.data.length > 1) {\r\n        return (\r\n            <div className={ state.type + ' tags-categories-actors' }>\r\n                <span><FA className='fontawesomeMedium' name={ state.fontawesome }/> { state.type.charAt(0).toUpperCase() + state.type.substring(1) }:</span>\r\n                <div className=\"content\">\r\n                    { renderData }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default TagsAndCategoriesActors;"]},"metadata":{},"sourceType":"module"}