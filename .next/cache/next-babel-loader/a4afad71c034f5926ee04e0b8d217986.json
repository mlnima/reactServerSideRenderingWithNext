{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\nimport withRouter from \"next/dist/client/with-router\";\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\nimport Head from \"next/head\";\n\nconst Post = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n    name: \"description\",\n    content: props.post.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: [...props.post.tags, ...props.post.categories, ...props.post.actors]\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: props.post.title\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: props.post.videoEmbedCode\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: props.post.mainThumbnail\n  })), __jsx(\"div\", {\n    className: \"post\"\n  }, __jsx(PostSidebar, null), __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode,\n    meta: {\n      description: props.post.description,\n      title: props.post.title,\n      duration: props.post.duration,\n      thumbnailUrl: props.post.mainThumbnail,\n      embedURL: props.post.videoEmbedCode,\n      uploadDate: props.post.lastModify\n    }\n  }), __jsx(DownloadLink, {\n    downloadLink: props.post.videoEmbedCode\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories\n  })))));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let post;\n  const body = {\n    postTitle: query.postTitle\n  };\n\n  try {\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body);\n    post = postData.data.post;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    post,\n    query\n  };\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getPost","Iframe","PostInfo","DownloadLink","withRouter","PostSidebar","Head","Post","props","state","setState","console","log","post","title","description","tags","categories","actors","postType","videoEmbedCode","mainThumbnail","duration","thumbnailUrl","embedURL","uploadDate","lastModify","getInitialProps","pathname","query","req","res","err","body","postTitle","postData","data","e","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\r\nimport Head from \"next/head\";\r\n\r\nconst Post = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <>\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories,...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/}\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n                <div className='post'>\r\n                    <PostSidebar/>\r\n                    <div className=\"main\">\r\n                        <Iframe iframeCode={ props.post.videoEmbedCode } meta={ {\r\n                            description: props.post.description,\r\n                            title: props.post.title,\r\n                            duration: props.post.duration,\r\n                            thumbnailUrl: props.post.mainThumbnail,\r\n                            embedURL: props.post.videoEmbedCode,\r\n                            uploadDate: props.post.lastModify,\r\n                        } }/>\r\n                        <DownloadLink downloadLink={ props.post.videoEmbedCode }/>\r\n                        <PostInfo title={ props.post.title } description={ props.post.description } tags={ props.post.tags } actors={ props.post.actors } categories={ props.post.categories }/>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    const body = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    try {\r\n        const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body);\r\n        post = postData.data.post\r\n    } catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { post, query }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}