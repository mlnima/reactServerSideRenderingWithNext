{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\n\nconst AdminCommentItem = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    hovered: false,\n    checked: false\n  });\n  useEffect(() => {}, []);\n\n  const HoveredHandler = () => {\n    if (state.hovered) {\n      return __jsx(\"div\", {\n        className: \"commentControl\"\n      }, __jsx(\"button\", null, \"Approve\"), __jsx(\"button\", null, \"Delete\"), __jsx(\"button\", null, \"Spam\"), __jsx(\"button\", null, \"Pending\"));\n    } else return null;\n  };\n\n  return __jsx(\"div\", {\n    key: props.data.comment._id,\n    className: \"adminCommentsItem\",\n    onMouseOver: () => setState(_objectSpread({}, state, {\n      hovered: true\n    })),\n    onMouseLeave: () => setState(_objectSpread({}, state, {\n      hovered: false\n    }))\n  }, __jsx(\"div\", {\n    className: \"adminCommentsItemHead\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: state.checked,\n    onChange: () => state.checked ? setState(_objectSpread({}, state, {\n      checked: false\n    })) : setState(_objectSpread({}, state, {\n      checked: true\n    }))\n  }), __jsx(\"p\", null, props.data.comment.author)), __jsx(\"div\", {\n    className: \"adminCommentsItemBody\"\n  }, __jsx(\"p\", null, props.data.comment.body), __jsx(HoveredHandler, null)));\n};\n\nexport default AdminCommentItem;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminCommentItem/AdminCommentItem.js"],"names":["React","useEffect","useState","useContext","useRef","AdminCommentItem","props","state","setState","hovered","checked","HoveredHandler","data","comment","_id","author","body"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC;AACjCO,IAAAA,OAAO,EAAC,KADyB;AAEjCC,IAAAA,OAAO,EAAC;AAFyB,GAAD,CAApC;AAIAT,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMU,cAAc,GAAG,MAAM;AACzB,QAAIJ,KAAK,CAACE,OAAV,EAAmB;AACf,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,gCADJ,EAEI,+BAFJ,EAGI,6BAHJ,EAII,gCAJJ,CADJ;AAQH,KATD,MASO,OAAO,IAAP;AAEV,GAZD;;AAgBA,SACI;AAAK,IAAA,GAAG,EAAGH,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAmBC,GAA9B;AAAoC,IAAA,SAAS,EAAC,mBAA9C;AAAkE,IAAA,WAAW,EAAG,MAAKN,QAAQ,mBAAKD,KAAL;AAAWE,MAAAA,OAAO,EAAE;AAApB,OAA7F;AAA2H,IAAA,YAAY,EAAG,MAAKD,QAAQ,mBAAKD,KAAL;AAAWE,MAAAA,OAAO,EAAE;AAApB;AAAvJ,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAGF,KAAK,CAACG,OAAvC;AAAiD,IAAA,QAAQ,EAAG,MAAMH,KAAK,CAACG,OAAN,GAAcF,QAAQ,mBAAKD,KAAL;AAAWG,MAAAA,OAAO,EAAE;AAApB,OAAtB,GAAkDF,QAAQ,mBAAKD,KAAL;AAAWG,MAAAA,OAAO,EAAE;AAApB;AAA5H,IADJ,EAEI,iBAAKJ,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAmBE,MAAxB,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iBAAKT,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAmBG,IAAxB,CADJ,EAEI,MAAC,cAAD,OAFJ,CALJ,CADJ;AAYH,CApCD;;AAqCA,eAAeX,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst AdminCommentItem = props => {\r\n    const [ state, setState ] = useState({\r\n        hovered:false,\r\n        checked:false\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const HoveredHandler = () => {\r\n        if (state.hovered) {\r\n            return (\r\n                <div className='commentControl'>\r\n                    <button>Approve</button>\r\n                    <button>Delete</button>\r\n                    <button>Spam</button>\r\n                    <button>Pending</button>\r\n                </div>\r\n            )\r\n        } else return null\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div key={ props.data.comment._id } className='adminCommentsItem' onMouseOver={ () =>setState({...state,hovered: true})  } onMouseLeave={ () =>setState({...state,hovered: false}) }>\r\n            <div className=\"adminCommentsItemHead\">\r\n                <input type='checkbox' checked={ state.checked } onChange={ () => state.checked?setState({...state,checked: false}):setState({...state,checked: true})}/>\r\n                <p>{ props.data.comment.author }</p>\r\n            </div>\r\n            <div className=\"adminCommentsItemBody\">\r\n                <p>{ props.data.comment.body }</p>\r\n                <HoveredHandler/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default AdminCommentItem;\r\n"]},"metadata":{},"sourceType":"module"}