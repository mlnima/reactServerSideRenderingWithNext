{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\n\nconst CommentFrom = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(\"form\", {\n    className: \"comment-form\"\n  }, __jsx(\"div\", null, __jsx(\"textarea\", {\n    placeholder: \"Comment\",\n    name: \"comment\",\n    onChange: e => onChangeHandler(e)\n  })), __jsx(\"div\", null, __jsx(\"input\", {\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: e => onChangeHandler(e)\n  }), __jsx(\"input\", {\n    placeholder: \"Email\",\n    name: \"email\",\n    onChange: e => onChangeHandler(e)\n  })));\n};\n\nexport default CommentFrom;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/CommentFrom/CommentFrom.js"],"names":["React","useEffect","useState","useContext","useRef","CommentFrom","props","state","setState","onChangeHandler","e","target","name","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMQ,eAAe,GAAGC,CAAC,IAAG;AACxBF,IAAAA,QAAQ,mBACDD,KADC;AAEJ,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAFrB,OAAR;AAIH,GALD;;AAQA,SACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI,mBACI;AAAU,IAAA,WAAW,EAAC,SAAtB;AAAgC,IAAA,IAAI,EAAC,SAArC;AAA+C,IAAA,QAAQ,EAAEH,CAAC,IAAED,eAAe,CAACC,CAAD;AAA3E,IADJ,CADJ,EAII,mBACI;AAAO,IAAA,WAAW,EAAC,MAAnB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAEA,CAAC,IAAED,eAAe,CAACC,CAAD;AAAlE,IADJ,EAEI;AAAO,IAAA,WAAW,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,QAAQ,EAAEA,CAAC,IAAED,eAAe,CAACC,CAAD;AAApE,IAFJ,CAJJ,CADJ;AAaH,CA1BD;;AA2BA,eAAeL,WAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst CommentFrom = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onChangeHandler = e =>{\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='comment-form'>\r\n            <div>\r\n                <textarea placeholder='Comment' name='comment' onChange={e=>onChangeHandler(e)}/>\r\n            </div>\r\n            <div>\r\n                <input placeholder='Name' name='name' onChange={e=>onChangeHandler(e)}/>\r\n                <input placeholder='Email' name='email' onChange={e=>onChangeHandler(e)}/>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    );\r\n};\r\nexport default CommentFrom;\r\n"]},"metadata":{},"sourceType":"module"}