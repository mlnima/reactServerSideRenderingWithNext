{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../components/layouts/AppLayout';\nimport { getSetting } from '../../_variables/ajaxVariables';\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport withRouter from 'next/dist/client/with-router';\nimport Posts from '../../components/includes/Posts/Posts';\n\nvar posts = function posts(props) {\n  var _useState = useState({\n    posts: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n    setState(_objectSpread({}, state, {\n      posts: props.posts,\n      totalCount: props.totalCount\n    }));\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"posts\"\n  }, __jsx(SiteSettingSetter, props), \"posts\", __jsx(Posts, {\n    posts: state.posts\n  })));\n};\n\nposts.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, posts, getPostsData, identityData, navigationData, postsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          getPostsData = {\n            size: 60,\n            pageNo: query.pageNo || 1,\n            postType: 'all',\n            fields: ['all'],\n            keyword: '',\n            author: 'all',\n            status: 'all'\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 4:\n          identityData = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 7:\n          navigationData = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(getPosts(getPostsData));\n\n        case 10:\n          postsData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          posts = postsData.data ? postsData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            posts: posts\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(posts);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/posts/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","getPosts","SiteSettingSetter","withRouter","Posts","posts","props","state","setState","console","log","totalCount","getInitialProps","pathname","query","req","res","err","getPostsData","size","pageNo","postType","fields","keyword","author","status","identityData","navigationData","postsData","identity","data","setting","navigation"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,qCAAlC;AACA,OAAOC,iBAAP,MAA8B,iEAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACSX,QAAQ,CAAC;AACjCU,IAAAA,KAAK,EAAC;AAD2B,GAAD,CADjB;AAAA,MACXE,KADW;AAAA,MACJC,QADI;;AAInBd,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAE,IAAAA,QAAQ,mBACDD,KADC;AAEJF,MAAAA,KAAK,EAACC,KAAK,CAACD,KAFR;AAGJM,MAAAA,UAAU,EAACL,KAAK,CAACK;AAHb,OAAR;AAKH,GAPQ,EAON,CAACL,KAAD,CAPM,CAAT;AASA,SACI,MAAC,SAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,iBAAD,EAAyBA,KAAzB,CADJ,WAGI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,KAAK,CAACF;AAApB,IAHJ,CADJ,CADJ;AASH,CAtBD;;AAwBAA,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAKdC,UAAAA,YALc,GAKC;AACjBC,YAAAA,IAAI,EAAE,EADW;AAEjBC,YAAAA,MAAM,EAAEN,KAAK,CAACM,MAAN,IAAgB,CAFP;AAGjBC,YAAAA,QAAQ,EAAE,KAHO;AAIjBC,YAAAA,MAAM,EAAC,CAAC,KAAD,CAJU;AAKjBC,YAAAA,OAAO,EAAE,EALQ;AAMjBC,YAAAA,MAAM,EAAE,KANS;AAOjBC,YAAAA,MAAM,EAAE;AAPS,WALD;AAAA;AAAA,2CAcO1B,UAAU,CAAC,UAAD,CAdjB;;AAAA;AAcd2B,UAAAA,YAdc;AAAA;AAAA,2CAeS3B,UAAU,CAAC,YAAD,CAfnB;;AAAA;AAed4B,UAAAA,cAfc;AAAA;AAAA,2CAgBI1B,QAAQ,CAACiB,YAAD,CAhBZ;;AAAA;AAgBdU,UAAAA,SAhBc;AAkBpBC,UAAAA,QAAQ,GAAGH,YAAY,CAACI,IAAb,CAAkBC,OAAlB,GAA4BL,YAAY,CAACI,IAAb,CAAkBC,OAAlB,CAA0BD,IAAtD,GAA6D,EAAxE;AACAE,UAAAA,UAAU,GAAGL,cAAc,CAACG,IAAf,CAAoBC,OAApB,GAA8BJ,cAAc,CAACG,IAAf,CAAoBC,OAAlD,GAA4D,EAAzE;AACA1B,UAAAA,KAAK,GAAGuB,SAAS,CAACE,IAAV,GAAeF,SAAS,CAACE,IAAzB,GAA8B,EAAtC;AApBoB,2CAqBb;AAAED,YAAAA,QAAQ,EAARA,QAAF;AAAYG,YAAAA,UAAU,EAAVA,UAAZ;AAAwBlB,YAAAA,KAAK,EAALA,KAAxB;AAA+BT,YAAAA,KAAK,EAALA;AAA/B,WArBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAwBA,eAAeF,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../_variables/ajaxVariables'\r\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport Posts from '../../components/includes/Posts/Posts'\r\n\r\nconst posts = props => {\r\n    const [ state, setState ] = useState({\r\n        posts:[]\r\n    });\r\n    useEffect(() => {\r\n        console.log(props)\r\n        setState({\r\n            ...state,\r\n            posts:props.posts,\r\n            totalCount:props.totalCount\r\n        })\r\n    }, [props]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='posts'>\r\n                <SiteSettingSetter  { ...props }/>\r\n                posts\r\n                <Posts posts={state.posts}/>\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nposts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let posts;\r\n\r\n    const getPostsData = {\r\n        size: 60,\r\n        pageNo: query.pageNo || 1,\r\n        postType: 'all',\r\n        fields:['all'],\r\n        keyword: '',\r\n        author: 'all',\r\n        status: 'all',\r\n    }\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const postsData = await getPosts(getPostsData)\r\n\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    posts = postsData.data?postsData.data:[]\r\n    return { identity, navigation, query, posts }\r\n}\r\n\r\nexport default withRouter(posts);\r\n"]},"metadata":{},"sourceType":"module"}