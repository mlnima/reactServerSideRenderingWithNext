{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport './IsInSlideShow.scss';\n\nconst IsInSlideShow = props => {\n  const onChangeHandler = value => {\n    target = {\n      name: 'inSlideShow',\n      value\n    };\n    props.onChangeHandler(target);\n  };\n\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(\"select\", {\n    name: \"inSlideShow\",\n    onChange: e => props.onChangeHandler(e),\n    defaultValue: props.postData.inSlideShow\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\")), __jsx(Switch, {\n    name: \"inSlideShow\",\n    onChange: e => props.onChangeHandler(props.postData.inSlideShow ? false : true),\n    checked: onChangeHandler(props.postData.inSlideShow)\n  })));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","IsInSlideShow","props","onChangeHandler","value","target","name","e","postData","inSlideShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAI3B,QAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9BC,IAAAA,MAAM,GAAC;AACHC,MAAAA,IAAI,EAAC,aADF;AAEHF,MAAAA;AAFG,KAAP;AAIAF,IAAAA,KAAK,CAACC,eAAN,CAAsBE,MAAtB;AACH,GAND;;AAUA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,QAAQ,EAAGE,CAAC,IAAGL,KAAK,CAACC,eAAN,CAAsBI,CAAtB,CAA1C;AAAoE,IAAA,YAAY,EAAEL,KAAK,CAACM,QAAN,CAAeC;AAAjG,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,WADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,UAFJ,CADJ,EAKI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,QAAQ,EAAGF,CAAC,IAAGL,KAAK,CAACC,eAAN,CAAsBD,KAAK,CAACM,QAAN,CAAeC,WAAf,GAA2B,KAA3B,GAAiC,IAAvD,CAA1C;AAAwG,IAAA,OAAO,EAAGN,eAAe,CAACD,KAAK,CAACM,QAAN,CAAeC,WAAhB;AAAjI,IALJ,CAJJ,CADJ;AAcH,CA5BD;;AA6BA,eAAeR,aAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport './IsInSlideShow.scss';\r\n\r\n\r\nconst IsInSlideShow = props => {\r\n\r\n\r\n\r\n    const onChangeHandler = (value) =>{\r\n        target={\r\n            name:'inSlideShow',\r\n            value\r\n        }\r\n        props.onChangeHandler(target)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <select name='inSlideShow' onChange={ e =>props.onChangeHandler(e)} defaultValue={props.postData.inSlideShow}>\r\n                    <option value='true'>Yes</option>\r\n                    <option value='false'>No</option>\r\n                </select>\r\n                <Switch name='inSlideShow' onChange={ e =>props.onChangeHandler(props.postData.inSlideShow?false:true)} checked={ onChangeHandler(props.postData.inSlideShow) }/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}