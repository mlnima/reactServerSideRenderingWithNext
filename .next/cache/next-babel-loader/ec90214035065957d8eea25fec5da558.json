{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nconst Navigation = props => {\n  const contextData = useContext(AppContext);\n  const navigation = useRef(null);\n  const navigationMobileBtn = useRef(null);\n  const {\n    0: navigationData,\n    1: setNavigationData\n  } = useState({\n    isOpen: false,\n    items: [],\n    style: {}\n  });\n  useEffect(() => {\n    setNavigationData(_objectSpread({}, navigationData, {\n      style: {\n        backgroundColor: contextData.siteDesign.navigationBackgroundColor,\n        color: contextData.siteDesign.navigationTextColor\n      }\n    }));\n  }, [contextData.siteDesign]);\n  useEffect(() => {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n        navigationMobileBtn.current.style.transform = 'rotate(-90deg)';\n      } else {\n        navigation.current.style.display = 'none';\n        navigationMobileBtn.current.style.transform = 'rotate(0deg)';\n      }\n    }\n  }, [navigationData.isOpen]);\n  useEffect(() => {\n    setNavigationData(navigationData => _objectSpread({}, navigationData, {\n      items: contextData.navigationData || []\n    }));\n  }, [contextData.navigationData]);\n\n  const onNavigationMobileBtnClickHandler = () => {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  const renderNavigationItems = contextData.navigationData.map(item => {\n    return __jsx(Link, {\n      key: item.title,\n      href: item.url\n    }, __jsx(\"a\", {\n      style: navigationData.style\n    }, item.title));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    ref: navigationMobileBtn,\n    className: \"navigationMobileBtn\",\n    onClick: () => onNavigationMobileBtnClickHandler()\n  }, \"   \", __jsx(\"img\", {\n    className: \"fontawesomeSvgMedium\",\n    src: BarsSvg,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\",\n    style: navigationData.style\n  }, renderNavigationItems));\n};\n\nexport default Navigation;","map":null,"metadata":{},"sourceType":"module"}