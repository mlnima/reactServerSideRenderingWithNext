{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nconst Navigation = props => {\n  const contextData = useContext(AppContext);\n  const navigation = useRef(null);\n  const navigationMobileBtn = useRef(null);\n  const {\n    0: navigationData,\n    1: setNavigationData\n  } = useState({\n    isOpen: false,\n    items: []\n  });\n  useEffect(() => {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n        navigationMobileBtn.current.style.transform = 'rotate(-90deg)';\n      } else {\n        navigation.current.style.display = 'none';\n        navigationMobileBtn.current.style.transform = 'rotate(0deg)';\n      }\n    }\n  }, [navigationData.isOpen]);\n  useEffect(() => {\n    setNavigationData(navigationData => _objectSpread({}, navigationData, {\n      items: contextData.navigationData || []\n    }));\n  }, [contextData.navigationData]);\n\n  const onNavigationMobileBtnClickHandler = () => {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  const renderNavigationItems = navigationData.items.map(item => {\n    return __jsx(Link, {\n      key: item.title,\n      href: item.url\n    }, __jsx(\"a\", null, item.title));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    ref: navigationMobileBtn,\n    className: \"navigationMobileBtn\",\n    onClick: () => onNavigationMobileBtnClickHandler()\n  }, \"   \", __jsx(\"img\", {\n    className: \"fontawesomeSvgMedium\",\n    src: BarsSvg,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\"\n  }, renderNavigationItems));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Navigation/Navigation.js"],"names":["React","useState","useRef","useEffect","useContext","Link","FA","AppContext","BarsSvg","Navigation","props","contextData","navigation","navigationMobileBtn","navigationData","setNavigationData","isOpen","items","window","innerWidth","current","style","display","transform","onNavigationMobileBtnClickHandler","renderNavigationItems","map","item","title","url"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'\r\n\r\n// import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\r\n\r\nconst Navigation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const navigation = useRef(null)\r\n    const navigationMobileBtn = useRef(null)\r\n    const [ navigationData, setNavigationData ] = useState({\r\n        isOpen: false,\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 768) {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: false\r\n            });\r\n\r\n        } else {\r\n            setNavigationData({\r\n                ...navigationData,\r\n                isOpen: true\r\n            })\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (navigation.current) {\r\n            if (navigationData.isOpen) {\r\n                navigation.current.style.display = 'flex'\r\n                navigationMobileBtn.current.style.transform = 'rotate(-90deg)'\r\n            } else {\r\n                navigation.current.style.display = 'none'\r\n                navigationMobileBtn.current.style.transform = 'rotate(0deg)'\r\n            }\r\n        }\r\n    }, [ navigationData.isOpen ]);\r\n\r\n    useEffect(() => {\r\n        setNavigationData(navigationData=>({\r\n            ...navigationData,\r\n            items: contextData.navigationData || []\r\n        }))\r\n    }, [ contextData.navigationData ]);\r\n\r\n    const onNavigationMobileBtnClickHandler = () => {\r\n        navigationData.isOpen ? setNavigationData({ ...navigationData, isOpen: false }) : setNavigationData({ ...navigationData, isOpen: true })\r\n    };\r\n\r\n    const renderNavigationItems = navigationData.items.map(item=>{\r\n        return(\r\n            <Link  key={item.title} href={item.url}><a>{item.title}</a></Link>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <button ref={navigationMobileBtn} className='navigationMobileBtn' onClick={ () => onNavigationMobileBtnClickHandler() }>   <img className='fontawesomeSvgMedium' src={ BarsSvg } alt=\"\"/></button>\r\n            <div ref={ navigation } className='Navigation'>\r\n                {renderNavigationItems}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}