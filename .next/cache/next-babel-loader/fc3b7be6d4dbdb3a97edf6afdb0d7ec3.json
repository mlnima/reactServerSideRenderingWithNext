{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\n\nconst tags = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    metaData: [],\n    totalCount: 0\n  });\n  useEffect(() => {\n    console.log(props);\n  }, [props]); // useEffect(() => {\n  //     if (props.navigation) {\n  //         contextData.dispatchNavigationData(props.navigation.data)\n  //     }\n  //     if (props.identity) {\n  //         contextData.dispatchSiteIdentity(siteIdentity => ({\n  //             ...siteIdentity,\n  //             ...props.identity\n  //         }))\n  //     }\n  // }, [ props ]);\n\n  const renderTags = props.tagsSource.metas.map(meta => {\n    if (meta.count > 0) {\n      return __jsx(TagElement, {\n        key: meta._id,\n        imageUrl: meta.imageUrl,\n        noImageUrl: meta.noImageUrl,\n        name: meta.name,\n        count: meta.count\n      });\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getTagsData.pageNo,\n    totalCount: props.tagsSource.totalCount,\n    size: props.getTagsData.size,\n    maxPage: Math.ceil(parseInt(props.tagsSource.totalCount) / parseInt(props.getTagsData.size)) - 1 // mainLinkUrl='http://localhost:3000/posts'\n\n  })));\n};\n\ntags.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let tagsSource;\n  const identityData = await getSetting('identity');\n  const navigationData = await getSetting('navigation');\n  identity = identityData.data.setting ? identityData.data.setting.data : {};\n  navigation = navigationData.data.setting ? navigationData.data.setting : {};\n  const getTagsData = {\n    type: 'tag',\n    searchForImageIn: 'tags',\n    pageNo: parseInt(query.page) || 1,\n    size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) || 30,\n    sort: query.sort || 'latest'\n  };\n  const tagsData = await getMeta(getTagsData);\n  tagsSource = tagsData.data ? tagsData.data : {\n    tags: [],\n    totalCount: 0\n  };\n  return {\n    identity,\n    navigation,\n    query,\n    tagsSource,\n    getTagsData\n  };\n};\n\nexport default tags;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","AppContext","TagElement","CategoryElement","PaginationComponent","SiteSettingSetter","tags","props","contextData","state","setState","metaData","totalCount","console","log","renderTags","tagsSource","metas","map","meta","count","_id","imageUrl","noImageUrl","name","getTagsData","pageNo","size","Math","ceil","parseInt","getInitialProps","pathname","query","req","res","err","navigation","identity","identityData","navigationData","data","setting","type","searchForImageIn","page","tagsCountPerPage","sort","tagsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n\r\nconst tags = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        metaData: [],\r\n        totalCount: 0\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n    // useEffect(() => {\r\n    //     if (props.navigation) {\r\n    //         contextData.dispatchNavigationData(props.navigation.data)\r\n    //     }\r\n    //     if (props.identity) {\r\n    //         contextData.dispatchSiteIdentity(siteIdentity => ({\r\n    //             ...siteIdentity,\r\n    //             ...props.identity\r\n    //         }))\r\n    //     }\r\n    // }, [ props ]);\r\n\r\n    const renderTags = props.tagsSource.metas.map(meta => {\r\n        if (meta.count>0){\r\n            return (\r\n                <TagElement key={meta._id} imageUrl={meta.imageUrl} noImageUrl={meta.noImageUrl} name={meta.name} count={meta.count}/>\r\n            )\r\n        }\r\n\r\n    })\r\n    return (\r\n        <>\r\n        <AppLayout>\r\n            <SiteSettingSetter  { ...props }/>\r\n            <div className='tags'>\r\n                {renderTags}\r\n            </div>\r\n            <PaginationComponent\r\n                isActive={ true }\r\n                currentPage={props.getTagsData.pageNo }\r\n                totalCount={ props.tagsSource.totalCount }\r\n                size={ props.getTagsData.size }\r\n                maxPage={ Math.ceil(parseInt(props.tagsSource.totalCount) / parseInt(props.getTagsData.size))- 1 }\r\n                // mainLinkUrl='http://localhost:3000/posts'\r\n            />\r\n        </AppLayout>\r\n            </>\r\n    );\r\n};\r\n\r\n\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let tagsSource;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getTagsData = {\r\n        type: 'tag',\r\n        searchForImageIn:'tags',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n\r\n\r\n        const tagsData = await getMeta(getTagsData)\r\n        tagsSource = tagsData.data ? tagsData.data : {tags:[],totalCount:0}\r\n\r\n\r\n\r\n    return { identity, navigation, query, tagsSource,getTagsData }\r\n}\r\nexport default tags;\r\n"]},"metadata":{},"sourceType":"module"}