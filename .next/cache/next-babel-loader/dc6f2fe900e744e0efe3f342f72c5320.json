{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nvar design = function design(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    //body\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    bodyTextColor: props.design.bodyTextColor || '#fff',\n    //homePageH1\n    homePageH1: props.design.homePageH1 || '#000',\n    //mobile theme\n    themeColor: props.design.themeColor || '#fff',\n    //top bar\n    topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    topBarTextColor: props.design.topBarTextColor || '#fff',\n    //header\n    headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    headerTextColor: props.design.headerTextColor || '#fff',\n    //navigation\n    navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    navigationTextColor: props.design.navigationTextColor || '#fff',\n    //footer\n    footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\n    footerTextColor: props.design.footerTextColor || '#fff',\n    //widgets\n    widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\n    widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\n    widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\n    widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\n    widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\n    widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\n    widgetBodyBorder: props.design.widgetBodyBorder || 'none',\n    //comments\n    commentsAuthorTextColor: '',\n    commentsDateTextColor: '',\n    commentsBodyTextColor: '',\n    commentsBackgroundColor: ''\n  }),\n      colors = _useState[0],\n      setColors = _useState[1];\n\n  var _useState2 = useState({\n    h1: {\n      color: 'black'\n    },\n    body: {}\n  }),\n      styles = _useState2[0],\n      setStyles = _useState2[1];\n\n  var onStyleChangeHandler = function onStyleChangeHandler(e) {\n    setStyles(_objectSpread({}, styles, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var renderStylesFields = Object.keys(styles).map(function (styleName) {\n    return __jsx(\"div\", {\n      className: \"styleItem\"\n    }, __jsx(\"h3\", null, styleName.replace(/([A-Z])/g, \" $1\")), __jsx(\"textarea\", {\n      name: styleName,\n      value: styles[styleName],\n      className: \"styleArea\",\n      onChange: function onChange(e) {\n        return onStyleChangeHandler(e);\n      }\n    }));\n  });\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setColors(_objectSpread({}, colors, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    updateSetting('design', _objectSpread({}, colors)).then(function () {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  var renderColorsFields = Object.keys(colors).map(function (element) {\n    return __jsx(\"div\", {\n      key: element,\n      className: \"adminDesignSection\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItems\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItem\"\n    }, __jsx(\"p\", {\n      className: \"adminDesignSectionItemTitle\"\n    }, element.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n      name: element,\n      value: colors[element],\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"div\", {\n      className: \"previewColor\",\n      style: {\n        backgroundColor: colors[element]\n      }\n    }))));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"styleItems\"\n  }, renderStylesFields), __jsx(\"div\", {\n    className: \"colorsContent\"\n  }, renderColorsFields), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\ndesign.getInitialProps = function _callee(_ref) {\n  var req, domainName, design, designData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getSetting('design', false, domainName));\n\n        case 11:\n          designData = _context.sent;\n          design = designData.data.setting ? designData.data.setting.data : {};\n          return _context.abrupt(\"return\", {\n            design: design\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default design;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","getSetting","updateSetting","AppContext","getAbsolutePath","design","props","contextData","bodyBackgroundColor","bodyTextColor","homePageH1","themeColor","topBarBackgroundColor","topBarTextColor","headerBackgroundColor","headerTextColor","navigationBackgroundColor","navigationTextColor","footerBackgroundColor","footerTextColor","widgetHeaderBackgroundColor","widgetHeaderTextColor","widgetHeaderRedirectLinkBackgroundColor","widgetHeaderRedirectLinkTextColor","widgetBodyBackgroundColor","widgetBodyTextColor","widgetBodyBorder","commentsAuthorTextColor","commentsDateTextColor","commentsBodyTextColor","commentsBackgroundColor","colors","setColors","h1","color","body","styles","setStyles","onStyleChangeHandler","e","target","name","value","renderStylesFields","Object","keys","map","styleName","replace","onChangeHandler","onSubmitHandler","preventDefault","dispatchState","state","loading","then","renderColorsFields","element","backgroundColor","getInitialProps","req","domainName","designData","data","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\n\r\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables'\r\nimport './design.scss'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport { getAbsolutePath } from '../../../_variables/_variables'\r\n\r\nconst design = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ colors, setColors ] = useState({\r\n        //body\r\n        bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\r\n        bodyTextColor: props.design.bodyTextColor || '#fff',\r\n        //homePageH1\r\n        homePageH1: props.design.homePageH1 || '#000',\r\n        //mobile theme\r\n        themeColor: props.design.themeColor || '#fff',\r\n        //top bar\r\n        topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\r\n        topBarTextColor: props.design.topBarTextColor || '#fff',\r\n        //header\r\n        headerBackgroundColor: props.design.headerBackgroundColor || '#000',\r\n        headerTextColor: props.design.headerTextColor || '#fff',\r\n        //navigation\r\n        navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\r\n        navigationTextColor: props.design.navigationTextColor || '#fff',\r\n        //footer\r\n        footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\r\n        footerTextColor: props.design.footerTextColor || '#fff',\r\n        //widgets\r\n        widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\r\n        widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\r\n        widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\r\n        widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\r\n        widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\r\n        widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\r\n        widgetBodyBorder: props.design.widgetBodyBorder || 'none',\r\n        //comments\r\n        commentsAuthorTextColor: '',\r\n        commentsDateTextColor: '',\r\n        commentsBodyTextColor: '',\r\n        commentsBackgroundColor: '',\r\n\r\n    });\r\n\r\n\r\n    const [styles,setStyles]=useState({\r\n        h1:{\r\n            color:'black'\r\n        },\r\n        body:{}\r\n    })\r\n\r\n\r\n    const onStyleChangeHandler = e =>{\r\n        setStyles({\r\n            ...styles,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const renderStylesFields = Object.keys(styles).map(styleName=>{\r\n        return(\r\n            <div className='styleItem'>\r\n                   <h3>{styleName.replace(/([A-Z])/g, \" $1\")}</h3>\r\n                   <textarea name={styleName} value={styles[styleName]} className='styleArea' onChange={e=>onStyleChangeHandler(e)}/>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onChangeHandler = e => {\r\n        setColors({\r\n            ...colors,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading: true\r\n        })\r\n        updateSetting('design', { ...colors }).then(() => {\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading: false\r\n            })\r\n        })\r\n    };\r\n    const renderColorsFields = Object.keys(colors).map(element => {\r\n        return (\r\n            <div key={ element } className=\"adminDesignSection\">\r\n                <div className=\"adminDesignSectionItems\">\r\n                    <div className=\"adminDesignSectionItem\">\r\n                        <p className='adminDesignSectionItemTitle'>{ element.replace(/([A-Z])/g, \" $1\") } :</p>\r\n                        <input name={ element } value={ colors[element] } onChange={ e => onChangeHandler(e) }/>\r\n                        <div className=\"previewColor\" style={ { backgroundColor: colors[element] } }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <form className='adminDesign' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className=\"styleItems\">\r\n                    {renderStylesFields}\r\n                </div>\r\n\r\n\r\n                <div className='colorsContent'>\r\n                    { renderColorsFields }\r\n                </div>\r\n                <button className='submitBtn' type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ndesign.getInitialProps = async ({ req }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : '';\r\n    let design;\r\n    const designData = await getSetting('design', false, domainName);\r\n    design = designData.data.setting ? designData.data.setting.data : {}\r\n    return { design }\r\n}\r\nexport default design;\r\n"]},"metadata":{},"sourceType":"module"}