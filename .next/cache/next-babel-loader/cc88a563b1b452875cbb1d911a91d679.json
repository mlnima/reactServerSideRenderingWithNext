{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\n\nconst TagsAndCategoriesActors = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: props.data || [],\n    type: props.type || 'tags',\n    fontawesome: ''\n  }); // useEffect(() => {\n  //     let fontawesome = '';\n  //     switch ( props.type ) {\n  //         case 'actors':\n  //             fontawesome = 'star'\n  //             break\n  //         case 'tags':\n  //             fontawesome = 'tags'\n  //             break\n  //         case 'categories':\n  //             fontawesome = 'folder'\n  //             break\n  //     }\n  //\n  //     setState({\n  //         ...state,\n  //         fontawesome\n  //     })\n  // }, []);\n\n  const renderData = state.data.map(item => {\n    let typeForUrl = state.type === 'categories' ? 'category' : state.type === 'tags' ? 'tag' : state.type === 'actors' ? 'actor' : 'tag';\n    const path = `/posts?${typeForUrl}=${item}`;\n    return __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", {\n      className: state.type\n    }, item));\n  });\n\n  if (props.data.length > 1) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories-actors'\n    }, __jsx(\"span\", null, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: state.fontawesome\n    }), \" \", state.type.charAt(0).toUpperCase() + state.type.substring(1), \":\"), __jsx(\"div\", {\n      className: \"content\"\n    }, renderData));\n  } else return null;\n};\n\nexport default TagsAndCategoriesActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/TagsAndCategoriesActors/TagsAndCategoriesActors.js"],"names":["React","useEffect","useState","useContext","Link","FA","TagsAndCategoriesActors","props","state","setState","data","type","fontawesome","renderData","map","item","typeForUrl","path","length","charAt","toUpperCase","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAEA,MAAMC,uBAAuB,GAAGC,KAAK,IAAI;AACrC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,IAAc,EADa;AAEjCC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,IAAc,MAFa;AAGjCC,IAAAA,WAAW,EAAE;AAHoB,GAAD,CAApC,CADqC,CAOrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAGL,KAAK,CAACE,IAAN,CAAWI,GAAX,CAAeC,IAAI,IAAI;AACtC,QAAIC,UAAU,GAAGR,KAAK,CAACG,IAAN,KAAe,YAAf,GAA8B,UAA9B,GACXH,KAAK,CAACG,IAAN,KAAe,MAAf,GAAwB,KAAxB,GACIH,KAAK,CAACG,IAAN,KAAe,QAAf,GAA0B,OAA1B,GACI,KAHd;AAIA,UAAMM,IAAI,GAAI,UAAUD,UAAY,IAAID,IAAM,EAA9C;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAGE,IAAb;AAAoB,MAAA,GAAG,EAAGF;AAA1B,OAAiC;AAAG,MAAA,SAAS,EAAGP,KAAK,CAACG;AAArB,OAA8BI,IAA9B,CAAjC,CADJ;AAGH,GATkB,CAAnB;;AAWA,MAAIR,KAAK,CAACG,IAAN,CAAWQ,MAAX,GAAoB,CAAxB,EAA2B;AACvB,WACI;AAAK,MAAA,SAAS,EAAGV,KAAK,CAACG,IAAN,GAAa;AAA9B,OACI,oBAAM,MAAC,EAAD;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAkC,MAAA,IAAI,EAAGH,KAAK,CAACI;AAA/C,MAAN,OAAuEJ,KAAK,CAACG,IAAN,CAAWQ,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCZ,KAAK,CAACG,IAAN,CAAWU,SAAX,CAAqB,CAArB,CAA5G,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACMR,UADN,CAFJ,CADJ;AAQH,GATD,MASO,OAAO,IAAP;AAEV,CAjDD;;AAkDA,eAAeP,uBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\n\r\nconst TagsAndCategoriesActors = props => {\r\n    const [ state, setState ] = useState({\r\n        data: props.data || [],\r\n        type: props.type || 'tags',\r\n        fontawesome: ''\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     let fontawesome = '';\r\n    //     switch ( props.type ) {\r\n    //         case 'actors':\r\n    //             fontawesome = 'star'\r\n    //             break\r\n    //         case 'tags':\r\n    //             fontawesome = 'tags'\r\n    //             break\r\n    //         case 'categories':\r\n    //             fontawesome = 'folder'\r\n    //             break\r\n    //     }\r\n    //\r\n    //     setState({\r\n    //         ...state,\r\n    //         fontawesome\r\n    //     })\r\n    // }, []);\r\n\r\n    const renderData = state.data.map(item => {\r\n        let typeForUrl = state.type === 'categories' ? 'category'\r\n            : state.type === 'tags' ? 'tag'\r\n                : state.type === 'actors' ? 'actor'\r\n                    : 'tag'\r\n        const path = `/posts?${ typeForUrl }=${ item }`;\r\n        return (\r\n            <Link href={ path } key={ item }><a className={ state.type }>{ item }</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.data.length > 1) {\r\n        return (\r\n            <div className={ state.type + ' tags-categories-actors' }>\r\n                <span><FA className='fontawesomeMedium' name={ state.fontawesome }/> { state.type.charAt(0).toUpperCase() + state.type.substring(1) }:</span>\r\n                <div className=\"content\">\r\n                    { renderData }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default TagsAndCategoriesActors;"]},"metadata":{},"sourceType":"module"}