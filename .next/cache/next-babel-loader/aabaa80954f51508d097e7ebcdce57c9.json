{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from \"react-fontawesome\";\n\nconst PostCategoriesTagsActors = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  let newItemsElement = useRef(null);\n\n  const deleteItem = e => {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {\n      [props.type]: contextData.editingPostData[props.type].filter(i => {\n        return i !== e.currentTarget.name;\n      })\n    }));\n  };\n\n  const addNewItem = () => {\n    console.log(newItemsElement.current.value.includes(','));\n\n    if (newItemsElement.current.value.includes(',')) {\n      let newItems = newItemsElement.current.value.split(',');\n      contextData.dispatchEditingPostData(editingPostData => _objectSpread({}, editingPostData, {\n        [props.type]: [...contextData.editingPostData[props.type], ...newItems]\n      }));\n    } else {\n      // let newItems = contextData.editingPostData[props.type].push(newItemsElement.current.value);\n      //     newItems = [...contextData.editingPostData[props.type],newItemsElement.current.value];\n      // console.log( contextData.editingPostData[props.type],newItems)\n      contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {\n        [props.type]: [...contextData.editingPostData[props.type], newItemsElement.current.value]\n      }));\n    }\n  };\n\n  const addedItems = contextData.editingPostData[props.type].map(item => {\n    let icon = props.type === 'tags' ? 'tags' : props.type === 'actors' ? 'star' : props.type === 'categories' ? 'folder' : '';\n    return __jsx(\"div\", {\n      key: item,\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: e => deleteItem(e)\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(\"div\", {\n    className: \"PostCategoriesTagsActors\"\n  }, __jsx(\"div\", {\n    className: \"addNewTag\"\n  }, __jsx(\"input\", {\n    ref: newItemsElement,\n    type: \"text\"\n  }), __jsx(\"button\", {\n    onClick: () => addNewItem()\n  }, \" Add\")), __jsx(\"span\", null, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, addedItems));\n};\n\nexport default PostCategoriesTagsActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FA","PostCategoriesTagsActors","props","contextData","items","setItems","newItemsElement","deleteItem","e","dispatchEditingPostData","editingPostData","type","filter","i","currentTarget","name","addNewItem","console","log","current","value","includes","newItems","split","addedItems","map","item","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport FA from \"react-fontawesome\";\r\n\r\nconst PostCategoriesTagsActors = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ items, setItems ] = useState([]);\r\n    let newItemsElement = useRef(null);\r\n\r\n\r\n    const deleteItem = (e) => {\r\n        contextData.dispatchEditingPostData({\r\n            ...contextData.editingPostData,\r\n            [props.type]: contextData.editingPostData[props.type].filter(i=> {return i!== e.currentTarget.name}),\r\n        })\r\n    };\r\n\r\n    const addNewItem = () => {\r\n        console.log(newItemsElement.current.value.includes(',') )\r\n        if (newItemsElement.current.value.includes(',')) {\r\n            let newItems = newItemsElement.current.value.split(',');\r\n            contextData.dispatchEditingPostData(editingPostData => ({\r\n                ...editingPostData,\r\n                [props.type]: [ ...contextData.editingPostData[props.type], ...newItems ]\r\n            }))\r\n        } else {\r\n            // let newItems = contextData.editingPostData[props.type].push(newItemsElement.current.value);\r\n            //     newItems = [...contextData.editingPostData[props.type],newItemsElement.current.value];\r\n            // console.log( contextData.editingPostData[props.type],newItems)\r\n                contextData.dispatchEditingPostData({\r\n                    ...contextData.editingPostData,\r\n                    [props.type]:  [...contextData.editingPostData[props.type],newItemsElement.current.value]\r\n                })\r\n        }\r\n    };\r\n\r\n    const addedItems = contextData.editingPostData[props.type].map(item => {\r\n        let icon = props.type === 'tags' ? 'tags'\r\n            : props.type === 'actors' ? 'star'\r\n                : props.type === 'categories' ? 'folder'\r\n                    : '';\r\n\r\n        return (\r\n            <div key={ item }  className='item'>\r\n                <p>{ item }</p>\r\n\r\n                <button name={ item } onClick={ (e) => deleteItem(e) } ><FA className='fontawesomeMedium' name='times'/></button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='PostCategoriesTagsActors'>\r\n            <div className=\"addNewTag\">\r\n                <input ref={ newItemsElement } type='text'/>\r\n                <button onClick={ () => addNewItem() }> Add</button>\r\n            </div>\r\n            <span>Separate tags with commas</span>\r\n            <div className=\"items\">\r\n                { addedItems }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PostCategoriesTagsActors;"]},"metadata":{},"sourceType":"module"}