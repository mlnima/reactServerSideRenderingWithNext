{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport Link from 'next/link';\n\nvar PaginationComponent = function PaginationComponent(props) {\n  var _useState = useState({\n    pages: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var numberGen = function numberGen(current) {\n    var numArr = [];\n\n    if (current === 1) {\n      for (var i = 1; i <= 7; i++) {\n        numArr.push(i);\n      }\n    }\n\n    if (current === 2) {\n      numArr.push(1);\n\n      for (var _i = 2; _i <= 7; _i++) {\n        numArr.push(_i);\n      }\n    }\n\n    if (current === 3) {\n      numArr.push(1);\n      numArr.push(2);\n\n      for (var _i2 = 3; _i2 <= 7; _i2++) {\n        numArr.push(_i2);\n      }\n    }\n\n    if (current > 3) {\n      var min = current - 3;\n      var max = current + 3;\n\n      for (var _i3 = current; _i3 <= max; _i3++) {\n        numArr.push(_i3);\n      }\n\n      for (var _i4 = current; _i4 >= min; _i4--) {\n        numArr.push(_i4);\n      }\n    }\n\n    if (current > 3) {\n      numArr.push(1);\n    }\n\n    if (Math.ceil(props.totalCount / props.size)) {\n      numArr.push(_parseInt(props.maxPage) - 1);\n    }\n\n    numArr = _toConsumableArray(new _Set(numArr));\n    numArr = numArr.sort(function (x, y) {\n      return x - y;\n    });\n    return numArr;\n  };\n\n  var currentPageNumberStyle = function currentPageNumberStyle(number) {\n    var style = {};\n    var normalStyle = {\n      color: 'white'\n    };\n    var activeStyle = {\n      background: 'none',\n      backgroundColor: ' #f90',\n      color: ' #151719',\n      fontWeight: 'bold',\n      fontSize: 'large'\n    };\n\n    if (isNaN(props.currentPage)) {\n      var pageNo = 1;\n\n      if (number === pageNo) {\n        style = activeStyle;\n      }\n    } else {\n      if (number === props.currentPage) {\n        style = activeStyle;\n      } else {\n        style = normalStyle;\n      }\n    }\n\n    return style;\n  };\n\n  useEffect(function () {\n    if (!props.currentPage) {\n      var pageNo = 1;\n      setState({\n        pages: numberGen(pageNo)\n      });\n    } else {\n      setState({\n        pages: numberGen(props.currentPage)\n      });\n    }\n  }, [props]);\n  useEffect(function () {\n    console.log(props, state);\n  }, [props]);\n  var pageNumbersGenerator = state.pages.map(function (num) {\n    // let min = parseInt(props.maxPage) -3\n    if (num > 0 && num <= Math.ceil(props.totalCount / props.size) - 1) {\n      var numInBtn = num.toString();\n      var path = props.mainLinkUrl + numInBtn;\n      return __jsx(Link, {\n        key: num,\n        href: path\n      }, \" \", __jsx(\"a\", {\n        style: currentPageNumberStyle(num)\n      }, __jsx(\"span\", null, \" \", numInBtn, \" \")), \" \");\n    }\n  });\n\n  if (props.isActive) {\n    return __jsx(\"div\", null, pageNumbersGenerator);\n  } else return null;\n};\n\nexport default PaginationComponent;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/PaginationComponent/PaginationComponent.js"],"names":["React","useEffect","useState","useContext","useRef","Link","PaginationComponent","props","pages","state","setState","numberGen","current","numArr","i","push","min","max","Math","ceil","totalCount","size","maxPage","sort","x","y","currentPageNumberStyle","number","style","normalStyle","color","activeStyle","background","backgroundColor","fontWeight","fontSize","isNaN","currentPage","pageNo","console","log","pageNumbersGenerator","map","num","numInBtn","toString","path","mainLinkUrl","isActive"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport Link from 'next/link'\r\n\r\nconst PaginationComponent = props => {\r\n    const [ state, setState ] = useState({\r\n        pages: [],\r\n    });\r\n\r\n    let numberGen = (current) => {\r\n        let numArr = [];\r\n        if (current === 1) {\r\n            for (let i = 1; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current === 2) {\r\n            numArr.push(1)\r\n            for (let i = 2; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current === 3) {\r\n            numArr.push(1)\r\n            numArr.push(2)\r\n            for (let i = 3; i <= 7; i++) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current > 3) {\r\n            let min = current - 3\r\n            let max = current + 3\r\n            for (let i = current; i <= max; i++) {\r\n                numArr.push(i)\r\n            }\r\n            for (let i = current; i >= min; i--) {\r\n                numArr.push(i)\r\n            }\r\n        }\r\n        if (current > 3) {\r\n            numArr.push(1)\r\n        }\r\n        if (Math.ceil(props.totalCount / props.size)) {\r\n            numArr.push(parseInt(props.maxPage) - 1)\r\n        }\r\n\r\n        numArr = [ ...new Set(numArr) ];\r\n        numArr = numArr.sort((x, y) => {\r\n            return x - y\r\n        });\r\n\r\n        return numArr\r\n    };\r\n\r\n    let currentPageNumberStyle = (number) => {\r\n        let style = {};\r\n        let normalStyle = {\r\n            color: 'white'\r\n        };\r\n        let activeStyle = {\r\n            background: 'none',\r\n            backgroundColor: ' #f90',\r\n            color: ' #151719',\r\n            fontWeight: 'bold',\r\n            fontSize: 'large'\r\n        };\r\n\r\n        if (isNaN(props.currentPage)) {\r\n            let pageNo = 1;\r\n            if (number === pageNo) {\r\n                style = activeStyle\r\n            }\r\n        } else {\r\n            if (number === props.currentPage) {\r\n                style = activeStyle\r\n            } else {\r\n                style = normalStyle\r\n            }\r\n        }\r\n        return style\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (!props.currentPage) {\r\n            let pageNo = 1;\r\n            setState({\r\n                pages: numberGen(pageNo)\r\n            });\r\n        } else {\r\n            setState({\r\n                pages: numberGen(props.currentPage)\r\n            });\r\n        }\r\n\r\n    }, [ props ]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props,state)\r\n    }, [ props ]);\r\n\r\n    let pageNumbersGenerator = state.pages.map(num => {\r\n        // let min = parseInt(props.maxPage) -3\r\n        if (num > 0 && num <= (Math.ceil(props.totalCount / props.size) - 1)) {\r\n            let numInBtn = num.toString();\r\n            let path = props.mainLinkUrl + numInBtn\r\n            return (<Link key={ num } href={ path }> <a style={ currentPageNumberStyle(num) }><span> { numInBtn } </span></a> </Link>)\r\n        }\r\n\r\n    });\r\n    if (props.isActive) {\r\n        return (\r\n            <div>\r\n                { pageNumbersGenerator }\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default PaginationComponent;\r\n"]},"metadata":{},"sourceType":"module"}