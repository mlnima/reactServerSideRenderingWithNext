{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport './FilterDropDownActions.scss';\n\nconst FilterDropDownActions = props => {\n  const contextData = useContext(AppContext);\n  const bulkAction = useRef(null);\n  const typeToDisplay = useRef(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({}); // useEffect(() => {\n  //     typeToDisplay.current.value = contextData.postsData.type\n  // }, []);\n\n  const onFormatChangeHandler = () => {// if (bulkAction.current.value !== 'none') {\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         loading:true\n    //     });\n    //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\n    //        setData()\n    //     }).catch(err=>{\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading:false\n    //         })\n    //     })\n    // }\n  };\n\n  const changePostsTypeToDisplay = e => {// if (e.target.value !== 'none') {\n    //     contextData.setPostsData({\n    //         ...contextData.postsData,\n    //         type: e.target.value\n    //     })\n    // }\n  };\n\n  const onEmptyTrashHandler = () => {// emptyTrash().then(res=>{\n    //     if (res.data.error){\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'red'\n    //         })\n    //     }else {\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             loading: false\n    //         });\n    //         setData();\n    //         contextData.setState({\n    //             ...contextData.state,\n    //             report:res.data.message,\n    //             reportColor:'green'\n    //         })\n    //     }\n    // }).catch(()=>{\n    //     contextData.setState({\n    //         ...contextData.state,\n    //         report:'Can Not Communicate With Server'\n    //     })\n    // })\n  };\n\n  const EmptyTrash = () => {\n    // if (contextData.postsData.status === 'Trash'){\n    //     return (\n    //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\n    //     )\n    // }else\n    return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterDropDownActions\"\n  }, __jsx(\"div\", {\n    className: \"bulkAction\"\n  }, __jsx(\"select\", {\n    ref: bulkAction,\n    placeholder: \"Bulk Actions\"\n  }, __jsx(\"option\", {\n    value: \"none\"\n  }, \"Bulk Actions\"), __jsx(\"option\", {\n    value: \"Published\"\n  }, \"Published\"), __jsx(\"option\", {\n    value: \"Draft\"\n  }, \"Draft\"), __jsx(\"option\", {\n    value: \"Trash\"\n  }, \"Trash\")), __jsx(\"button\", {\n    className: \"actionBtn\",\n    onClick: () => onFormatChangeHandler()\n  }, \"Apply\")), __jsx(\"div\", {\n    className: \"DateCategoryFotmat\"\n  }, __jsx(\"select\", {\n    ref: typeToDisplay,\n    onChange: e => changePostsTypeToDisplay(e)\n  }, __jsx(\"option\", {\n    value: \"Video\"\n  }, \"Video\"), __jsx(\"option\", {\n    value: \"Standard\"\n  }, \"Standard\"))), __jsx(EmptyTrash, null));\n};\n\nexport default FilterDropDownActions;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterDropDownActions.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FilterDropDownActions","props","contextData","bulkAction","typeToDisplay","state","setState","onFormatChangeHandler","changePostsTypeToDisplay","e","onEmptyTrashHandler","EmptyTrash"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAO,8BAAP;;AAGA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACnC,QAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;AACA,QAAMI,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMM,aAAa,GAAGN,MAAM,CAAC,IAAD,CAA5B;AAEA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC,CALmC,CAMnC;AACA;AACA;;AAEA,QAAMW,qBAAqB,GAAG,MAAM,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAfD;;AAkBA,QAAMC,wBAAwB,GAAGC,CAAC,IAAE,CAChC;AACA;AACA;AACA;AACA;AACA;AACH,GAPD;;AAUA,QAAMC,mBAAmB,GAAG,MAAI,CAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1BD;;AA6BA,QAAMC,UAAU,GAAE,MAAI;AAClB;AACA;AACA;AACA;AACA;AACI,WAAO,IAAP;AACP,GAPD;;AASA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,GAAG,EAAER,UAAb;AAAyB,IAAA,WAAW,EAAC;AAArC,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,iBAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC;AAAd,aAHJ,EAII;AAAQ,IAAA,KAAK,EAAC;AAAd,aAJJ,CADJ,EAOI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAE,MAAMI,qBAAqB;AAAlE,aAPJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,GAAG,EAAEH,aAAb;AAA4B,IAAA,QAAQ,EAAEK,CAAC,IAAID,wBAAwB,CAACC,CAAD;AAAnE,KAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,aAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC;AAAd,gBAHJ,CADJ,CAVJ,EAiBI,MAAC,UAAD,OAjBJ,CADJ;AAqBH,CAjGD;;AAkGA,eAAeT,qBAAf","sourcesContent":["import React, {useEffect, useState, useContext, useRef} from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport './FilterDropDownActions.scss'\r\n\r\n\r\nconst FilterDropDownActions = props => {\r\n    const contextData = useContext(AppContext);\r\n    const bulkAction = useRef(null);\r\n    const typeToDisplay = useRef(null);\r\n\r\n    const [state, setState] = useState({});\r\n    // useEffect(() => {\r\n    //     typeToDisplay.current.value = contextData.postsData.type\r\n    // }, []);\r\n\r\n    const onFormatChangeHandler = () => {\r\n        // if (bulkAction.current.value !== 'none') {\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         loading:true\r\n        //     });\r\n        //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\r\n        //        setData()\r\n        //     }).catch(err=>{\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n        // }\r\n    };\r\n\r\n\r\n    const changePostsTypeToDisplay = e=>{\r\n        // if (e.target.value !== 'none') {\r\n        //     contextData.setPostsData({\r\n        //         ...contextData.postsData,\r\n        //         type: e.target.value\r\n        //     })\r\n        // }\r\n    };\r\n\r\n\r\n    const onEmptyTrashHandler = ()=>{\r\n        // emptyTrash().then(res=>{\r\n        //     if (res.data.error){\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'red'\r\n        //         })\r\n        //     }else {\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading: false\r\n        //         });\r\n        //         setData();\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'green'\r\n        //         })\r\n        //     }\r\n        // }).catch(()=>{\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         report:'Can Not Communicate With Server'\r\n        //     })\r\n        // })\r\n    }\r\n\r\n\r\n    const EmptyTrash =()=>{\r\n        // if (contextData.postsData.status === 'Trash'){\r\n        //     return (\r\n        //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\r\n        //     )\r\n        // }else\r\n            return null\r\n    };\r\n\r\n    return (\r\n        <div className='FilterDropDownActions'>\r\n            <div className=\"bulkAction\">\r\n                <select ref={bulkAction} placeholder='Bulk Actions' >\r\n                    <option value='none'>Bulk Actions</option>\r\n                    <option value='Published'>Published</option>\r\n                    <option value='Draft'>Draft</option>\r\n                    <option value='Trash'>Trash</option>\r\n                </select>\r\n                <button className='actionBtn' onClick={() => onFormatChangeHandler()}>Apply</button>\r\n            </div>\r\n            <div className=\"DateCategoryFotmat\">\r\n                <select ref={typeToDisplay} onChange={e => changePostsTypeToDisplay(e)}>\r\n                    {/*<option value='none'>All formats</option>*/}\r\n                    <option value='Video'>Video</option>\r\n                    <option value='Standard'>Standard</option>\r\n                </select>\r\n            </div>\r\n            <EmptyTrash/>\r\n        </div>\r\n    );\r\n};\r\nexport default FilterDropDownActions;"]},"metadata":{},"sourceType":"module"}