{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { getComments } from '../../../_variables/ajaxPostsVariables';\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments';\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport AppLayout from '../../../components/layouts/AppLayout';\n\nvar comments = function comments(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", null, __jsx(AdminCommentsControl, {\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getCommentsData.pageNo,\n    totalCount: props.totalComments,\n    size: props.getCommentsData.size,\n    maxPage: Math.ceil(_parseInt(props.totalComments) / _parseInt(props.getCommentsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  }), __jsx(AdminRenderComments, props)));\n};\n\ncomments.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, comments, getCommentsData, commentsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          getCommentsData = {\n            size: _parseInt(query.size) || 30,\n            pageNo: _parseInt(query.page) || 1,\n            keyword: query.keyword || '',\n            sort: query.sort || 'latest',\n            status: query.status || 'all'\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getComments(getCommentsData));\n\n        case 4:\n          commentsData = _context.sent;\n          comments = commentsData.data;\n          return _context.abrupt(\"return\", {\n            query: query,\n            pathname: pathname,\n            comments: comments.comments,\n            totalComments: comments.count,\n            getCommentsData: getCommentsData\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default comments;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/comments/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","getComments","AdminRenderComments","AdminCommentsControl","PaginationComponent","AppLayout","comments","props","state","setState","query","router","pathname","getCommentsData","pageNo","totalComments","size","Math","ceil","getInitialProps","req","res","err","page","keyword","sort","status","commentsData","data","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,OAAOC,mBAAP,MAAgC,kGAAhC;AACA,OAAOC,oBAAP,MAAiC,oGAAjC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,SAAP,MAAsB,uCAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,kBACMV,QAAQ,CAAC,EAAD,CADd;AAAA,MACdW,KADc;AAAA,MACPC,QADO;;AAGtB,SACI,MAAC,WAAD,QACI,mBACI,MAAC,oBAAD;AACI,IAAA,SAAS,EAAEF,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACI,MAAN,CAAaD,KAD3C;AAEI,IAAA,YAAY,EAAEH,KAAK,CAACK,QAAN,IAAiBL,KAAK,CAACI,MAAN,CAAaC;AAFhD,IADJ,EAKI,MAAC,mBAAD;AACI,IAAA,QAAQ,EAAG,IADf;AAEI,IAAA,WAAW,EAAGL,KAAK,CAACM,eAAN,CAAsBC,MAFxC;AAGI,IAAA,UAAU,EAAGP,KAAK,CAACQ,aAHvB;AAII,IAAA,IAAI,EAAGR,KAAK,CAACM,eAAN,CAAsBG,IAJjC;AAKI,IAAA,OAAO,EAAGC,IAAI,CAACC,IAAL,CAAU,UAASX,KAAK,CAACQ,aAAf,IAAgC,UAASR,KAAK,CAACM,eAAN,CAAsBG,IAA/B,CAA1C,CALd;AAMI,IAAA,SAAS,EAAET,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACI,MAAN,CAAaD,KAN3C;AAOI,IAAA,YAAY,EAAEH,KAAK,CAACK,QAAN,IAAiBL,KAAK,CAACI,MAAN,CAAaC;AAPhD,IALJ,EAcG,MAAC,mBAAD,EAAyBL,KAAzB,CAdH,CADJ,CADJ;AAoBH,CAvBD;;AAyBAD,QAAQ,CAACa,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASP,UAAAA,QAAT,QAASA,QAAT,EAAmBF,KAAnB,QAAmBA,KAAnB,EAA0BU,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAEjBT,UAAAA,eAFiB,GAEC;AACpBG,YAAAA,IAAI,EAAE,UAASN,KAAK,CAACM,IAAf,KAAwB,EADV;AAEpBF,YAAAA,MAAM,EAAE,UAASJ,KAAK,CAACa,IAAf,KAAwB,CAFZ;AAGpBC,YAAAA,OAAO,EAAEd,KAAK,CAACc,OAAN,IAAiB,EAHN;AAIpBC,YAAAA,IAAI,EAAEf,KAAK,CAACe,IAAN,IAAc,QAJA;AAKpBC,YAAAA,MAAM,EAAEhB,KAAK,CAACgB,MAAN,IAAgB;AALJ,WAFD;AAAA;AAAA,2CASIzB,WAAW,CAACY,eAAD,CATf;;AAAA;AASjBc,UAAAA,YATiB;AAUvBrB,UAAAA,QAAQ,GAACqB,YAAY,CAACC,IAAtB;AAVuB,2CAWhB;AAAGlB,YAAAA,KAAK,EAALA,KAAH;AAASE,YAAAA,QAAQ,EAARA,QAAT;AAAkBN,YAAAA,QAAQ,EAACA,QAAQ,CAACA,QAApC;AAA6CS,YAAAA,aAAa,EAACT,QAAQ,CAACuB,KAApE;AAA0EhB,YAAAA,eAAe,EAAfA;AAA1E,WAXgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAaA,eAAeP,QAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout'\r\nimport {getComments} from '../../../_variables/ajaxPostsVariables'\r\nimport AdminRenderComments from '../../../components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments'\r\nimport AdminCommentsControl from '../../../components/adminIncludes/commentsPageComponents/AdminCommentsControl/AdminCommentsControl'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\n\r\nconst comments = props => {\r\n    const [ state, setState ] = useState({});\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div>\r\n                <AdminCommentsControl\r\n                    queryData={props.query || props.router.query}\r\n                    pathnameData={props.pathname ||props.router.pathname }\r\n                />\r\n                <PaginationComponent\r\n                    isActive={ true }\r\n                    currentPage={ props.getCommentsData.pageNo }\r\n                    totalCount={ props.totalComments }\r\n                    size={ props.getCommentsData.size }\r\n                    maxPage={ Math.ceil(parseInt(props.totalComments) / parseInt(props.getCommentsData.size)) }\r\n                    queryData={props.query || props.router.query}\r\n                    pathnameData={props.pathname ||props.router.pathname }\r\n                />\r\n               <AdminRenderComments {...props}/>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ncomments.getInitialProps = async ({ pathname, query, req, res, err }) =>{\r\n    let comments;\r\n    const getCommentsData = {\r\n        size: parseInt(query.size)  ||30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        keyword: query.keyword || '',\r\n        sort: query.sort || 'latest',\r\n        status: query.status || 'all',\r\n    }\r\n    const commentsData = await getComments(getCommentsData)\r\n    comments=commentsData.data\r\n    return {  query,pathname,comments:comments.comments,totalComments:comments.count,getCommentsData }\r\n}\r\nexport default comments;\r\n"]},"metadata":{},"sourceType":"module"}