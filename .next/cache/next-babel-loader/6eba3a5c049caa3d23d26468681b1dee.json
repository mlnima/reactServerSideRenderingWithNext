{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport withRouter from \"next/dist/client/with-router\";\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\nimport Head from \"next/head\";\nimport { getSetting } from \"../../_variables/ajaxVariables\";\nimport { AppContext } from \"../../context/AppContext\";\n\nconst Post = props => {\n  const contextData = useContext(AppContext);\n\n  const RenderMeta = () => {\n    if (props.post.title) {\n      return __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n        name: \"description\",\n        content: props.post.description\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: [...props.post.tags, ...props.post.categories, ...props.post.actors]\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: props.post.title\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: props.post.videoEmbedCode\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: props.post.mainThumbnail\n      }));\n    } else return null;\n  };\n\n  useEffect(() => {\n    console.log(props);\n\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(React.Fragment, null, __jsx(RenderMeta, null), __jsx(\"div\", {\n    className: \"post\"\n  }, __jsx(PostSidebar, null), __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode,\n    meta: {\n      description: props.post.description,\n      title: props.post.title,\n      duration: props.post.duration,\n      thumbnailUrl: props.post.mainThumbnail,\n      embedURL: props.post.videoEmbedCode,\n      uploadDate: props.post.lastModify\n    }\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    actors: props.post.actors,\n    categories: props.post.categories,\n    id: props.post._id,\n    likes: props.post.likes,\n    disLikes: props.post.disLikes,\n    views: props.post.views,\n    videoEmbedCode: props.post.videoEmbedCode\n  })))));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let post;\n  let navigation;\n  const postBody = {\n    postTitle: query.postTitle\n  };\n  const navigationBody = {\n    type: 'navigation'\n  };\n\n  try {\n    // const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\n    const postData = await getPost(postBody);\n    post = postData.data.post;\n    const navigationData = await axios.post('http://localhost:3000/api/v1/settings/get', navigationBody);\n    navigation = navigationData.data.setting;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    post,\n    query,\n    navigation\n  };\n};\n\nexport default withRouter(Post);","map":null,"metadata":{},"sourceType":"module"}