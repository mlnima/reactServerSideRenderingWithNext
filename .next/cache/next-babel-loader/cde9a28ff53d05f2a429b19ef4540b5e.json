{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { clickPathGenerator } from '../../../../_variables/_variables';\n\nvar FileManagerArea = function FileManagerArea(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n\n  var fileLogoDetector = function fileLogoDetector(fileName) {\n    var nextClass = '';\n\n    if (props.data.clickedItem === clickPathGenerator(fileName, props.data.path)) {\n      nextClass = ' clickedItem';\n    } else {\n      nextClass = ' unClickedItem';\n    }\n\n    if (fileName.includes('.js')) {\n      return \"fab fa-js\" + nextClass;\n    } else if (fileName.includes('.env')) {\n      return \"fas fa-sliders-h\" + nextClass;\n    } else if (!fileName.includes('.')) {\n      return \"fas fa-folder\" + nextClass;\n    } else if (fileName.includes('.scss')) {\n      return \"fab fa-sass\" + nextClass;\n    } else return \"fas fa-file\" + nextClass;\n  };\n\n  var onClickHandler = function onClickHandler(e) {\n    var clickedItem = props.data.clickedItem;\n    var filePath = clickPathGenerator(e.target.name, props.data.path);\n\n    if (props.data.clickedItem === filePath) {\n      props.setStateHandler('clickedItem', '');\n    } else {\n      props.setStateHandler('clickedItem', filePath);\n    }\n  };\n\n  var onDoubleClickHandler = function onDoubleClickHandler(e) {\n    contextData.setState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    var newPath;\n\n    if (props.data.path === './') {\n      newPath = props.data.path + e.target.name;\n    } else {\n      newPath = props.data.path + '/' + e.target.name;\n    }\n\n    props.setStateHandler('path', newPath);\n    props.setStateHandler('selectedItem', []);\n    contextData.setState(_objectSpread({}, contextData.state, {\n      loading: false\n    }));\n  };\n\n  var renderDir = props.data.files.map(function (item) {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"dirItem\"\n    }, __jsx(\"button\", {\n      // ref={() => selectedItem.current[props.data.files.indexOf(item)]}\n      className: [fileLogoDetector(item)],\n      key: item,\n      name: item,\n      onClick: function onClick(e) {\n        return onClickHandler(e);\n      },\n      onDoubleClick: function onDoubleClick(e) {\n        return onDoubleClickHandler(e);\n      },\n      onContextMenu: function onContextMenu(e) {\n        return onContextMenuHandler(e);\n      }\n    }), __jsx(\"p\", null, \" \", item));\n  });\n  return __jsx(\"div\", {\n    className: \"FileManagerArea\"\n  }, renderDir);\n};\n\nexport default FileManagerArea; // <buttonref={() => selectedItem.current[props.data.files.indexOf(item)]}\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea.js"],"names":["React","useEffect","useState","useContext","useRef","clickPathGenerator","FileManagerArea","props","state","setState","console","log","fileLogoDetector","fileName","nextClass","data","clickedItem","path","includes","onClickHandler","e","filePath","target","name","setStateHandler","onDoubleClickHandler","contextData","loading","newPath","renderDir","files","map","item","onContextMenuHandler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {clickPathGenerator} from '../../../../_variables/_variables'\r\n\r\nconst FileManagerArea = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, [ props ]);\r\n\r\n\r\n\r\n\r\n    const fileLogoDetector = fileName => {\r\n        let nextClass = '';\r\n        if (props.data.clickedItem === clickPathGenerator(fileName,props.data.path)) {\r\n            nextClass = ' clickedItem'\r\n        } else {\r\n            nextClass = ' unClickedItem'\r\n        }\r\n\r\n        if (fileName.includes('.js')) {\r\n            return \"fab fa-js\" + nextClass\r\n        } else if (fileName.includes('.env')) {\r\n            return \"fas fa-sliders-h\" + nextClass\r\n        } else if (!fileName.includes('.')) {\r\n            return \"fas fa-folder\" + nextClass\r\n        } else if (fileName.includes('.scss')) {\r\n            return \"fab fa-sass\" + nextClass\r\n        } else return \"fas fa-file\" + nextClass\r\n    };\r\n\r\n    const onClickHandler = e => {\r\n        let clickedItem = props.data.clickedItem;\r\n        let filePath = clickPathGenerator(e.target.name,props.data.path);\r\n\r\n        if (props.data.clickedItem === filePath ){\r\n            props.setStateHandler('clickedItem','')\r\n        }else{\r\n            props.setStateHandler('clickedItem',filePath)\r\n        }\r\n    };\r\n\r\n    const onDoubleClickHandler = e => {\r\n        contextData.setState({\r\n            ...contextData.state,\r\n            loading: true\r\n        });\r\n        let newPath;\r\n        if (props.data.path === './') {\r\n            newPath = props.data.path + e.target.name;\r\n        } else {\r\n            newPath = props.data.path + '/' + e.target.name;\r\n        }\r\n        props.setStateHandler('path',newPath)\r\n        props.setStateHandler('selectedItem',[])\r\n\r\n\r\n        contextData.setState({\r\n            ...contextData.state,\r\n            loading: false\r\n        });\r\n    };\r\n\r\n\r\n    let renderDir = props.data.files.map(item => {\r\n        return (\r\n            <div key={item} className='dirItem'>\r\n               <button\r\n                   // ref={() => selectedItem.current[props.data.files.indexOf(item)]}\r\n                   className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\r\n                   onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>\r\n\r\n                <p> {item}</p>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div className='FileManagerArea'>\r\n            {renderDir}\r\n        </div>\r\n    );\r\n};\r\nexport default FileManagerArea;\r\n\r\n// <buttonref={() => selectedItem.current[props.data.files.indexOf(item)]}\r\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\r\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>"]},"metadata":{},"sourceType":"module"}