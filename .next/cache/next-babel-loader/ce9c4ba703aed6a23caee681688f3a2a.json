{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport { Checkbox } from 'pretty-checkbox-react';\nimport './IsInSlideShow.scss';\n\nconst IsInSlideShow = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    isChecked: false\n  });\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      isChecked: props.postData.inSlideShow || false\n    }));\n  }, [props.postData.inSlideShow]);\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(Switch, {\n    name: \"inSlideShow\",\n    onChange: e => props.onChangeHandler(e),\n    checked: state.isChecked\n  }), __jsx(Checkbox, {\n    state: state.isChecked,\n    onChange: e => props.onChangeHandler(e)\n  }, \"Yes! I want emails!\")));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","Checkbox","IsInSlideShow","props","state","setState","isChecked","postData","inSlideShow","e","onChangeHandler"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,sBAAP;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,SAAS,EAAE;AADsB,GAAD,CAApC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,mBACDD,KADC;AAEJE,MAAAA,SAAS,EAAGH,KAAK,CAACI,QAAN,CAAeC,WAAf,IAA8B;AAFtC,OAAR;AAIH,GALQ,EAKN,CAACL,KAAK,CAACI,QAAN,CAAeC,WAAhB,CALM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,QAAQ,EAAGC,CAAC,IAAGN,KAAK,CAACO,eAAN,CAAsBD,CAAtB,CAA1C;AAAoE,IAAA,OAAO,EAAGL,KAAK,CAACE;AAApF,IADJ,EAEI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAK,CAACE,SAAvB;AAAkC,IAAA,QAAQ,EAAEG,CAAC,IAAGN,KAAK,CAACO,eAAN,CAAsBD,CAAtB;AAAhD,2BAFJ,CAJJ,CADJ;AAaH,CAxBD;;AAyBA,eAAeP,aAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport { Checkbox } from 'pretty-checkbox-react';\r\nimport './IsInSlideShow.scss';\r\n\r\n\r\nconst IsInSlideShow = props => {\r\n    const [ state, setState ] = useState({\r\n        isChecked: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            isChecked:  props.postData.inSlideShow || false\r\n        })\r\n    }, [props.postData.inSlideShow]);\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <Switch name='inSlideShow' onChange={ e =>props.onChangeHandler(e)} checked={ state.isChecked }/>\r\n                <Checkbox state={state.isChecked} onChange={e =>props.onChangeHandler(e)}>\r\n                    Yes! I want emails!\r\n                </Checkbox>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}