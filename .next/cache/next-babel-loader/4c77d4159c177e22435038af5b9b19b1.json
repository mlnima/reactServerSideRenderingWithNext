{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { models } from './models';\nimport { AppContext } from '../../../../context/AppContext';\n\nconst AddWidgetMenu = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n\n  const onAddNewWidget = e => {\n    const type = [e.target.name];\n    contextData.dispatchWidgetsSettings(widgetSettings => _objectSpread({}, widgetSettings, {\n      homeWidgets: [...contextData.widgetsSettings.homeWidgets, models[type]]\n    }));\n  };\n\n  useEffect(() => {\n    console.log(contextData.widgetsSettings);\n  }, [contextData.widgetsSettings]);\n  return __jsx(\"div\", {\n    className: \"AddWidgetMenu\"\n  }, __jsx(\"button\", {\n    name: \"video\",\n    onClick: e => onAddNewWidget(e)\n  }, \"Add Video Widget\"));\n};\n\nexport default AddWidgetMenu;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/widgetsModel/AddWidgetMenu/AddWidgetMenu.js"],"names":["React","useEffect","useState","useContext","useRef","models","AppContext","AddWidgetMenu","props","contextData","state","setState","onAddNewWidget","e","type","target","name","dispatchWidgetsSettings","widgetSettings","homeWidgets","widgetsSettings","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAMC,WAAW,GAAGN,UAAU,CAACG,UAAD,CAA9B;AACA,QAAM;AAAA,OAAEI,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMW,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAMC,IAAI,GAAG,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAb;AACAP,IAAAA,WAAW,CAACQ,uBAAZ,CAAoCC,cAAc,sBAC3CA,cAD2C;AAE9CC,MAAAA,WAAW,EAAE,CAAE,GAAGV,WAAW,CAACW,eAAZ,CAA4BD,WAAjC,EAA8Cd,MAAM,CAACS,IAAD,CAApD;AAFiC,MAAlD;AAIH,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAW,CAACW,eAAxB;AACH,GAFQ,EAEN,CAAEX,WAAW,CAACW,eAAd,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAGP,CAAC,IAAID,cAAc,CAACC,CAAD;AAAlD,wBADJ,CADJ;AAKH,CAvBD;;AAwBA,eAAeN,aAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {models} from './models'\r\nimport { AppContext } from '../../../../context/AppContext'\r\n\r\nconst AddWidgetMenu = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onAddNewWidget = (e) => {\r\n        const type = [e.target.name]\r\n        contextData.dispatchWidgetsSettings(widgetSettings => ({\r\n            ...widgetSettings,\r\n            homeWidgets: [ ...contextData.widgetsSettings.homeWidgets, models[type] ]\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(contextData.widgetsSettings)\r\n    }, [ contextData.widgetsSettings ]);\r\n\r\n    return (\r\n        <div className='AddWidgetMenu'>\r\n            <button name='video' onClick={ e => onAddNewWidget(e) }>Add Video Widget</button>\r\n        </div>\r\n    );\r\n};\r\nexport default AddWidgetMenu;\r\n"]},"metadata":{},"sourceType":"module"}