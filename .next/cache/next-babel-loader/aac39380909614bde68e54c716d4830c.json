{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../../components/layouts/AppLayout';\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables';\nimport { getMeta } from '../../../_variables/ajaxPostsVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport TagElement from '../../../components/includes/TagElement/TagElement';\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement';\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent';\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport withRouter from 'next/dist/client/with-router';\nimport SideBar from '../../../components/includes/Sidebar/Sidebar';\n\nvar tags = function tags(props) {\n  var _useState = useState({\n    style: {}\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.identity.categoriesPagesSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  var renderTags = props.tagsSource.metas.map(function (meta) {\n    return __jsx(TagElement, {\n      key: meta._id,\n      imageUrl: meta.imageUrl,\n      noImageUrl: meta.noImageUrl,\n      name: meta.name,\n      count: meta.count\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.categoriesPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getTagsData.pageNo,\n    totalCount: props.tagsSource.totalCount,\n    size: props.getTagsData.size,\n    maxPage: Math.ceil(_parseInt(props.tagsSource.totalCount) / _parseInt(props.getTagsData.size)) - 1,\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })))));\n};\n\ntags.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, tagsSource, widgets, widgetsData, identityData, navigationData, getTagsData, tagsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('tagsPageSidebar'));\n\n        case 3:\n          widgetsData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 6:\n          identityData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 9:\n          navigationData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          getTagsData = {\n            type: 'tag',\n            searchForImageIn: 'tags',\n            pageNo: _parseInt(query.page) || 1,\n            size: _parseInt(query.size) || _parseInt(identity.tagsCountPerPage) || 30,\n            sort: query.sort || 'latest'\n          };\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(getMeta(getTagsData));\n\n        case 15:\n          tagsData = _context.sent;\n          tagsSource = tagsData.data ? tagsData.data : {\n            tags: [],\n            totalCount: 0\n          };\n          widgets = widgetsData.data ? widgetsData.data : [];\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query,\n            tagsSource: tagsSource,\n            getTagsData: getTagsData,\n            pathname: pathname,\n            widgets: widgets\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(tags);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/page/tags/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getWidgetsWithData","getMeta","AppContext","TagElement","CategoryElement","PaginationComponent","SiteSettingSetter","withRouter","SideBar","tags","props","style","state","setState","identity","categoriesPagesSidebar","gridArea","renderTags","tagsSource","metas","map","meta","_id","imageUrl","noImageUrl","name","count","categoriesPageSidebar","getTagsData","pageNo","totalCount","size","Math","ceil","query","router","pathname","getInitialProps","req","res","err","widgetsData","identityData","navigationData","data","setting","navigation","type","searchForImageIn","page","tagsCountPerPage","sort","tagsData","widgets"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../../components/layouts/AppLayout'\r\nimport { getSetting, getWidgetsWithData } from '../../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../../_variables/ajaxPostsVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport TagElement from '../../../components/includes/TagElement/TagElement'\r\nimport CategoryElement from '../../../components/includes/CategoryElement/CategoryElement'\r\nimport PaginationComponent from '../../../components/includes/PaginationComponent/PaginationComponent'\r\nimport SiteSettingSetter from '../../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport SideBar from '../../../components/includes/Sidebar/Sidebar'\r\n\r\nconst tags = props => {\r\n\r\n    const [state,setState]=useState({\r\n        style:{}\r\n    })\r\n    useEffect(() => {\r\n        if (props.identity.categoriesPagesSidebar){\r\n            setState({\r\n                style: {\r\n                    gridArea:'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    const renderTags = props.tagsSource.metas.map(meta => {\r\n            return (\r\n                <TagElement key={meta._id} imageUrl={meta.imageUrl} noImageUrl={meta.noImageUrl} name={meta.name} count={meta.count}/>\r\n            )\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <AppLayout>\r\n            <SiteSettingSetter  { ...props }/>\r\n            <div style={state.style} className={ props.identity.categoriesPageSidebar ? 'content withSidebar':'content withOutSidebar'  } >\r\n                <div>\r\n                    <div className='tags'>\r\n                        {renderTags}\r\n                    </div>\r\n                    <PaginationComponent\r\n                        isActive={ true }\r\n                        currentPage={props.getTagsData.pageNo }\r\n                        totalCount={ props.tagsSource.totalCount }\r\n                        size={ props.getTagsData.size }\r\n                        maxPage={ Math.ceil(parseInt(props.tagsSource.totalCount) / parseInt(props.getTagsData.size))- 1 }\r\n                        queryData={props.query || props.router.query}\r\n                        pathnameData={props.pathname ||props.router.pathname }\r\n                    />\r\n                    {/*<SideBar isActive={props.identity.tagsPageSidebar} widgets={props.widgets} position='tagsPageSidebar'/>*/}\r\n                </div>\r\n\r\n            </div>\r\n        </AppLayout>\r\n            </>\r\n    );\r\n};\r\n\r\n\r\n\r\ntags.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let tagsSource;\r\n    let widgets;\r\n    const widgetsData = await getWidgetsWithData('tagsPageSidebar')\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n\r\n    const getTagsData = {\r\n        type: 'tag',\r\n        searchForImageIn:'tags',\r\n        pageNo: parseInt(query.page) || 1,\r\n        size: parseInt(query.size) || parseInt(identity.tagsCountPerPage) ||30,\r\n        sort: query.sort || 'latest',\r\n\r\n    }\r\n\r\n\r\n        const tagsData = await getMeta(getTagsData)\r\n        tagsSource = tagsData.data ? tagsData.data : {tags:[],totalCount:0}\r\n    widgets = widgetsData.data ? widgetsData.data : []\r\n\r\n\r\n    return { identity, navigation, query, tagsSource,getTagsData,pathname,widgets }\r\n}\r\nexport default withRouter(tags);\r\n"]},"metadata":{},"sourceType":"module"}