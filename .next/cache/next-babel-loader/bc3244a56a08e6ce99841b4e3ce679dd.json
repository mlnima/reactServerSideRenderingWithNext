{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport FileManagerControl from '../../../components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl';\nimport FileManagerArea from '../../../components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea';\nimport { readPath } from '../../../_variables/_ajaxFilesVariables';\nimport { AppContext } from '../../../context/AppContext';\nimport withRouter from 'next/dist/client/with-router';\nimport UploadedPopView from '../../../components/adminIncludes/FileManagerComponents/UploadedPopView/UploadedPopView'; ///static/uploads/image/2020/4/706185_561483320532764_1215505165_o.jpg\n\nvar fileManager = function fileManager(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    path: '.',\n    prevPath: '.',\n    files: [],\n    clickedItem: '',\n    clickedItemName: '',\n    file: '',\n    editFile: false,\n    action: '',\n    _do: '',\n    // AlertBox:false,\n    DeleteAlertBox: false,\n    confirm: Date.now(),\n    message: '',\n    report: '',\n    inputBox: false,\n    newItemName: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    // setState({\n    //     ...state,\n    //     prevPath: state.path\n    // })\n    setData();\n  }, [state.path]);\n\n  var setData = function setData() {\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    readPath(state.path).then(function (res) {\n      // console.log(res.data.type )\n      if (res.data.type === 'dir') {\n        setState(_objectSpread({}, state, {\n          files: res.data.data // prevPath: path\n\n        }));\n        contextData.dispatchState(_objectSpread({}, contextData.state, {\n          loading: false\n        }));\n      } else if (res.data.type === 'file') {\n        setState(_objectSpread({}, state, {\n          clickedItem: state.path,\n          path: state.prevPath\n        })); // contextData.dispatchSettings({\n        //     ...contextData.settings,\n        //     textEditorCurrentFile: res.data.data\n        // })\n\n        contextData.dispatchState(_objectSpread({}, contextData.state, {\n          loading: false\n        })); // props.router.push('/admin/fileManager/textEditor')\n      } else {\n        setState(_objectSpread({}, state, {\n          error: true\n        }));\n        contextData.dispatchState(_objectSpread({}, contextData.state, {\n          loading: false\n        }));\n      }\n    })[\"catch\"](function (err) {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  var setStateHandler = function setStateHandler(key, value) {\n    setState(_objectSpread({}, state, _defineProperty({}, key, value)));\n  };\n\n  return __jsx(AdminLayout, null, __jsx(UploadedPopView, {\n    clickedItem: state.clickedItem,\n    setStateHandler: setStateHandler,\n    state: state,\n    setState: setState\n  }), __jsx(\"div\", {\n    className: \"fileManager\"\n  }, __jsx(FileManagerControl, {\n    setStateHandler: setStateHandler,\n    data: state,\n    state: state,\n    setState: setState\n  }), __jsx(FileManagerArea, {\n    setStateHandler: setStateHandler,\n    data: state,\n    state: state,\n    setState: setState\n  })));\n};\n\nexport default withRouter(fileManager);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/fileManager/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","FileManagerControl","FileManagerArea","readPath","AppContext","withRouter","UploadedPopView","fileManager","props","contextData","path","prevPath","files","clickedItem","clickedItemName","file","editFile","action","_do","DeleteAlertBox","confirm","Date","now","message","report","inputBox","newItemName","state","setState","setData","dispatchState","loading","then","res","data","type","error","err","setStateHandler","key","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout'\r\nimport FileManagerControl from '../../../components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl'\r\nimport FileManagerArea from '../../../components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea';\r\nimport { readPath } from '../../../_variables/_ajaxFilesVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport UploadedPopView from '../../../components/adminIncludes/FileManagerComponents/UploadedPopView/UploadedPopView'\r\n///static/uploads/image/2020/4/706185_561483320532764_1215505165_o.jpg\r\nconst fileManager = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        path: '.',\r\n        prevPath: '.',\r\n        files: [],\r\n        clickedItem: '',\r\n        clickedItemName: '',\r\n        file: '',\r\n        editFile: false,\r\n        action: '',\r\n        _do: '',\r\n        // AlertBox:false,\r\n        DeleteAlertBox: false,\r\n        confirm: Date.now(),\r\n        message: '',\r\n        report: '',\r\n        inputBox: false,\r\n        newItemName: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        // setState({\r\n        //     ...state,\r\n        //     prevPath: state.path\r\n        // })\r\n        setData()\r\n    }, [ state.path ]);\r\n\r\n\r\n\r\n    const setData = () => {\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading: true\r\n        });\r\n        readPath(state.path).then(res => {\r\n            // console.log(res.data.type )\r\n            if (res.data.type === 'dir') {\r\n                setState({\r\n                    ...state,\r\n                    files: res.data.data,\r\n                    // prevPath: path\r\n                })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n            } else if (res.data.type === 'file') {\r\n                setState({\r\n                    ...state,\r\n                    clickedItem: state.path,\r\n                    path:state.prevPath\r\n                })\r\n                // contextData.dispatchSettings({\r\n                //     ...contextData.settings,\r\n                //     textEditorCurrentFile: res.data.data\r\n                // })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n                // props.router.push('/admin/fileManager/textEditor')\r\n            } else {\r\n                setState({\r\n                    ...state,\r\n                    error: true\r\n                })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    const setStateHandler = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <UploadedPopView clickedItem={ state.clickedItem } setStateHandler={ setStateHandler } state={ state } setState={ setState }/>\r\n            <div className='fileManager'>\r\n                <FileManagerControl setStateHandler={ setStateHandler } data={ state } state={ state } setState={ setState }/>\r\n                <FileManagerArea setStateHandler={ setStateHandler } data={ state } state={ state } setState={ setState }/>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default withRouter(fileManager);\r\n"]},"metadata":{},"sourceType":"module"}