{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport FA from \"react-fontawesome\";\n\nvar NavigationItem = function NavigationItem(props) {\n  var _useState = useState({\n    isOpen: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onOpenHandler = function onOpenHandler() {\n    state.isOpen ? setState(_objectSpread({}, state, {\n      isOpen: false\n    })) : setState(_objectSpread({}, state, {\n      isOpen: true\n    }));\n  };\n\n  if (!state.isOpen) {\n    return __jsx(\"div\", {\n      className: \"items-preview-item\"\n    }, __jsx(\"div\", {\n      className: \"item-title\"\n    }, __jsx(\"p\", null, props.title), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onOpenHandler();\n      }\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: 'bars'\n    }))));\n  } else return __jsx(\"div\", {\n    className: \"items-preview-item\"\n  }, __jsx(\"div\", {\n    className: \"item-title\"\n  }, __jsx(\"p\", null, props.title), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onOpenHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: 'bars'\n  }))), __jsx(\"div\", {\n    className: \"editItem\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: props.title\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"url\",\n    value: props.url\n  }), __jsx(\"button\", {\n    name: props.title,\n    onClick: function onClick(e) {\n      return props.onDeleteItemHandler(e);\n    }\n  }, \"Del\")));\n};\n\nexport default NavigationItem;","map":null,"metadata":{},"sourceType":"module"}