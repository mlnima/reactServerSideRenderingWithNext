{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\n\nconst queryGeneratorForUnCacheRequest = requestItems => {\n  let query = '?';\n\n  for (const item in requestItems) {\n    query += `${item}=${requestItems[item]}`;\n  }\n\n  return query;\n};\n\nexport const getPosts = async data => {\n  const body = _objectSpread({}, data);\n\n  return await axios.post(`http://localhost:3000/api/v1/posts${queryGeneratorForUnCacheRequest(data)}`, body);\n};\nexport const getPost = async data => {\n  const body = _objectSpread({}, data);\n\n  return await axios.post('http://localhost:3000/api/v1/posts/post', body);\n};\nexport const getMeta = async data => {\n  const body = _objectSpread({}, data);\n\n  return await axios.post(`http://localhost:3000/api/v1/posts/getMeta?pageNo=${data.pageNo}&type=${data.type}`, body);\n};\nexport const newComment = async data => {\n  const body = _objectSpread({}, data);\n\n  return await axios.post(`http://localhost:3000/api/v1/posts/newComment`, body);\n};\nexport const likeDislikeView = async (id, type) => {\n  const body = {\n    id,\n    type\n  };\n  return await axios.post('http://localhost:3000/api/v1/posts/likeDislikeView', body);\n};","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/_variables/ajaxPostsVariables.js"],"names":["axios","queryGeneratorForUnCacheRequest","requestItems","query","item","getPosts","data","body","post","getPost","getMeta","pageNo","type","newComment","likeDislikeView","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,+BAA+B,GAAIC,YAAD,IAAgB;AACpD,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAI,MAAMC,IAAV,IAAkBF,YAAlB,EAA+B;AAC3BC,IAAAA,KAAK,IAAK,GAAEC,IAAK,IAAGF,YAAY,CAACE,IAAD,CAAO,EAAvC;AACH;;AACD,SAAOD,KAAP;AACH,CAND;;AAQA,OAAO,MAAME,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AACpC,QAAMC,IAAI,qBACHD,IADG,CAAV;;AAGA,SAAO,MAAMN,KAAK,CAACQ,IAAN,CAAY,qCAAoCP,+BAA+B,CAACK,IAAD,CAAO,EAAtF,EAAyFC,IAAzF,CAAb;AACH,CALM;AAOP,OAAO,MAAME,OAAO,GAAG,MAAOH,IAAP,IAAgB;AACnC,QAAMC,IAAI,qBACHD,IADG,CAAV;;AAGA,SAAO,MAAMN,KAAK,CAACQ,IAAN,CAAW,yCAAX,EAAsDD,IAAtD,CAAb;AACH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAOJ,IAAP,IAAgB;AACnC,QAAMC,IAAI,qBACHD,IADG,CAAV;;AAGA,SAAO,MAAMN,KAAK,CAACQ,IAAN,CAAY,qDAAoDF,IAAI,CAACK,MAAO,SAAQL,IAAI,CAACM,IAAK,EAA9F,EAAiGL,IAAjG,CAAb;AACH,CALM;AAMP,OAAO,MAAMM,UAAU,GAAG,MAAOP,IAAP,IAAgB;AACtC,QAAMC,IAAI,qBACHD,IADG,CAAV;;AAGA,SAAO,MAAMN,KAAK,CAACQ,IAAN,CAAY,+CAAZ,EAA4DD,IAA5D,CAAb;AACH,CALM;AAOP,OAAO,MAAMO,eAAe,GAAG,OAAOC,EAAP,EAAUH,IAAV,KAAmB;AAC9C,QAAML,IAAI,GAAG;AACTQ,IAAAA,EADS;AAETH,IAAAA;AAFS,GAAb;AAIA,SAAO,MAAMZ,KAAK,CAACQ,IAAN,CAAW,oDAAX,EAAiED,IAAjE,CAAb;AACH,CANM","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst queryGeneratorForUnCacheRequest = (requestItems)=>{\r\n    let query = '?'\r\n    for(const item in requestItems){\r\n        query += `${item}=${requestItems[item]}`\r\n    }\r\n    return query\r\n}\r\n\r\nexport const getPosts = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(`http://localhost:3000/api/v1/posts${queryGeneratorForUnCacheRequest(data)}`, body)\r\n};\r\n\r\nexport const getPost = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post('http://localhost:3000/api/v1/posts/post', body)\r\n};\r\n\r\nexport const getMeta = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(`http://localhost:3000/api/v1/posts/getMeta?pageNo=${data.pageNo}&type=${data.type}`, body)\r\n};\r\nexport const newComment = async (data) => {\r\n    const body = {\r\n        ...data,\r\n    };\r\n    return await axios.post(`http://localhost:3000/api/v1/posts/newComment`, body)\r\n};\r\n\r\nexport const likeDislikeView = async (id,type) => {\r\n    const body = {\r\n        id,\r\n        type\r\n    };\r\n    return await axios.post('http://localhost:3000/api/v1/posts/likeDislikeView', body)\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}