{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { newComment } from '../../../../_variables/ajaxPostsVariables';\n\nvar CommentFrom = function CommentFrom(props) {\n  var _useState = useState({\n    body: '',\n    author: '',\n    email: '',\n    onDocument: props.documentId\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    if (state.onDocument) {\n      newComment(state).then(function (res) {\n        console.log(res);\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  };\n\n  return __jsx(\"form\", {\n    className: \"comment-form\",\n    onSubmit: function onSubmit() {\n      return onSubmitHandler();\n    }\n  }, __jsx(\"div\", {\n    className: \"comment-form-input\"\n  }, __jsx(\"textarea\", {\n    required: true,\n    placeholder: \"Comment\",\n    name: \"body\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"comment-form-info\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Name\",\n    name: \"author\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    required: true,\n    placeholder: \"Email\",\n    name: \"email\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"button\", {\n    className: \"comment-form-submit-button\",\n    type: \"submit\"\n  }, \"Post Comment\"));\n};\n\nexport default CommentFrom;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/CommentFrom/CommentFrom.js"],"names":["React","useEffect","useState","useContext","useRef","newComment","CommentFrom","props","body","author","email","onDocument","documentId","state","setState","console","log","onChangeHandler","e","target","name","value","onSubmitHandler","then","res","err"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAAQC,UAAR,QAAyB,2CAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,kBACGL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAC,EAD4B;AAEjCC,IAAAA,MAAM,EAAC,EAF0B;AAGjCC,IAAAA,KAAK,EAAC,EAH2B;AAIjCC,IAAAA,UAAU,EAAEJ,KAAK,CAACK;AAJe,GAAD,CADX;AAAA,MACjBC,KADiB;AAAA,MACVC,QADU;;AAOzBb,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAaT,KAAb;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAG;AACxBJ,IAAAA,QAAQ,mBACDD,KADC,sBAEHK,CAAC,CAACC,MAAF,CAASC,IAFN,EAEYF,CAAC,CAACC,MAAF,CAASE,KAFrB,GAAR;AAIH,GALD;;AAOA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAI;AACxB,QAAIT,KAAK,CAACF,UAAV,EAAqB;AACjBN,MAAAA,UAAU,CAACQ,KAAD,CAAV,CAAkBU,IAAlB,CAAuB,UAAAC,GAAG,EAAE;AACxBT,QAAAA,OAAO,CAACC,GAAR,CAAaQ,GAAb;AACH,OAFD,WAES,UAAAC,GAAG,EAAE;AACVV,QAAAA,OAAO,CAACC,GAAR,CAAaS,GAAb;AACH,OAJD;AAKH;AACJ,GARD;;AAWA,SACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAE;AAAA,aAAIH,eAAe,EAAnB;AAAA;AAAzC,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAU,IAAA,QAAQ,EAAE,IAApB;AAA0B,IAAA,WAAW,EAAC,SAAtC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,QAAQ,EAAE,kBAAAJ,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAvE,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,QAAQ,EAAE,IAAjB;AAAuB,IAAA,WAAW,EAAC,MAAnC;AAA0C,IAAA,IAAI,EAAC,QAA/C;AAAwD,IAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAnE,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE,IAA9B;AAAoC,IAAA,WAAW,EAAC,OAAhD;AAAwD,IAAA,IAAI,EAAC,OAA7D;AAAqE,IAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAhF,IAFJ,CAJJ,EASI;AAAS,IAAA,SAAS,EAAC,4BAAnB;AAAgD,IAAA,IAAI,EAAC;AAArD,oBATJ,CADJ;AAaH,CA1CD;;AA2CA,eAAeZ,WAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {newComment} from '../../../../_variables/ajaxPostsVariables'\r\n\r\nconst CommentFrom = props => {\r\n    const [ state, setState ] = useState({\r\n        body:'',\r\n        author:'',\r\n        email:'',\r\n        onDocument: props.documentId\r\n    });\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, [props]);\r\n\r\n    const onChangeHandler = e =>{\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = ()=>{\r\n        if (state.onDocument){\r\n            newComment(state).then(res=>{\r\n                console.log( res)\r\n            }).catch(err=>{\r\n                console.log( err)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='comment-form' onSubmit={()=>onSubmitHandler()}>\r\n            <div className='comment-form-input'>\r\n                <textarea required={true} placeholder='Comment' name='body' onChange={e=>onChangeHandler(e)}/>\r\n            </div>\r\n            <div className='comment-form-info'>\r\n                <input required={true} placeholder='Name' name='author' onChange={e=>onChangeHandler(e)}/>\r\n                <input type='email' required={true} placeholder='Email' name='email' onChange={e=>onChangeHandler(e)}/>\r\n            </div>\r\n\r\n            <button  className='comment-form-submit-button' type='submit'>Post Comment</button>\r\n        </form>\r\n    );\r\n};\r\nexport default CommentFrom;\r\n"]},"metadata":{},"sourceType":"module"}