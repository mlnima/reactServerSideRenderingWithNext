{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../components/layouts/AppLayout';\nimport { getSetting } from '../../_variables/ajaxVariables';\nimport { getMeta } from '../../_variables/ajaxPostsVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\n\nvar posts = function posts(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n  return __jsx(AppLayout, null, __jsx(\"div\", {\n    className: \"posts\"\n  }, __jsx(SiteSettingSetter, props), \"posts\"));\n};\n\nposts.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, identityData, navigationData, categoriesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 6:\n          navigationData = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getMeta({\n            type: 'category',\n            pageNo: 1,\n            size: 100,\n            searchForImageIn: 'categories'\n          }));\n\n        case 9:\n          categoriesData = _context.sent;\n          categories = categoriesData.data.metas ? categoriesData.data.metas : [];\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            query: query\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default posts;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/posts/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getMeta","SiteSettingSetter","posts","props","state","setState","getInitialProps","pathname","query","req","res","err","identityData","navigationData","type","pageNo","size","searchForImageIn","categoriesData","categories","data","metas","identity","setting","navigation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,OAAOC,iBAAP,MAA8B,iEAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACSR,QAAQ,CAAC,EAAD,CADjB;AAAA,MACXS,KADW;AAAA,MACJC,QADI;;AAEnBX,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;AAEA,SACI,MAAC,SAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,iBAAD,EAAyBS,KAAzB,CADJ,UADJ,CADJ;AAQH,CAZD;;AAeAD,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAAA;AAAA,2CAGOZ,UAAU,CAAC,UAAD,CAHjB;;AAAA;AAGda,UAAAA,YAHc;AAAA;AAAA,2CAISb,UAAU,CAAC,YAAD,CAJnB;;AAAA;AAIdc,UAAAA,cAJc;AAAA;AAAA,2CAKSb,OAAO,CAAC;AACjCc,YAAAA,IAAI,EAAE,UAD2B;AAEjCC,YAAAA,MAAM,EAAE,CAFyB;AAGjCC,YAAAA,IAAI,EAAE,GAH2B;AAIjCC,YAAAA,gBAAgB,EAAE;AAJe,WAAD,CALhB;;AAAA;AAKdC,UAAAA,cALc;AAWpBC,UAAAA,UAAU,GAAGD,cAAc,CAACE,IAAf,CAAoBC,KAApB,GAA4BH,cAAc,CAACE,IAAf,CAAoBC,KAAhD,GAAwD,EAArE;AACAC,UAAAA,QAAQ,GAAGV,YAAY,CAACQ,IAAb,CAAkBG,OAAlB,GAA4BX,YAAY,CAACQ,IAAb,CAAkBG,OAAlB,CAA0BH,IAAtD,GAA6D,EAAxE;AACAI,UAAAA,UAAU,GAAGX,cAAc,CAACO,IAAf,CAAoBG,OAApB,GAA8BV,cAAc,CAACO,IAAf,CAAoBG,OAAlD,GAA4D,EAAzE;AAboB,2CAcb;AAAED,YAAAA,QAAQ,EAARA,QAAF;AAAYE,YAAAA,UAAU,EAAVA,UAAZ;AAAwBhB,YAAAA,KAAK,EAALA;AAAxB,WAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../_variables/ajaxVariables'\r\nimport { getMeta } from '../../_variables/ajaxPostsVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\n\r\nconst posts = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n    }, []);\r\n    return (\r\n        <AppLayout>\r\n            <div className='posts'>\r\n                <SiteSettingSetter  { ...props }/>\r\n                posts\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\nposts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const categoriesData = await getMeta({\r\n        type: 'category',\r\n        pageNo: 1,\r\n        size: 100,\r\n        searchForImageIn: 'categories',\r\n    })\r\n    categories = categoriesData.data.metas ? categoriesData.data.metas : []\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    return { identity, navigation, query }\r\n}\r\n\r\nexport default posts;\r\n"]},"metadata":{},"sourceType":"module"}