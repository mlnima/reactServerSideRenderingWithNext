{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text';\n\nvar Home = function Home(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    title: props.identity.title || '',\n    themeColor: props.identity.themeColor || '',\n    description: props.identity.description || '',\n    keywords: props.identity.keywords || [],\n    homePageH1: props.identity.homePageH1 || 'H1 element'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (props.navigation) {\n      contextData.dispatchNavigationData(props.navigation.data);\n    }\n\n    if (props.identity) {\n      contextData.dispatchSiteIdentity(function (siteIdentity) {\n        return _objectSpread({}, siteIdentity, {}, props.identity);\n      });\n    }\n  }, [props]);\n  var renderWidgets = props.widgets.map(function (widget) {\n    switch (widget.type) {\n      case 'posts':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          component: Posts,\n          posts: widget.posts,\n          title: widget.title,\n          mainLinkUrl: widget.redirectLink,\n          redirectToTitle: \"More Posts\",\n          pagination: true\n        });\n        break;\n\n      case 'text':\n        return __jsx(Widget, {\n          key: widget._id,\n          propsKey: widget._id,\n          text: widget.text,\n          textAlign: widget.textAlign,\n          title: widget.title,\n          mainLinkUrl: \"/posts/\",\n          redirectToTitle: \"More videos\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, state.title), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: state.themeColor\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"link\", {\n    href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: state.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: state.keywords\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(\"h1\", null, state.homePageH1), renderWidgets));\n};\n\nHome.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, navigation, identity, widgets, data, identityData, navigationData, widgetsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          data = {\n            pageNo: query.pageNo ? _parseInt(query.pageNo) : 1,\n            size: 30,\n            totalPosts: 0,\n            postType: 'all',\n            keyword: '',\n            status: 'published',\n            author: 'all',\n            fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n            checkedPosts: []\n          };\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 5:\n          identityData = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(getSetting('navigation'));\n\n        case 8:\n          navigationData = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getWidgetsWithData('all'));\n\n        case 11:\n          widgetsData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          navigation = navigationData.data.setting ? navigationData.data.setting : {};\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](2);\n          console.error(_context.t0);\n\n        case 20:\n          return _context.abrupt(\"return\", {\n            identity: identity,\n            navigation: navigation,\n            widgets: widgets\n          });\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 17]]);\n};\n\nexport default withRouter(Home);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/index.js"],"names":["React","useEffect","useState","useContext","AppContext","AppLayout","Widget","Posts","withRouter","getPosts","Head","axios","getSetting","getWidgets","getWidgetsWithData","Text","Home","props","contextData","title","identity","themeColor","description","keywords","homePageH1","state","setState","navigation","dispatchNavigationData","data","dispatchSiteIdentity","siteIdentity","renderWidgets","widgets","map","widget","type","_id","text","textAlign","posts","redirectLink","getInitialProps","pathname","query","req","res","err","pageNo","size","totalPosts","postType","keyword","status","author","fields","checkedPosts","identityData","navigationData","widgetsData","setting","console","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport AppLayout from \"../components/layouts/AppLayout\";\r\nimport Widget from \"../components/includes/Widget/Widget\";\r\nimport Posts from \"../components/includes/Posts/Posts\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\r\nimport Head from \"next/head\";\r\nimport axios from \"axios\";\r\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\r\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text'\r\n\r\nconst Home = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        title: props.identity.title || '',\r\n        themeColor: props.identity.themeColor || '',\r\n        description: props.identity.description || '',\r\n        keywords: props.identity.keywords || [],\r\n        homePageH1: props.identity.homePageH1 || 'H1 element'\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.navigation) {\r\n            contextData.dispatchNavigationData(props.navigation.data)\r\n        }\r\n        if (props.identity) {\r\n            contextData.dispatchSiteIdentity(siteIdentity => ({\r\n                ...siteIdentity,\r\n                ...props.identity\r\n            }))\r\n        }\r\n    }, [ props ]);\r\n\r\n    const renderWidgets = props.widgets.map(widget => {\r\n        switch ( widget.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } component={ Posts } posts={ widget.posts } title={ widget.title } mainLinkUrl={ widget.redirectLink }\r\n                            redirectToTitle='More Posts' pagination={ true }/>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } title={ widget.title } mainLinkUrl='/posts/' redirectToTitle='More videos'/>\r\n                )\r\n                break\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n    })\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>{ state.title }</title>\r\n                <meta name=\"theme-color\" content={ state.themeColor }/>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n                <meta charSet=\"utf-8\"/>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n                <meta name=\"description\" content={ state.description }/>\r\n                <meta name=\"keywords\" content={ state.keywords }/>\r\n                <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n            </Head>\r\n            <div className='HomePage'>\r\n                <h1>{ state.homePageH1 }</h1>\r\n                { renderWidgets }\r\n                {/*<Widget component={ Posts } posts={ props.posts } title='latest video' mainLinkUrl='/posts/' redirectToTitle='More videos' pagination={ true } contextData={ contextData }/>*/ }\r\n                {/*<Posts posts={props.posts} />*/ }\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    // let posts;\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n    let data = {\r\n        pageNo: query.pageNo ? parseInt(query.pageNo) : 1,\r\n        size: 30,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'published',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    };\r\n\r\n    try {\r\n\r\n        const identityData = await getSetting('identity');\r\n        const navigationData = await getSetting('navigation');\r\n        const widgetsData = await getWidgetsWithData('all')\r\n\r\n        identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n        navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n        widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    } catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { identity, navigation, widgets }\r\n};\r\nexport default withRouter(Home);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}