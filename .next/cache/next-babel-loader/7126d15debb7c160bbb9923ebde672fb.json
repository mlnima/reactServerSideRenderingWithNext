{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport FA from \"react-fontawesome\";\n\nvar NavigationItem = function NavigationItem(props) {\n  var _useState = useState({\n    isOpen: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onOpenHandler = function onOpenHandler() {\n    state.isOpen ? setState(_objectSpread({}, state, {\n      isOpen: false\n    })) : setState(_objectSpread({}, state, {\n      isOpen: true\n    }));\n  };\n\n  if (!state.isOpen) {\n    return __jsx(\"div\", {\n      className: \"items-preview-item\"\n    }, __jsx(\"div\", {\n      className: \"item-title\"\n    }, __jsx(\"p\", null, props.title), __jsx(\"button\", {\n      onClick: function onClick() {\n        return onOpenHandler();\n      }\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: 'bars'\n    }))));\n  } else return __jsx(\"div\", {\n    className: \"items-preview-item\"\n  }, __jsx(\"div\", {\n    className: \"item-title\"\n  }, __jsx(\"p\", null, props.title), __jsx(\"button\", {\n    onClick: function onClick() {\n      return onOpenHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: 'bars'\n  }))), __jsx(\"div\", {\n    className: \"editItem\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: props.title\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"url\",\n    value: props.url\n  }), __jsx(\"button\", {\n    name: props.title,\n    onClick: function onClick(e) {\n      return props.onDeleteItemHandler(e);\n    }\n  }, \"Del\")));\n};\n\nexport default NavigationItem;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Header/Navigation/NavigationItem/NavigationItem.js"],"names":["React","useEffect","useState","useContext","FA","NavigationItem","props","isOpen","state","setState","onOpenHandler","title","url","e","onDeleteItemHandler"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,kBACAJ,QAAQ,CAAC;AACjCK,IAAAA,MAAM,EAAE;AADyB,GAAD,CADR;AAAA,MACpBC,KADoB;AAAA,MACbC,QADa;;AAI5BR,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBF,IAAAA,KAAK,CAACD,MAAN,GACIE,QAAQ,mBACDD,KADC;AAEJD,MAAAA,MAAM,EAAE;AAFJ,OADZ,GAKIE,QAAQ,mBACDD,KADC;AAEJD,MAAAA,MAAM,EAAE;AAFJ,OALZ;AASH,GAVD;;AAYA,MAAI,CAACC,KAAK,CAACD,MAAX,EAAkB;AACd,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,iBAAKD,KAAK,CAACK,KAAX,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAG;AAAA,eAAMD,aAAa,EAAnB;AAAA;AAAlB,OAA0C,MAAC,EAAD;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAkC,MAAA,IAAI,EAAG;AAAzC,MAA1C,CAFJ,CADJ,CADJ;AAQH,GATD,MASM,OACF;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iBAAKJ,KAAK,CAACK,KAAX,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAMD,aAAa,EAAnB;AAAA;AAAlB,KAA0C,MAAC,EAAD;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAkC,IAAA,IAAI,EAAG;AAAzC,IAA1C,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEJ,KAAK,CAACK;AAA7C,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAEL,KAAK,CAACM;AAA3C,IAFJ,EAGI;AAAQ,IAAA,IAAI,EAAGN,KAAK,CAACK,KAArB;AAA6B,IAAA,OAAO,EAAG,iBAACE,CAAD;AAAA,aAAOP,KAAK,CAACQ,mBAAN,CAA0BD,CAA1B,CAAP;AAAA;AAAvC,WAHJ,CALJ,CADE;AAgBT,CA5CD;;AA6CA,eAAeR,cAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport FA from \"react-fontawesome\";\r\n\r\nconst NavigationItem = props => {\r\n    const [ state, setState ] = useState({\r\n        isOpen: false\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onOpenHandler = () => {\r\n        state.isOpen ?\r\n            setState({\r\n                ...state,\r\n                isOpen: false\r\n            }) :\r\n            setState({\r\n                ...state,\r\n                isOpen: true\r\n            })\r\n    };\r\n\r\n    if (!state.isOpen){\r\n        return (\r\n            <div className='items-preview-item'>\r\n                <div className=\"item-title\">\r\n                    <p>{ props.title }</p>\r\n                    <button onClick={ () => onOpenHandler() }><FA className='fontawesomeMedium' name={ 'bars' }/></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else return (\r\n        <div className='items-preview-item'>\r\n            <div className=\"item-title\">\r\n                <p>{ props.title }</p>\r\n                <button onClick={ () => onOpenHandler() }><FA className='fontawesomeMedium' name={ 'bars' }/></button>\r\n            </div>\r\n            <div className=\"editItem\">\r\n                <input type=\"text\" name='title' value={props.title}/>\r\n                <input type=\"text\" name='url' value={props.url}/>\r\n                <button name={ props.title } onClick={ (e) => props.onDeleteItemHandler(e) }>Del</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n};\r\nexport default NavigationItem;"]},"metadata":{},"sourceType":"module"}