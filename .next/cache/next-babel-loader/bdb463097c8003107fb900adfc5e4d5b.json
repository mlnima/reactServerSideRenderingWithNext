{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport withRouter from \"next/dist/client/with-router\";\nimport axios from 'axios';\nimport { getAbsolutePath } from '../../_variables/_variables';\nimport { getMultipleSetting, getMultipleWidgetWithData } from '../../_variables/ajaxVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport dataDecoder from '../../server/tools/dataDecoder';\n\nvar Register = function Register(props) {\n  var messageLabel = useRef(null);\n\n  var _useState = useState({\n    username: undefined,\n    email: undefined,\n    password: undefined,\n    password2: undefined\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({\n    response: undefined,\n    type: undefined\n  }),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    axios.post('/api/v1/users/register', state).then(function (res) {\n      if (type === 'success') {\n        messageLabel.current.style.backgroundColor = 'green';\n      } else {\n        messageLabel.current.style.backgroundColor = 'red';\n      }\n\n      setData(_objectSpread({}, data, {\n        response: res.data.response,\n        type: res.data.type\n      }));\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  return __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: \"Register authPage\"\n  }, __jsx(\"form\", {\n    className: \"authForm\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"username\"), __jsx(\"input\", {\n    name: \"username\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"email\"), __jsx(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"password\"), __jsx(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"authFormItem\"\n  }, __jsx(\"p\", null, \"repeat password\"), __jsx(\"input\", {\n    name: \"password2\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"submitBtn\"\n  }, \"Register\"))));\n};\n\nRegister.getInitialProps = function _callee(_ref) {\n  var req, domainName, settings, settingsData, widgets, widgetsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getMultipleSetting({\n            settings: ['identity', 'navigation', 'design']\n          }, true, domainName));\n\n        case 11:\n          settingsData = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(getMultipleWidgetWithData({\n            widgets: ['header']\n          }, true, domainName));\n\n        case 14:\n          widgetsData = _context.sent;\n          widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n          settings = settingsData.data.settings ? dataDecoder(settingsData.data.settings).finalObject : [];\n          return _context.abrupt(\"return\", _objectSpread({}, settings, {\n            widgets: widgets\n          }));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Register);","map":null,"metadata":{},"sourceType":"module"}