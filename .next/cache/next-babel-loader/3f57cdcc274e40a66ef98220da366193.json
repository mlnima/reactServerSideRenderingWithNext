{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport './FilterPagination.scss';\nimport FA from 'react-fontawesome';\n\nconst FilterPagination = props => {\n  const contextData = useContext(AppContext);\n  let currentPageInput = useRef(null);\n  let size = useRef(null); // const [ state, setState ] = useState({\n  //     totalPosts: 0,\n  //     perPage: 0,\n  //     totalPage: 0,\n  //     currentPage: 1\n  // });\n  // useEffect(()=>{\n  //     currentPageInput.current.value = contextData.postsData.pageNo\n  //     size.current.value = contextData.postsData.size\n  // },[contextData.postsData.pageNo]);\n\n  let nextPage = () => {\n    const nextPage = contextData.adminPostsData.pageNo + 1;\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: nextPage\n    }));\n  };\n\n  let previousPage = () => {\n    if (contextData.adminPostsData.pageNo - 1 <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: contextData.adminPostsData.pageNo - 1\n      }));\n    }\n  };\n\n  let lastPage = () => {\n    const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size);\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: lastPage\n    }));\n  };\n\n  let firstPage = () => {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      pageNo: 1\n    }));\n  };\n\n  let changePageNoManually = () => {\n    if (currentPageInput.current.value <= 0) {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: 1\n      }));\n      currentPageInput.current.value = 1;\n    } else {\n      contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n        pageNo: currentPageInput.current.value\n      }));\n    }\n  };\n\n  let changeSizeHandler = () => {\n    contextData.dispatchAdminPostsData(_objectSpread({}, contextData.adminPostsData, {\n      size: parseInt(size.current.value)\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"FilterPagination\"\n  }, __jsx(\"div\", {\n    className: \"pagesNavigation\"\n  }, __jsx(\"button\", {\n    onClick: () => firstPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-left\"\n  })), __jsx(\"button\", {\n    onClick: () => previousPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-left\"\n  })), __jsx(\"input\", {\n    className: \"pageNumberInput\",\n    ref: currentPageInput,\n    type: \"number\",\n    min: 0\n  }), __jsx(\"button\", {\n    onClick: () => nextPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-right\"\n  })), __jsx(\"button\", {\n    onClick: () => lastPage(),\n    className: \"actionBtn\"\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"angle-double-right\"\n  }))), __jsx(\"div\", {\n    className: \"pagesNavigationMoreAction\"\n  }, __jsx(\"label\", {\n    className: \"totalPosts\"\n  }, contextData.adminPostsData.totalPosts, \" items\"), __jsx(\"label\", null, \"of \", Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size))));\n};\n\nFilterPagination.getInitialProps = ctx => {\n  return {\n    ctx\n  };\n};\n\nexport default FilterPagination;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterPagination.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","FA","FilterPagination","props","contextData","currentPageInput","size","nextPage","adminPostsData","pageNo","dispatchAdminPostsData","previousPage","lastPage","Math","floor","totalPosts","firstPage","changePageNoManually","current","value","changeSizeHandler","parseInt","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport './FilterPagination.scss'\r\nimport FA from 'react-fontawesome';\r\n\r\nconst FilterPagination = props => {\r\n    const contextData = useContext(AppContext);\r\n    let currentPageInput = useRef(null);\r\n    let size = useRef(null);\r\n    // const [ state, setState ] = useState({\r\n    //     totalPosts: 0,\r\n    //     perPage: 0,\r\n    //     totalPage: 0,\r\n    //     currentPage: 1\r\n    // });\r\n    // useEffect(()=>{\r\n    //     currentPageInput.current.value = contextData.postsData.pageNo\r\n    //     size.current.value = contextData.postsData.size\r\n    // },[contextData.postsData.pageNo]);\r\n\r\n    let nextPage = () => {\r\n        const nextPage = contextData.adminPostsData.pageNo + 1;\r\n\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: nextPage\r\n        })\r\n    };\r\n\r\n    let previousPage = () => {\r\n        if ((contextData.adminPostsData.pageNo - 1) <= 0) {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: 1\r\n            })\r\n        } else {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: contextData.adminPostsData.pageNo - 1\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    let lastPage = () => {\r\n        const lastPage = Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size)\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: lastPage\r\n        })\r\n    };\r\n\r\n    let firstPage = () => {\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            pageNo: 1\r\n        })\r\n    };\r\n\r\n    let changePageNoManually = () => {\r\n        if (currentPageInput.current.value <= 0) {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: 1\r\n            });\r\n            currentPageInput.current.value = 1\r\n        } else {\r\n            contextData.dispatchAdminPostsData({\r\n                ...contextData.adminPostsData,\r\n                pageNo: currentPageInput.current.value\r\n            })\r\n        }\r\n    };\r\n\r\n    let changeSizeHandler = () => {\r\n        contextData.dispatchAdminPostsData({\r\n            ...contextData.adminPostsData,\r\n            size: parseInt(size.current.value)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='FilterPagination'>\r\n            <div className='pagesNavigation'>\r\n                <button onClick={ () => firstPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-left\"/></button>\r\n                <button onClick={ () => previousPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-left\"/></button>\r\n                <input className='pageNumberInput' ref={ currentPageInput } type='number' min={ 0 }/>\r\n                <button onClick={ () => nextPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-right\"/></button>\r\n                <button onClick={ () => lastPage() } className='actionBtn'><FA className='fontawesomeMedium' name=\"angle-double-right\"/></button>\r\n            </div>\r\n            <div className='pagesNavigationMoreAction'>\r\n                <label className='totalPosts'>{ contextData.adminPostsData.totalPosts } items</label>\r\n                {/*<button onClick={ () => changePageNoManually() }>Go</button>*/}\r\n                <label>of { Math.floor(contextData.adminPostsData.totalPosts / contextData.adminPostsData.size) }</label>\r\n                {/*<select ref={ size } defaultValue={ contextData.adminPostsData.size } onChange={ () => changeSizeHandler() }>*/}\r\n                {/*    <option value={ 5 }>5</option>*/}\r\n                {/*    <option value={ 10 }>10</option>*/}\r\n                {/*    <option value={ 20 }>20</option>*/}\r\n                {/*    <option value={ 50 }>50</option>*/}\r\n                {/*    <option value={ 100 }>100</option>*/}\r\n                {/*    <option value={ 200 }>200</option>*/}\r\n                {/*    <option value={ 500 }>500</option>*/}\r\n                {/*</select>*/}\r\n            </div>\r\n\r\n            {/*<input ref={size} onChange={()=>changeSizeHandler()} />*/ }\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterPagination.getInitialProps = (ctx) => {\r\n    return { ctx }\r\n};\r\nexport default FilterPagination;"]},"metadata":{},"sourceType":"module"}