{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { updateSetting, getSetting } from \"../../../../_variables/ajaxVariables\";\nimport FA from \"react-fontawesome\";\n\nvar settings = function settings(props) {\n  var keywordsInput = useRef(null);\n\n  var _useState = useState({\n    siteAddress: props.identity.siteAddress || '',\n    protocol: props.identity.protocol || '',\n    title: props.identity.title || 'website title',\n    themeColor: props.identity.themeColor || '#000',\n    description: props.identity.description || 'website description',\n    keywords: props.identity.keywords || [],\n    logoText: props.identity.logoText || '',\n    headLine: props.identity.headLine || '',\n    homePageH1: props.identity.homePageH1 || '',\n    homePagePagination: props.identity.homePagePagination || false,\n    postsCountPerPage: props.identity.postsCountPerPage || 30,\n    homePageSidebar: props.identity.homePageSidebar || false,\n    categoriesPageSidebar: props.identity.categoriesPageSidebar || false,\n    tagsPageSidebar: props.identity.tagsPageSidebar || false,\n    actorsPageSidebar: props.identity.actorsPageSidebar || false,\n    postPageSidebar: props.identity.postPageSidebar || false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, [props]); //\n  // useEffect(()=>{\n  //  getSetting('identity').then(res=>{\n  //      if (res.data.setting){\n  //          setState({\n  //              ...state,\n  //              ...res.data.setting.data\n  //          })\n  //      }else {\n  //          setState({\n  //              ...state,\n  //              title: 'website title',\n  //              themeColor: '#000',\n  //              description: 'website description',\n  //              Keywords: ['keywords']\n  //          })\n  //      }\n  //  })\n  // },[ ]);\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    updateSetting('identity', state);\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    var finalValue = e.target.value === 'true' ? true : e.target.value === 'false' ? false : e.target.value;\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, finalValue)));\n  };\n\n  var deleteItem = function deleteItem(e) {\n    setState(_objectSpread({}, state, {\n      keywords: state.keywords.filter(function (i) {\n        return i !== e.currentTarget.name;\n      })\n    }));\n  };\n\n  var addKeyword = function addKeyword() {\n    if (keywordsInput.current.value.includes(',')) {\n      var newItems = keywordsInput.current.value.split(',');\n      setState(function (state) {\n        return _objectSpread({}, state, {\n          keywords: [].concat(_toConsumableArray(state.keywords), _toConsumableArray(newItems))\n        });\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        keywords: [].concat(_toConsumableArray(state.keywords), [keywordsInput.current.value])\n      }));\n    }\n\n    keywordsInput.current.value = '';\n  };\n\n  var keywords = state.keywords.map(function (item) {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: function onClick(e) {\n        return deleteItem(e);\n      }\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    id: \"site-settings-form\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"forms\"\n  }, __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Site Address (URL):\"), __jsx(\"input\", {\n    name: \"siteAddress\",\n    value: state.siteAddress,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Protocol:\"), __jsx(\"select\", {\n    name: \"protocol\",\n    value: state.protocol,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", null, \"Http\"), __jsx(\"option\", null, \"Https\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Logo Text:\"), __jsx(\"input\", {\n    name: \"logoText\",\n    value: state.logoText,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Head Line:\"), __jsx(\"input\", {\n    name: \"headLine\",\n    value: state.headLine,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Site Title:\"), __jsx(\"input\", {\n    name: \"title\",\n    value: state.title,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Description:\"), __jsx(\"textarea\", {\n    name: \"description\",\n    value: state.description,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Home Page H1:\"), __jsx(\"textarea\", {\n    name: \"homePageH1\",\n    value: state.homePageH1,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section keywords\"\n  }, __jsx(\"p\", null, \"Keywords:\"), __jsx(\"input\", {\n    ref: keywordsInput,\n    name: \"keywords\"\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return addKeyword();\n    }\n  }, \"add\"), __jsx(\"span\", null, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, keywords)), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Theme Color:\"), __jsx(\"input\", {\n    name: \"themeColor\",\n    value: state.themeColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Posts Per Page:\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"postsCountPerPage\",\n    value: state.postsCountPerPage,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Home Page Pagination:\"), __jsx(\"select\", {\n    name: \"homePagePagination\",\n    value: state.homePagePagination,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Home Page Sidebar:\"), __jsx(\"select\", {\n    name: \"homePageSidebar\",\n    value: state.homePageSidebar || false,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Categories Pages Sidebar:\"), __jsx(\"select\", {\n    name: \"categoriesPageSidebar\",\n    value: state.categoriesPageSidebar,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Tags Pages Sidebar:\"), __jsx(\"select\", {\n    name: \"tagsPageSidebar\",\n    value: state.tagsPageSidebar,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Actors Pages Sidebar:\"), __jsx(\"select\", {\n    name: \"actorsPageSidebar\",\n    value: state.actorsPageSidebar,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\"))), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Post Page Sidebar:\"), __jsx(\"select\", {\n    name: \"postPageSidebar\",\n    value: state.postPageSidebar,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"true\"\n  }, \"Yes\"), __jsx(\"option\", {\n    value: \"false\"\n  }, \"No\")))), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\nsettings.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, identity, identityData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('identity'));\n\n        case 3:\n          identityData = _context.sent;\n          identity = identityData.data.setting ? identityData.data.setting.data : {};\n          return _context.abrupt(\"return\", {\n            name: 'test',\n            identity: identity\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default settings;","map":null,"metadata":{},"sourceType":"module"}