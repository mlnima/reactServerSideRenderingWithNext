{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../../components/layouts/AppLayout';\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from '../../_variables/ajaxVariables';\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables';\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport withRouter from 'next/dist/client/with-router';\nimport Posts from '../../components/includes/Posts/Posts';\nimport Link from 'next/link';\nimport PaginationComponent from '../../components/includes/PaginationComponent/PaginationComponent';\nimport { Sidebar } from '../../components/includes/Sidebar/Sidebar';\nimport Footer from '../../components/includes/Footer/Footer';\nimport { getAbsolutePath } from '../../_variables/_variables';\n\nconst posts = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    style: {}\n  });\n  useEffect(() => {\n    console.log(props);\n\n    if (props.identity.data.postPageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    className: props.identity.data.postsPageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(\"div\", {\n    className: \"posts\"\n  }, __jsx(Posts, {\n    posts: props.postsSource.posts || []\n  })), __jsx(PaginationComponent, {\n    isActive: true,\n    currentPage: props.getPostsData.pageNo,\n    totalCount: props.postsSource.totalCount,\n    size: props.getPostsData.size,\n    maxPage: Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size)),\n    queryData: props.query || props.router.query,\n    pathnameData: props.pathname || props.router.pathname\n  })), __jsx(Sidebar, {\n    isActive: props.identity.data.postsPageSidebar,\n    widgets: props.widgets,\n    position: \"postsPageSidebar\"\n  })), __jsx(Footer, {\n    widgets: props.widgets,\n    position: \"footer\"\n  })));\n};\n\nposts.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  const domainName = req ? await getAbsolutePath(req) : '';\n  let postsSource;\n  let widgets;\n  let settings;\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  settings = settingsData.data.settings ? settingsData.data.settings : []; //|| settings.identity.data.postsCountPerPage\n\n  const getPostsData = {\n    size: parseInt(query.size) || parseInt(settings.identity.data.postsCountPerPage) || 30,\n    pageNo: parseInt(query.page) || 1,\n    postType: query.type || 'all',\n    fields: ['title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration'],\n    keyword: query.keyword || '',\n    author: query.author || 'all',\n    actor: query.actor || 'all',\n    status: 'published',\n    tag: query.tag || 'all',\n    category: query.category || 'all',\n    sort: query.sort || 'latest'\n  };\n  const widgetsData = await getMultipleWidgetWithData({\n    widgets: ['postsPageSidebar', 'home', 'footer']\n  }, true, domainName);\n  const postsData = await getPosts(getPostsData, true, domainName);\n  widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  postsSource = postsData.data ? postsData.data : [];\n  return _objectSpread({}, settings, {\n    query,\n    postsSource,\n    getPostsData,\n    pathname,\n    widgets\n  });\n};\n\nexport default withRouter(posts);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/posts/index.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getSetting","getWidgetsWithData","getMultipleWidgetWithData","getMultipleSetting","getMeta","getPosts","SiteSettingSetter","withRouter","Posts","Link","PaginationComponent","Sidebar","Footer","getAbsolutePath","posts","props","state","setState","style","console","log","identity","data","postPageSidebar","gridArea","postsPageSidebar","postsSource","getPostsData","pageNo","totalCount","size","Math","ceil","parseInt","query","router","pathname","widgets","getInitialProps","req","res","err","domainName","settings","settingsData","postsCountPerPage","page","postType","type","fields","keyword","author","actor","status","tag","category","sort","widgetsData","postsData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../components/layouts/AppLayout'\r\nimport { getSetting, getWidgetsWithData, getMultipleWidgetWithData, getMultipleSetting } from '../../_variables/ajaxVariables'\r\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport Posts from '../../components/includes/Posts/Posts'\r\nimport Link from 'next/link'\r\nimport PaginationComponent from '../../components/includes/PaginationComponent/PaginationComponent'\r\nimport {Sidebar} from '../../components/includes/Sidebar/Sidebar'\r\nimport Footer from '../../components/includes/Footer/Footer'\r\nimport { getAbsolutePath } from '../../_variables/_variables'\r\n\r\nconst posts = props => {\r\n    const [ state, setState ] = useState({\r\n        style: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.identity.data.postPageSidebar) {\r\n            setState({\r\n                style: {\r\n                    gridArea: 'content'\r\n                }\r\n            })\r\n        }\r\n    }, [ props ]);\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <div className={ props.identity.data.postsPageSidebar ? 'content withSidebar' : 'content withOutSidebar' }>\r\n                    <div className=\"main\">\r\n                        <div className='posts'>\r\n                            <Posts posts={ props.postsSource.posts || [] }/>\r\n\r\n                        </div>\r\n                        <PaginationComponent\r\n                            isActive={ true }\r\n                            currentPage={ props.getPostsData.pageNo }\r\n                            totalCount={ props.postsSource.totalCount }\r\n                            size={ props.getPostsData.size }\r\n                            maxPage={ Math.ceil(parseInt(props.postsSource.totalCount) / parseInt(props.getPostsData.size)) }\r\n                            queryData={ props.query || props.router.query }\r\n                            pathnameData={ props.pathname || props.router.pathname }\r\n                        />\r\n                    </div>\r\n                    <Sidebar isActive={ props.identity.data.postsPageSidebar } widgets={ props.widgets } position='postsPageSidebar'/>\r\n                </div>\r\n                <Footer widgets={ props.widgets } position='footer'/>\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nposts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    const domainName = req ? await getAbsolutePath(req) : ''\r\n    let postsSource;\r\n    let widgets;\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true,domainName)\r\n    settings = settingsData.data.settings ? settingsData.data.settings : []\r\n    //|| settings.identity.data.postsCountPerPage\r\n    const getPostsData = {\r\n        size: parseInt(query.size) || parseInt(settings.identity.data.postsCountPerPage) || 30,\r\n        pageNo: parseInt(query.page) || 1,\r\n        postType: query.type || 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        keyword: query.keyword || '',\r\n        author: query.author || 'all',\r\n        actor: query.actor || 'all',\r\n        status: 'published',\r\n        tag: query.tag || 'all',\r\n        category: query.category || 'all',\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    const widgetsData = await getMultipleWidgetWithData({ widgets: [ 'postsPageSidebar', 'home', 'footer' ] }, true,domainName)\r\n\r\n    const postsData = await getPosts(getPostsData,true,domainName)\r\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : []\r\n    postsSource = postsData.data ? postsData.data : []\r\n\r\n    return { ...settings, query, postsSource, getPostsData, pathname, widgets }\r\n}\r\n\r\nexport default withRouter(posts);\r\n"]},"metadata":{},"sourceType":"module"}