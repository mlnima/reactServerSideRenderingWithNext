{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport settings from '../settings/general';\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\n\nvar design = function design(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    topBarTextColor: props.design.topBarTextColor || '#fff',\n    headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    headerTextColor: props.design.headerTextColor || '#fff',\n    navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    navigationTextColor: props.design.navigationTextColor || '#fff',\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    footerBackgroundColor: props.design.footerBackgroundColor || '#181818'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    updateSetting('design', state).then(function () {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"Top Bar:\"), __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Top Bar Background Color :\"), __jsx(\"input\", {\n    name: \"topBarBackgroundColor\",\n    value: state.topBarBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.topBarBackgroundColor\n    }\n  })), __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Top Bar Text Color :\"), __jsx(\"input\", {\n    name: \"topBarTextColor\",\n    value: state.topBarTextColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.topBarTextColor\n    }\n  })))), __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"Header:\"), __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Background Color :\"), __jsx(\"input\", {\n    name: \"headerBackgroundColor\",\n    value: state.headerBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.headerBackgroundColor\n    }\n  })), __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Text Color :\"), __jsx(\"input\", {\n    name: \"headerTextColor\",\n    value: state.headerTextColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.headerTextColor\n    }\n  })))), __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"Navigation Menu:\"), __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Background Color :\"), __jsx(\"input\", {\n    name: \"navigationBackgroundColor\",\n    value: state.navigationBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.navigationBackgroundColor\n    }\n  })), __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Text Color :\"), __jsx(\"input\", {\n    name: \"navigationTextColor\",\n    value: state.navigationTextColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.navigationTextColor\n    }\n  })))), __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"Body Background Color:\"), __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Background Color :\"), __jsx(\"input\", {\n    name: \"bodyBackgroundColor\",\n    value: state.bodyBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.bodyBackgroundColor\n    }\n  })))), __jsx(\"div\", {\n    className: \"adminDesignSection\"\n  }, __jsx(\"h2\", null, \"footer Background Color:\"), __jsx(\"div\", {\n    className: \"adminDesignSectionItems\"\n  }, __jsx(\"div\", {\n    className: \"adminDesignSectionItem\"\n  }, __jsx(\"p\", null, \"Header Background Color :\"), __jsx(\"input\", {\n    name: \"footerBackgroundColor\",\n    value: state.footerBackgroundColor,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"div\", {\n    className: \"previewColor\",\n    style: {\n      backgroundColor: state.footerBackgroundColor\n    }\n  })))), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\ndesign.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err, design, designData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getSetting('design'));\n\n        case 3:\n          designData = _context.sent;\n          design = designData.data.setting ? designData.data.setting.data : {};\n          return _context.abrupt(\"return\", {\n            design: design\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default design;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/design/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","settings","getSetting","updateSetting","AppContext","design","props","contextData","topBarBackgroundColor","topBarTextColor","headerBackgroundColor","headerTextColor","navigationBackgroundColor","navigationTextColor","bodyBackgroundColor","footerBackgroundColor","state","setState","onChangeHandler","e","target","name","value","onSubmitHandler","preventDefault","dispatchState","loading","then","backgroundColor","getInitialProps","pathname","query","req","res","err","designData","data","setting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport settings from '../settings/general'\r\nimport { getSetting, updateSetting } from '../../../_variables/ajaxVariables'\r\nimport './design.scss'\r\nimport { AppContext } from '../../../context/AppContext'\r\n\r\nconst design = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\r\n        topBarTextColor: props.design.topBarTextColor || '#fff',\r\n        headerBackgroundColor: props.design.headerBackgroundColor || '#000',\r\n        headerTextColor: props.design.headerTextColor || '#fff',\r\n        navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\r\n        navigationTextColor: props.design.navigationTextColor || '#fff',\r\n        bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\r\n        footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading:true\r\n        })\r\n        updateSetting('design', state).then(()=>{\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading:false\r\n            })\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <form className='adminDesign' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>Top Bar:</h2>\r\n                    <div className=\"adminDesignSectionItems\">\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Top Bar Background Color :</p>\r\n                            <input name='topBarBackgroundColor' value={ state.topBarBackgroundColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.topBarBackgroundColor } }/>\r\n                        </div>\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Top Bar Text Color :</p>\r\n                            <input name='topBarTextColor' value={ state.topBarTextColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.topBarTextColor } }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>Header:</h2>\r\n                    <div className=\"adminDesignSectionItems\">\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Background Color :</p>\r\n                            <input name='headerBackgroundColor' value={ state.headerBackgroundColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.headerBackgroundColor } }/>\r\n                        </div>\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Text Color :</p>\r\n                            <input name='headerTextColor' value={ state.headerTextColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.headerTextColor } }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>Navigation Menu:</h2>\r\n                    <div className=\"adminDesignSectionItems\">\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Background Color :</p>\r\n                            <input name='navigationBackgroundColor' value={ state.navigationBackgroundColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.navigationBackgroundColor } }/>\r\n                        </div>\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Text Color :</p>\r\n                            <input name='navigationTextColor' value={ state.navigationTextColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.navigationTextColor } }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>Body Background Color:</h2>\r\n                    <div className=\"adminDesignSectionItems\">\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Background Color :</p>\r\n                            <input name='bodyBackgroundColor' value={ state.bodyBackgroundColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.bodyBackgroundColor } }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"adminDesignSection\">\r\n                    <h2>footer Background Color:</h2>\r\n                    <div className=\"adminDesignSectionItems\">\r\n                        <div className=\"adminDesignSectionItem\">\r\n                            <p>Header Background Color :</p>\r\n                            <input name='footerBackgroundColor' value={ state.footerBackgroundColor } onChange={ e => onChangeHandler(e) }/>\r\n                            <div className=\"previewColor\" style={ { backgroundColor: state.footerBackgroundColor } }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className='submitBtn' type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\ndesign.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let design;\r\n    const designData = await getSetting('design');\r\n    design = designData.data.setting ? designData.data.setting.data : {}\r\n    return { design }\r\n}\r\nexport default design;\r\n"]},"metadata":{},"sourceType":"module"}