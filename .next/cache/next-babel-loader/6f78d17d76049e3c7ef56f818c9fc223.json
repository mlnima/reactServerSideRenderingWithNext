{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport _ from 'lodash';\nimport './AdminCommentItem.scss';\n\nvar AdminCommentItem = function AdminCommentItem(props) {\n  var _useState = useState({\n    hovered: false,\n    checked: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState({}),\n      commentData = _useState2[0],\n      setCommentData = _useState2[1];\n\n  useEffect(function () {\n    setCommentData(props.data);\n  }, [props.data]);\n  useEffect(function () {\n    console.log(commentData);\n  }, [commentData]);\n\n  var updateComment = function updateComment() {};\n\n  var RenderSaveBtn = function RenderSaveBtn() {\n    if (props.data !== commentData) {\n      return __jsx(\"button\", null, \"save\");\n    } else return null;\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setCommentData(_objectSpread({}, commentData, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    key: props.data._id,\n    className: \"adminCommentsItem\",\n    onMouseOver: function onMouseOver() {\n      return setState(_objectSpread({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseOut: function onMouseOut() {\n      return setState(_objectSpread({}, state, {\n        hovered: false\n      }));\n    }\n  }, __jsx(\"div\", {\n    className: \"adminCommentsItemHead\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: state.checked,\n    onChange: function onChange() {\n      return state.checked ? setState(_objectSpread({}, state, {\n        checked: false\n      })) : setState(_objectSpread({}, state, {\n        checked: true\n      }));\n    }\n  }), __jsx(\"p\", null, props.data.author)), __jsx(\"div\", {\n    className: \"adminCommentsItemBody\"\n  }, __jsx(\"p\", null, props.data.postedDate), __jsx(\"p\", null, props.data.body), __jsx(\"div\", {\n    className: \"commentControl\"\n  }, __jsx(\"select\", {\n    name: \"status\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }, __jsx(\"option\", null, \"Approve\"), __jsx(\"option\", null, \"Delete\"), __jsx(\"option\", null, \"Spam\"), __jsx(\"option\", null, \"Pending\")))), __jsx(RenderSaveBtn, null));\n};\n\nexport default AdminCommentItem;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminCommentItem/AdminCommentItem.js"],"names":["React","useEffect","useState","useContext","useRef","_","AdminCommentItem","props","hovered","checked","state","setState","commentData","setCommentData","data","console","log","updateComment","RenderSaveBtn","onChangeHandler","e","target","name","value","_id","author","postedDate","body"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,yBAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAAA,kBACFL,QAAQ,CAAC;AACjCM,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CADN;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAAA,mBAMUT,QAAQ,CAAC,EAAD,CANlB;AAAA,MAMtBU,WANsB;AAAA,MAMTC,cANS;;AAQ9BZ,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,cAAc,CAACN,KAAK,CAACO,IAAP,CAAd;AACH,GAFQ,EAEN,CAAEP,KAAK,CAACO,IAAR,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAaJ,WAAb;AACH,GAFQ,EAEN,CAAEA,WAAF,CAFM,CAAT;;AAIA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM,CAE3B,CAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACtB,QAAIX,KAAK,CAACO,IAAN,KAAaF,WAAjB,EAA6B;AACzB,aACI,6BADJ;AAGH,KAJD,MAIM,OAAO,IAAP;AACT,GAND;;AAQA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAE;AACvBP,IAAAA,cAAc,mBACPD,WADO,sBAETQ,CAAC,CAACC,MAAF,CAASC,IAFA,EAEMF,CAAC,CAACC,MAAF,CAASE,KAFf,GAAd;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,GAAG,EAAGhB,KAAK,CAACO,IAAN,CAAWU,GAAtB;AAA4B,IAAA,SAAS,EAAC,mBAAtC;AAA0D,IAAA,WAAW,EAAG;AAAA,aAAMb,QAAQ,mBAAMD,KAAN;AAAaF,QAAAA,OAAO,EAAE;AAAtB,SAAd;AAAA,KAAxE;AAAsH,IAAA,UAAU,EAAG;AAAA,aAAMG,QAAQ,mBAAMD,KAAN;AAAaF,QAAAA,OAAO,EAAE;AAAtB,SAAd;AAAA;AAAnI,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAGE,KAAK,CAACD,OAAvC;AAAiD,IAAA,QAAQ,EAAG;AAAA,aAAMC,KAAK,CAACD,OAAN,GAAgBE,QAAQ,mBAAMD,KAAN;AAAaD,QAAAA,OAAO,EAAE;AAAtB,SAAxB,GAAyDE,QAAQ,mBAAMD,KAAN;AAAaD,QAAAA,OAAO,EAAE;AAAtB,SAAvE;AAAA;AAA5D,IADJ,EAEI,iBAAKF,KAAK,CAACO,IAAN,CAAWW,MAAhB,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,iBAAIlB,KAAK,CAACO,IAAN,CAAWY,UAAf,CADJ,EAEI,iBAAKnB,KAAK,CAACO,IAAN,CAAWa,IAAhB,CAFJ,EAGI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,kBAAAP,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAjC,KACI,gCADJ,EAEI,+BAFJ,EAGI,6BAHJ,EAII,gCAJJ,CADJ,CAHJ,CALJ,EAkBI,MAAC,aAAD,OAlBJ,CADJ;AAsBH,CAzDD;;AA0DA,eAAed,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport _ from 'lodash'\r\nimport './AdminCommentItem.scss'\r\n\r\nconst AdminCommentItem = props => {\r\n    const [ state, setState ] = useState({\r\n        hovered: false,\r\n        checked: false\r\n    });\r\n\r\n    const [ commentData, setCommentData ] = useState({})\r\n\r\n    useEffect(() => {\r\n        setCommentData(props.data)\r\n    }, [ props.data ]);\r\n\r\n    useEffect(() => {\r\n        console.log( commentData)\r\n    }, [ commentData ]);\r\n\r\n    const updateComment = () => {\r\n\r\n    }\r\n\r\n    const RenderSaveBtn = ()=>{\r\n        if (props.data!==commentData){\r\n            return(\r\n                <button>save</button>\r\n            )\r\n        }else return null\r\n    }\r\n\r\n    const onChangeHandler = e=>{\r\n        setCommentData({\r\n            ...commentData,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div key={ props.data._id } className='adminCommentsItem' onMouseOver={ () => setState({ ...state, hovered: true }) } onMouseOut={ () => setState({ ...state, hovered: false }) }>\r\n            <div className=\"adminCommentsItemHead\">\r\n                <input type='checkbox' checked={ state.checked } onChange={ () => state.checked ? setState({ ...state, checked: false }) : setState({ ...state, checked: true }) }/>\r\n                <p>{ props.data.author }</p>\r\n            </div>\r\n            <div className=\"adminCommentsItemBody\">\r\n                <p>{props.data.postedDate}</p>\r\n                <p>{ props.data.body }</p>\r\n                <div className='commentControl'>\r\n                    <select name='status' onChange={e=>onChangeHandler(e)}>\r\n                        <option>Approve</option>\r\n                        <option>Delete</option>\r\n                        <option>Spam</option>\r\n                        <option>Pending</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n            <RenderSaveBtn/>\r\n        </div>\r\n    );\r\n};\r\nexport default AdminCommentItem;\r\n"]},"metadata":{},"sourceType":"module"}