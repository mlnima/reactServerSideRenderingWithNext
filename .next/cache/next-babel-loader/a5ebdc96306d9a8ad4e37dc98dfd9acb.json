{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from \"../../../context/AppContext\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nconst SideBar = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    Dashboard: {\n      pathURL: '/admin',\n      subItems: []\n    },\n    Posts: {\n      pathURL: '/admin/posts',\n      subItems: []\n    },\n    FileManager: {\n      pathURL: '/admin/fileManager',\n      subItems: []\n    },\n    Gallery: {\n      pathURL: '/admin/gallery',\n      subItems: []\n    },\n    Comments: {\n      pathURL: '/admin/comments',\n      subItems: []\n    },\n    Contacts: {\n      pathURL: '/admin/contacts',\n      subItems: []\n    },\n    Design: {\n      pathURL: '/admin/design',\n      subItems: ['topBar']\n    },\n    Users: {\n      pathURL: '/admin/users',\n      subItems: []\n    },\n    Tools: {\n      pathURL: '/admin/tools',\n      subItems: []\n    },\n    Settings: {\n      pathURL: '/admin/settings',\n      subItems: []\n    }\n  }); // const generateFakeData = ()=>{\n  //     // const body = {\n  //     //     type: \"Video\",\n  //     //     size: 1000,\n  //     //     pageNo: 1,\n  //     //     fields: [\"author\", \"title\", \"imageUrl\", \"status\", \"actors\", \"tags\", \"categories\"],\n  //     //     status: \"All\",\n  //     //     author: \"All\",\n  //     //     keyword: \"\"\n  //     // };\n  //     axios.post('http://localhost:4200/server/posts/admin-postsForTest').then(res => {\n  //         const posts = res.data.posts;\n  //         posts.forEach( async post=>{\n  //             let data={\n  //                 title :post.title.en,\n  //                 categories : post.categories,\n  //                 comments :post.comments,\n  //                 actors :post.actors ,\n  //                 tags :post.tags ,\n  //                 author :'5e322f0f8b2a0637dc3b6a16',\n  //                 description : post.description.en,\n  //                 disLikes : 0,\n  //                 mainThumbnail:post.imageUrl,\n  //                 videoTrailerUrl :post.imagePreviewUrl,\n  //                 videoEmbedCode:post.iframe,\n  //                 likes : 0,\n  //                 duration:post.duration,\n  //                 quality : post.quality,\n  //                 status : 'published',\n  //                 postType : \"video\",\n  //                 sourceSite : \"Xhamster\",\n  //                 views : 0,\n  //                 lastModify:Date.now()\n  //             };\n  //\n  //             // let dataToSave = {\n  //             //     title:post.title.en,\n  //             //     author:'5e322f0f8b2a0637dc3b6a16',\n  //             //     categories:post.categories,\n  //             //     actors:post.actors,\n  //             //     tags:post.tags,\n  //             //     mainThumbnail:post.imageUrl,\n  //             //     status:post.status,\n  //             //     type:post.type\n  //             // };\n  //             await contextData.functions.savePosts(data)\n  //             // console.log(post. )\n  //         })\n  //\n  //     })\n  // };\n  // const renderItems = state.map(item=>{\n  //     console.log(item )\n  //     return (\n  //         <div key={item} >\n  //\n  //         </div>\n  //     )\n  // })\n\n  const renderItems = Object.keys(state).map(item => {\n    console.log(item);\n    const onHoverHandler = state[item].subItems.map(subItem => {});\n    return __jsx(\"div\", {\n      key: item,\n      className: \"SideBarItemElement\"\n    }, __jsx(Link, {\n      href: state[item].pathURL\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, item)));\n  });\n\n  if (contextData.settings.adminPanelSideBar) {\n    return __jsx(\"div\", {\n      className: \"SideBar\"\n    }, renderItems);\n  } else return null;\n};\n\nexport default SideBar;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/SideBar/SideBar.js"],"names":["React","useContext","useState","AppContext","Link","axios","SideBar","props","contextData","state","setState","Dashboard","pathURL","subItems","Posts","FileManager","Gallery","Comments","Contacts","Design","Users","Tools","Settings","renderItems","Object","keys","map","item","console","log","onHoverHandler","subItem","settings","adminPanelSideBar"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAMC,WAAW,GAAGP,UAAU,CAACE,UAAD,CAA9B;AAEA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAOC;AAAP,MAAmBR,QAAQ,CAAC;AAC9BS,IAAAA,SAAS,EAAC;AACNC,MAAAA,OAAO,EAAC,QADF;AAENC,MAAAA,QAAQ,EAAC;AAFH,KADoB;AAK9BC,IAAAA,KAAK,EAAC;AACFF,MAAAA,OAAO,EAAC,cADN;AAEFC,MAAAA,QAAQ,EAAC;AAFP,KALwB;AAS9BE,IAAAA,WAAW,EAAE;AACTH,MAAAA,OAAO,EAAC,oBADC;AAETC,MAAAA,QAAQ,EAAC;AAFA,KATiB;AAa9BG,IAAAA,OAAO,EAAC;AACJJ,MAAAA,OAAO,EAAC,gBADJ;AAEJC,MAAAA,QAAQ,EAAC;AAFL,KAbsB;AAiB9BI,IAAAA,QAAQ,EAAC;AACLL,MAAAA,OAAO,EAAC,iBADH;AAELC,MAAAA,QAAQ,EAAC;AAFJ,KAjBqB;AAqB9BK,IAAAA,QAAQ,EAAC;AACLN,MAAAA,OAAO,EAAC,iBADH;AAELC,MAAAA,QAAQ,EAAC;AAFJ,KArBqB;AAyB9BM,IAAAA,MAAM,EAAC;AACHP,MAAAA,OAAO,EAAC,eADL;AAEHC,MAAAA,QAAQ,EAAC,CAAC,QAAD;AAFN,KAzBuB;AA6B9BO,IAAAA,KAAK,EAAC;AACFR,MAAAA,OAAO,EAAC,cADN;AAEFC,MAAAA,QAAQ,EAAC;AAFP,KA7BwB;AAiC9BQ,IAAAA,KAAK,EAAC;AACFT,MAAAA,OAAO,EAAC,cADN;AAEFC,MAAAA,QAAQ,EAAC;AAFP,KAjCwB;AAqC9BS,IAAAA,QAAQ,EAAC;AACLV,MAAAA,OAAO,EAAC,iBADH;AAELC,MAAAA,QAAQ,EAAC;AAFJ;AArCqB,GAAD,CAAjC,CAHqB,CA8CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,QAAMU,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYhB,KAAZ,EAAmBiB,GAAnB,CAAuBC,IAAI,IAAE;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,cAAc,GAAGrB,KAAK,CAACkB,IAAD,CAAL,CAAYd,QAAZ,CAAqBa,GAArB,CAAyBK,OAAO,IAAE,CAExD,CAFsB,CAAvB;AAIA,WACI;AAAK,MAAA,GAAG,EAAEJ,IAAV;AAAgB,MAAA,SAAS,EAAC;AAA1B,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,KAAK,CAACkB,IAAD,CAAL,CAAYf;AAAxB,OAAiC;AAAG,MAAA,SAAS,EAAC;AAAb,OAA4Be,IAA5B,CAAjC,CADJ,CADJ;AAKH,GAXmB,CAApB;;AAeJ,MAAInB,WAAW,CAACwB,QAAZ,CAAqBC,iBAAzB,EAA2C;AACvC,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKV,WADL,CADJ;AAMH,GAPD,MAOM,OAAO,IAAP;AACL,CAtID;;AAuIA,eAAejB,OAAf","sourcesContent":["import React,{useContext,useState} from 'react';\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\n\r\nconst SideBar = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const [state,setState] = useState({\r\n        Dashboard:{\r\n            pathURL:'/admin',\r\n            subItems:[]\r\n        },\r\n        Posts:{\r\n            pathURL:'/admin/posts',\r\n            subItems:[]\r\n        },\r\n        FileManager: {\r\n            pathURL:'/admin/fileManager',\r\n            subItems:[]\r\n            },\r\n        Gallery:{\r\n            pathURL:'/admin/gallery',\r\n            subItems:[]\r\n        },\r\n        Comments:{\r\n            pathURL:'/admin/comments',\r\n            subItems:[]\r\n        },\r\n        Contacts:{\r\n            pathURL:'/admin/contacts',\r\n            subItems:[]\r\n        },\r\n        Design:{\r\n            pathURL:'/admin/design',\r\n            subItems:['topBar']\r\n        },\r\n        Users:{\r\n            pathURL:'/admin/users',\r\n            subItems:[]\r\n        },\r\n        Tools:{\r\n            pathURL:'/admin/tools',\r\n            subItems:[]\r\n        },\r\n        Settings:{\r\n            pathURL:'/admin/settings',\r\n            subItems:[]\r\n        }\r\n    })\r\n\r\n    // const generateFakeData = ()=>{\r\n    //     // const body = {\r\n    //     //     type: \"Video\",\r\n    //     //     size: 1000,\r\n    //     //     pageNo: 1,\r\n    //     //     fields: [\"author\", \"title\", \"imageUrl\", \"status\", \"actors\", \"tags\", \"categories\"],\r\n    //     //     status: \"All\",\r\n    //     //     author: \"All\",\r\n    //     //     keyword: \"\"\r\n    //     // };\r\n    //     axios.post('http://localhost:4200/server/posts/admin-postsForTest').then(res => {\r\n    //         const posts = res.data.posts;\r\n    //         posts.forEach( async post=>{\r\n    //             let data={\r\n    //                 title :post.title.en,\r\n    //                 categories : post.categories,\r\n    //                 comments :post.comments,\r\n    //                 actors :post.actors ,\r\n    //                 tags :post.tags ,\r\n    //                 author :'5e322f0f8b2a0637dc3b6a16',\r\n    //                 description : post.description.en,\r\n    //                 disLikes : 0,\r\n    //                 mainThumbnail:post.imageUrl,\r\n    //                 videoTrailerUrl :post.imagePreviewUrl,\r\n    //                 videoEmbedCode:post.iframe,\r\n    //                 likes : 0,\r\n    //                 duration:post.duration,\r\n    //                 quality : post.quality,\r\n    //                 status : 'published',\r\n    //                 postType : \"video\",\r\n    //                 sourceSite : \"Xhamster\",\r\n    //                 views : 0,\r\n    //                 lastModify:Date.now()\r\n    //             };\r\n    //\r\n    //             // let dataToSave = {\r\n    //             //     title:post.title.en,\r\n    //             //     author:'5e322f0f8b2a0637dc3b6a16',\r\n    //             //     categories:post.categories,\r\n    //             //     actors:post.actors,\r\n    //             //     tags:post.tags,\r\n    //             //     mainThumbnail:post.imageUrl,\r\n    //             //     status:post.status,\r\n    //             //     type:post.type\r\n    //             // };\r\n    //             await contextData.functions.savePosts(data)\r\n    //             // console.log(post. )\r\n    //         })\r\n    //\r\n    //     })\r\n    // };\r\n\r\n\r\n\r\n    // const renderItems = state.map(item=>{\r\n    //     console.log(item )\r\n    //     return (\r\n    //         <div key={item} >\r\n    //\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n\r\n\r\n    const renderItems = Object.keys(state).map(item=>{\r\n        console.log(item )\r\n        const onHoverHandler = state[item].subItems.map(subItem=>{\r\n            \r\n        })\r\n\r\n        return (\r\n            <div key={item} className='SideBarItemElement'  >\r\n                <Link href={state[item].pathURL}><a className='SideBarItem'>{item}</a></Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n\r\nif (contextData.settings.adminPanelSideBar){\r\n    return (\r\n        <div className='SideBar'>\r\n            {renderItems}\r\n            {/*<button onClick={()=>generateFakeData()}>take fake data</button>*/}\r\n        </div>\r\n    );\r\n}else return null\r\n};\r\nexport default SideBar;"]},"metadata":{},"sourceType":"module"}