{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Link from \"next/link\";\nimport { AppContext } from \"../../../context/AppContext\";\n\nconst Logo = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    logoText: 'Logo',\n    headLine: 'Head Line',\n    logoTextStyle: {},\n    headLineStyle: {}\n  });\n  useEffect(() => {\n    setState(_objectSpread({}, state, {\n      logoText: contextData.siteIdentity.logoText,\n      headLine: contextData.siteIdentity.headLine,\n      logoTextStyle: {\n        color: contextData.siteDesign.textLogoColor,\n        fontSize: contextData.siteDesign.textLogoSize\n      },\n      headLineStyle: {\n        color: contextData.siteDesign.headLineColor,\n        fontSize: contextData.siteDesign.headLineSize\n      }\n    }));\n  }, [contextData.siteIdentity]);\n\n  const RenderLogo = () => {\n    if (props.LogoUrl) {\n      return __jsx(\"img\", {\n        src: props.LogoUrl\n      });\n    } else return null;\n  };\n\n  return __jsx(Link, {\n    href: props.redirectLink\n  }, __jsx(\"a\", {\n    className: \"Logo\"\n  }, __jsx(RenderLogo, null), __jsx(\"span\", {\n    style: state.logoTextStyle,\n    className: \"logoText\"\n  }, props.LogoText), __jsx(\"p\", {\n    style: state.headLineStyle,\n    className: \"headLine\"\n  }, props.headLine)));\n};\n\nexport default Logo;","map":null,"metadata":{},"sourceType":"module"}