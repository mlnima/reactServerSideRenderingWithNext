{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './DropDownWidget.scss';\nimport FA from \"react-fontawesome\";\n\nconst DropDownWidget = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: true,\n    icon: 'sort-up'\n  });\n  useEffect(() => {\n    state.open ? setState(_objectSpread({}, state, {\n      icon: 'sort-up'\n    })) : setState(_objectSpread({}, state, {\n      icon: 'sort-down'\n    }));\n  }, [state.open]);\n\n  const openCloseHandler = () => {\n    state.open ? setState(_objectSpread({}, state, {\n      open: false\n    })) : setState(_objectSpread({}, state, {\n      open: true\n    }));\n  };\n\n  const RenderTheComponent = () => {\n    if (state.open) {\n      return __jsx(props.component, null);\n    } else return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"DropDownWidget\"\n  }, __jsx(\"div\", {\n    className: \"DropDownWidgetHead\"\n  }, __jsx(\"p\", {\n    className: \"DropDownWidgetHeadTitle\"\n  }, props.title), __jsx(\"button\", {\n    className: \"DropDownWidgetHeadOpenCloseBtn\",\n    onClick: () => openCloseHandler()\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: state.icon\n  }))), __jsx(RenderTheComponent, null));\n};\n\nexport default DropDownWidget;","map":null,"metadata":{},"sourceType":"module"}