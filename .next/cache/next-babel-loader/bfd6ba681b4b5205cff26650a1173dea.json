{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport Link from 'next/link';\n\nconst FilterSearch = props => {\n  let searchInput = useRef(null);\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    keyword: ''\n  });\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n\n  let onSearchHandler = e => {\n    e.preventDefault();\n    contextData.dispatchAdminPostsData(adminPostsData => _objectSpread({}, adminPostsData, {\n      keyword: state.keyword,\n      pageNo: 1\n    }));\n  };\n\n  let onChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      keyword: e.target.value\n    }));\n  };\n\n  return __jsx(\"form\", {\n    className: \"FilterSearch\",\n    onSubmit: e => onSearchHandler(e)\n  }, __jsx(\"input\", {\n    ref: searchInput,\n    value: query.keyword || state.keyword,\n    onChange: e => onChangeHandler(e)\n  }), __jsx(Link, {\n    href: {\n      pathname: props.pathname || props.router.pathname,\n      query: _objectSpread({}, props.query, {\n        keyword: state.keyword,\n        page: 1\n      })\n    }\n  }, __jsx(\"a\", {\n    className: \"adminPaginationActionLink\"\n  }, \"Search Posts\")));\n};\n\nexport default FilterSearch;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostsComponents/Filters/FilterSearch.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","Link","FilterSearch","props","searchInput","contextData","state","setState","keyword","console","log","onSearchHandler","e","preventDefault","dispatchAdminPostsData","adminPostsData","pageNo","onChangeHandler","target","value","query","pathname","router","page"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,MAAIC,WAAW,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMM,WAAW,GAAGP,UAAU,CAACE,UAAD,CAA9B;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC;AAC/BW,IAAAA,OAAO,EAAE;AADsB,GAAD,CAAlC;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAaP,KAAb;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAGA,MAAIQ,eAAe,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,WAAW,CAACS,sBAAZ,CAAmCC,cAAc,sBAC1CA,cAD0C;AAE7CP,MAAAA,OAAO,EAAEF,KAAK,CAACE,OAF8B;AAG7CQ,MAAAA,MAAM,EAAC;AAHsC,MAAjD;AAKH,GAPD;;AASA,MAAIC,eAAe,GAAGL,CAAC,IAAI;AACvBL,IAAAA,QAAQ,mBACDD,KADC;AAEJE,MAAAA,OAAO,EAAEI,CAAC,CAACM,MAAF,CAASC;AAFd,OAAR;AAIH,GALD;;AAOA,SACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAGP,CAAD,IAAOD,eAAe,CAACC,CAAD;AAA/D,KACI;AAAO,IAAA,GAAG,EAAER,WAAZ;AAAyB,IAAA,KAAK,EAAEgB,KAAK,CAACZ,OAAN,IAAiBF,KAAK,CAACE,OAAvD;AAAgE,IAAA,QAAQ,EAAEI,CAAC,IAAIK,eAAe,CAACL,CAAD;AAA9F,IADJ,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG;AACTS,MAAAA,QAAQ,EAAElB,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACmB,MAAN,CAAaD,QADhC;AAC0CD,MAAAA,KAAK,oBAAOjB,KAAK,CAACiB,KAAb;AAAoBZ,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAAnC;AAA2Ce,QAAAA,IAAI,EAAC;AAAhD;AAD/C;AAAb,KAEI;AAAG,IAAA,SAAS,EAAC;AAAb,oBAFJ,CAJJ,CADJ;AAUH,CApCD;;AAqCA,eAAerB,YAAf","sourcesContent":["import React, {useEffect, useState, useContext, useRef} from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport Link from 'next/link'\r\n\r\nconst FilterSearch = props => {\r\n    let searchInput = useRef(null)\r\n    const contextData = useContext(AppContext);\r\n    const [state, setState] = useState({\r\n        keyword: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, [props]);\r\n    let onSearchHandler = e => {\r\n        e.preventDefault();\r\n        contextData.dispatchAdminPostsData(adminPostsData=>({\r\n            ...adminPostsData,\r\n            keyword: state.keyword,\r\n            pageNo:1\r\n        }))\r\n    };\r\n\r\n    let onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            keyword: e.target.value\r\n        })\r\n    };\r\n\r\n    return (\r\n        <form className='FilterSearch' onSubmit={(e) => onSearchHandler(e)}>\r\n            <input ref={searchInput} value={query.keyword || state.keyword} onChange={e => onChangeHandler(e)}/>\r\n            {/*<RenderClearBtn/>*/}\r\n            {/*<button className='actionBtn' type='submit'>Search Posts</button>*/}\r\n            <Link href={ {\r\n                pathname: props.pathname || props.router.pathname, query: { ...props.query, keyword: state.keyword,page:1 }\r\n            } }><a className='adminPaginationActionLink'>Search Posts</a></Link>\r\n        </form>\r\n    );\r\n};\r\nexport default FilterSearch;"]},"metadata":{},"sourceType":"module"}