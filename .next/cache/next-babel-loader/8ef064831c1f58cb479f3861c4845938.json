{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useContext, useState, useRef } from 'react';\nimport Head from \"next/head\"; // import '../../styles/styles.scss';\n// import '../../styles/globalAdminPanel.scss';\n\nimport TopBar from \"../adminIncludes/TopBar/AdminTopBar\";\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { withRouter } from \"next/router\";\nimport Loading from \"../includes/Loading/Loading\";\nimport { generateAbsolutePath } from '../../_variables/_variables';\nimport AlertBox from '../includes/AlertBox/AlertBox';\nimport { getSetting } from '../../_variables/ajaxVariables';\nimport Error from '../../pages/_error';\n\nvar Panel = function Panel(props) {\n  var contextData = useContext(AppContext);\n  var container = useRef(null);\n  var Admin = useRef(null);\n\n  var _useState = useState({}),\n      state = _useState[0],\n      dispatchState = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth > 768) {\n      contextData.dispatchSettings(function (settings) {\n        return _objectSpread({}, settings, {\n          adminPanelSideBar: true\n        });\n      });\n    }\n  }, []);\n  useEffect(function () {\n    getSetting('identity', false, window.location.origin, Date.now()).then(function (identity) {\n      contextData.dispatchSiteIdentity(_objectSpread({}, contextData.siteIdentity, {}, identity.data.setting.data));\n    });\n    getSetting('design', false, window.location.origin, Date.now()).then(function (design) {\n      contextData.dispatchSiteDesign(_objectSpread({}, contextData.siteDesign, {}, design.data.setting.data));\n    });\n    getSetting('navigation', false, window.location.origin, Date.now()).then(function (navigationData) {\n      contextData.dispatchNavigationData(_toConsumableArray(navigationData.data.setting.data)); // if (res.data.setting) {\n      //     setState({\n      //         ...state,\n      //         data: res.data.setting.data || []\n      //     })\n      // }\n    });\n  }, []);\n\n  if (contextData.userData.role === 'administrator') {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin Panel\"), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#000000\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"link\", {\n      href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n      rel: \"stylesheet\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\"\n    })), __jsx(AlertBox, null), __jsx(\"div\", {\n      ref: container,\n      className: \"container\"\n    }, __jsx(TopBar, null), __jsx(SideBar, null), __jsx(\"div\", {\n      ref: Admin,\n      className: \"Admin\"\n    }, props.children), __jsx(Loading, null)));\n  } else return __jsx(\"h1\", null, \"Access Denied\");\n};\n\nexport default withRouter(Panel);\n{\n  /*<Error { ...props } />*/\n}","map":null,"metadata":{},"sourceType":"module"}