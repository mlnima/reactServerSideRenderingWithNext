{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { saveCustomStyle, getSetting, updateSetting } from '../../../_variables/ajaxVariables';\nimport './design.scss';\nimport { AppContext } from '../../../context/AppContext';\nimport { getAbsolutePath } from '../../../_variables/_variables';\n\nvar design = function design(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    //body\n    bodyBackgroundColor: props.design.bodyBackgroundColor || '#000',\n    bodyTextColor: props.design.bodyTextColor || '#fff',\n    //Logo\n    textLogoColor: props.design.textLogoColor || '#fff',\n    textLogoSize: props.design.textLogoSize || '40px',\n    headLineColor: props.design.headLineColor || '#fff',\n    headLineSize: props.design.headLineSize || '10px',\n    //mobile theme\n    themeColor: props.design.themeColor || '#fff' //top bar\n    // topBarBackgroundColor: props.design.topBarBackgroundColor || '#181818',\n    // topBarTextColor: props.design.topBarTextColor || '#fff',\n    //header\n    // headerBackgroundColor: props.design.headerBackgroundColor || '#000',\n    // headerTextColor: props.design.headerTextColor || '#fff',\n    //navigation\n    // navigationBackgroundColor: props.design.navigationBackgroundColor || '#181818',\n    // navigationTextColor: props.design.navigationTextColor || '#fff',\n    //footer\n    // footerBackgroundColor: props.design.footerBackgroundColor || '#181818',\n    // footerTextColor: props.design.footerTextColor || '#fff',\n    //widgets\n    // widgetHeaderBackgroundColor: props.design.widgetHeaderBackgroundColor || '#222222',\n    // widgetHeaderTextColor: props.design.widgetHeaderTextColor || '#fff',\n    // widgetHeaderRedirectLinkBackgroundColor: props.design.widgetHeaderRedirectLinkBackgroundColor || '#fff',\n    // widgetHeaderRedirectLinkTextColor: props.design.widgetHeaderRedirectLinkTextColor || '#fff',\n    // widgetBodyBackgroundColor: props.design.widgetBodyBackgroundColor || 'transparent',\n    // widgetBodyTextColor: props.design.widgetBodyTextColor || '#fff',\n    // widgetBodyBorder: props.design.widgetBodyBorder || 'none',\n    //************Post Page***************\n    //comments\n    // commentsAuthorTextColor: props.design.commentsAuthorTextColor || '#0085ba',\n    // commentsDateTextColor: props.design.commentsDateTextColor || '#FF3565',\n    // commentsBodyTextColor: props.design.commentsBodyTextColor || '#fff',\n    // commentsBackgroundColor:  props.design.commentsBackgroundColor ||'transparent',\n\n  }),\n      colors = _useState[0],\n      setColors = _useState[1];\n\n  var _useState2 = useState(''),\n      customStyle = _useState2[0],\n      setCustomStyle = _useState2[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (props.customStyles.data) {\n      setCustomStyle(props.customStyles.data);\n    }\n  }, [props]); // useEffect(() => {\n  //     console.log( customStyle)\n  // }, [customStyle]);\n  // const onChangeHandler = e => {\n  //     setColors({\n  //         ...colors,\n  //         [e.target.name]: e.target.value\n  //     })\n  // }\n  // const onSubmitHandler = e => {\n  //     e.preventDefault()\n  //     contextData.dispatchState({\n  //         ...contextData.state,\n  //         loading: true\n  //     })\n  //     updateSetting('design', { ...colors }).then(() => {\n  //         contextData.dispatchState({\n  //             ...contextData.state,\n  //             loading: false\n  //         })\n  //     })\n  // };\n\n  var renderColorsFields = Object.keys(colors).map(function (element) {\n    return __jsx(\"div\", {\n      key: element,\n      className: \"adminDesignSection\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItems\"\n    }, __jsx(\"div\", {\n      className: \"adminDesignSectionItem\"\n    }, __jsx(\"p\", {\n      className: \"adminDesignSectionItemTitle\"\n    }, element.replace(/([A-Z])/g, \" $1\"), \" :\"), __jsx(\"input\", {\n      name: element,\n      value: colors[element],\n      onChange: function onChange(e) {\n        return onChangeHandler(e);\n      }\n    }), __jsx(\"div\", {\n      className: \"previewColor\",\n      style: {\n        backgroundColor: colors[element]\n      }\n    }))));\n  });\n\n  var onCustomStyleSaveHandler = function onCustomStyleSaveHandler(e) {\n    e.preventDefault();\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: true\n    }));\n    saveCustomStyle(customStyle).then(function () {\n      contextData.dispatchState(_objectSpread({}, contextData.state, {\n        loading: false\n      }));\n    });\n  };\n\n  var onCustomStyleChangeHandler = function onCustomStyleChangeHandler(e) {\n    setCustomStyle(e.target.value);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    className: \"adminDesign\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"colorsContent\"\n  }, renderColorsFields), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Colors\")), __jsx(\"form\", {\n    className: \"customStyle\",\n    onSubmit: function onSubmit(e) {\n      return onCustomStyleSaveHandler(e);\n    }\n  }, __jsx(\"textarea\", {\n    value: customStyle,\n    onChange: function onChange(e) {\n      return onCustomStyleChangeHandler(e);\n    }\n  }), __jsx(\"button\", {\n    className: \"submitBtn\",\n    type: \"submit\"\n  }, \"Save Custom Style\")));\n};\n\ndesign.getInitialProps = function _callee(_ref) {\n  var req, domainName, design, customStyles, designData, customStylesData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n\n          if (!req) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getAbsolutePath(req));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = '';\n\n        case 8:\n          domainName = _context.t0;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getSetting('design', false, domainName));\n\n        case 11:\n          designData = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(getSetting('customStyle', false, domainName));\n\n        case 14:\n          customStylesData = _context.sent;\n          design = designData.data.setting ? designData.data.setting.data : {};\n          customStyles = customStylesData.data.setting ? customStylesData.data.setting : {};\n          return _context.abrupt(\"return\", {\n            design: design,\n            customStyles: customStyles\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default design;","map":null,"metadata":{},"sourceType":"module"}