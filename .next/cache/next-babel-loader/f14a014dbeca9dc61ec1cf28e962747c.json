{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../../../context/AppContext\";\nimport withRouter from \"next/dist/client/with-router\";\nimport FA from \"react-fontawesome\";\nimport AdminActionMenu from \"./AdminActionMenu/AdminActionMenu\";\nimport NewItemMenu from \"./NewItemMenu/NewItemMenu\"; // import { setSprCache } from \"next/dist/next-server/server/spr-cache\";\n\nvar AdminTopBar = function AdminTopBar(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    AdminActionMenu: false,\n    NewItemMenu: false\n  }),\n      state = _useState[0],\n      dispatchState = _useState[1];\n\n  var AdminSideBarOpenCloseHandler = function AdminSideBarOpenCloseHandler() {\n    contextData.settings.adminPanelSideBar ? contextData.dispatchSettings(function (settings) {\n      return _objectSpread({}, settings, {\n        adminPanelSideBar: false\n      });\n    }) : contextData.dispatchSettings(function (settings) {\n      return _objectSpread({}, settings, {\n        adminPanelSideBar: true\n      });\n    });\n  };\n\n  var goToHomePage = function goToHomePage() {\n    props.router.push('/');\n    console.log(props.router);\n  };\n\n  var newAction = function newAction() {\n    props.router.push('/admin/post');\n  };\n\n  var adminActionHandler = function adminActionHandler() {\n    state.AdminActionMenu ? dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: false\n    })) : dispatchState(_objectSpread({}, state, {\n      AdminActionMenu: true\n    }));\n  };\n\n  var newItemMenuHandler = function newItemMenuHandler() {\n    state.NewItemMenu ? dispatchState(_objectSpread({}, state, {\n      NewItemMenu: false\n    })) : dispatchState(_objectSpread({}, state, {\n      NewItemMenu: true\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"adminTopBar\"\n  }, __jsx(\"div\", {\n    className: \"adminTopBarControl\"\n  }, __jsx(\"button\", {\n    className: \"adminSideBarMobileBtn adminTopBarItem\",\n    onClick: function onClick() {\n      return AdminSideBarOpenCloseHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"bars\"\n  })), __jsx(\"button\", {\n    className: \"adminGoToHomePageBtn adminTopBarItem\",\n    onClick: function onClick() {\n      return goToHomePage();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"home\"\n  })), __jsx(\"button\", {\n    className: \"adminNewActionBtn adminTopBarItem\",\n    onClick: function onClick() {\n      return newItemMenuHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"plus\"\n  })), __jsx(NewItemMenu, {\n    active: state.NewItemMenu\n  })), __jsx(\"button\", {\n    className: \"adminActionBtn adminTopBarItem\",\n    onClick: function onClick() {\n      return adminActionHandler();\n    }\n  }, __jsx(FA, {\n    className: \"fontawesomeMedium\",\n    name: \"user\"\n  })), __jsx(AdminActionMenu, {\n    active: state.AdminActionMenu\n  })));\n};\n\nexport default withRouter(AdminTopBar);","map":null,"metadata":{},"sourceType":"module"}