{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Link from \"next/link\";\n\nconst TagsAndCategories = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: [],\n    type: 'tags'\n  });\n  useEffect(() => {\n    console.log(props.data);\n\n    if (props.data) {\n      setState(state => _objectSpread({}, state, {\n        data: props.data\n      }));\n    }\n\n    if (props.type) {\n      setState(_objectSpread({}, state, {\n        type: props.type\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n  const renderData = state.data.map(item => {\n    const path = '/' + state.type + '/' + item;\n    return __jsx(Link, {\n      href: path,\n      key: item\n    }, __jsx(\"a\", null, item, \"xx\"));\n  });\n\n  if (props.data) {\n    return __jsx(\"div\", {\n      className: state.type + ' tags-categories'\n    }, renderData);\n  } else return null;\n};\n\nexport default TagsAndCategories;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Post/TagsAndCategories/TagsAndCategories.js"],"names":["React","useEffect","useState","useContext","Link","TagsAndCategories","props","state","setState","data","type","console","log","renderData","map","item","path"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,IAAI,EAAC;AAF0B,GAAD,CAAlC;AAIAT,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB;;AACA,QAAIH,KAAK,CAACG,IAAV,EAAe;AACXD,MAAAA,QAAQ,CAACD,KAAK,sBACPA,KADO;AAEVE,QAAAA,IAAI,EAAEH,KAAK,CAACG;AAFF,QAAN,CAAR;AAIH;;AACD,QAAIH,KAAK,CAACI,IAAV,EAAe;AACXF,MAAAA,QAAQ,mBACDD,KADC;AAEJG,QAAAA,IAAI,EAAEJ,KAAK,CAACI;AAFR,SAAR;AAIH;AAEJ,GAfQ,EAeP,EAfO,CAAT;AAiBAT,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,GAFQ,EAEP,CAAEA,KAAF,CAFO,CAAT;AAIA,QAAMM,UAAU,GAAGN,KAAK,CAACE,IAAN,CAAWK,GAAX,CAAeC,IAAI,IAAE;AACpC,UAAMC,IAAI,GAAG,MAAMT,KAAK,CAACG,IAAZ,GAAmB,GAAnB,GAAyBK,IAAtC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,IAAZ;AAAkB,MAAA,GAAG,EAAED;AAAvB,OAA6B,iBAAIA,IAAJ,OAA7B,CADJ;AAGH,GALkB,CAAnB;;AAOA,MAAIT,KAAK,CAACG,IAAV,EAAe;AACX,WACI;AAAK,MAAA,SAAS,EAAEF,KAAK,CAACG,IAAN,GAAa;AAA7B,OACKG,UADL,CADJ;AAKH,GAND,MAMM,OAAO,IAAP;AAET,CAzCD;;AA0CA,eAAeR,iBAAf","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport Link from \"next/link\";\r\nconst TagsAndCategories = props => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        type:'tags'\r\n    });\r\n    useEffect(()=>{\r\n        console.log(props.data )\r\n        if (props.data){\r\n            setState(state=>({\r\n                ...state,\r\n                data: props.data\r\n            }))\r\n        }\r\n        if (props.type){\r\n            setState({\r\n                ...state,\r\n                type: props.type\r\n            })\r\n        }\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(state )\r\n    },[ state]);\r\n\r\n    const renderData = state.data.map(item=>{\r\n        const path = '/' + state.type + '/' + item;\r\n        return(\r\n            <Link href={path} key={item}><a>{item}xx</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.data){\r\n        return (\r\n            <div className={state.type + ' tags-categories'}>\r\n                {renderData}\r\n            </div>\r\n        );\r\n    }else return null\r\n\r\n};\r\nexport default TagsAndCategories;"]},"metadata":{},"sourceType":"module"}