{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\n\nvar setting = function setting(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(props);\n  }, []);\n  return __jsx(AdminLayout, null, __jsx(\"form\", null, __jsx(\"input\", {\n    name: \"title\"\n  }), __jsx(\"input\", {\n    name: \"theme-color\"\n  }), __jsx(\"input\", {\n    name: \"description\"\n  }), __jsx(\"input\", {\n    name: \"keywords\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\nsetting.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          return _context.abrupt(\"return\", {\n            name: 'test'\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default setting;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/setting/index.js"],"names":["React","useEffect","useState","useContext","AdminLayout","setting","props","state","setState","console","log","getInitialProps","pathname","query","req","res","err","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAAA,kBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA,MACbK,KADa;AAAA,MACNC,QADM;;AAErBP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI,MAAC,WAAD,QACI,oBACI;AAAO,IAAA,IAAI,EAAC;AAAZ,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC;AAAZ,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC;AAAZ,IAHJ,EAII;AAAO,IAAA,IAAI,EAAC;AAAZ,IAJJ,EAKI;AAAQ,IAAA,IAAI,EAAC;AAAb,qBALJ,CADJ,CADJ;AAWH,CAhBD;;AAkBAD,OAAO,CAACM,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,QAAT,QAASA,QAAT,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA+BC,GAA/B,QAA+BA,GAA/B,EAAoCC,GAApC,QAAoCA,GAApC;AAAA,2CACf;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAGA,eAAeZ,OAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\n\r\nconst setting = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, []);\r\n    return (\r\n        <AdminLayout>\r\n            <form>\r\n                <input name='title'/>\r\n                <input name='theme-color'/>\r\n                <input name='description'/>\r\n                <input name='keywords'/>\r\n                <button type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nsetting.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    return { name: 'test' }\r\n}\r\nexport default setting;"]},"metadata":{},"sourceType":"module"}