{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Switch from \"react-switch\";\nimport './IsInSlideShow.scss';\n\nconst IsInSlideShow = props => {\n  return __jsx(\"div\", {\n    className: \"IsInSlideShow VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Slide Show\")), __jsx(\"div\", {\n    className: \"editor \"\n  }, __jsx(Switch, {\n    name: \"inSlideShow\",\n    onChange: e => {\n      console.log(e);\n    } // props.onChangeHandler(e)}\n    ,\n    checked: props.postData.inSlideShow\n  })));\n};\n\nexport default IsInSlideShow;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/IsInSlideShow/IsInSlideShow.js"],"names":["React","useEffect","useState","useContext","Switch","IsInSlideShow","props","e","console","log","postData","inSlideShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,8BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,QAAQ,EAAGC,CAAC,IAAG;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAaF,CAAb;AACH,KAFkC,CAG/B;AAHJ;AAIE,IAAA,OAAO,EAAGD,KAAK,CAACI,QAAN,CAAeC;AAJ3B,IADJ,CAJJ,CADJ;AAcH,CAfD;;AAgBA,eAAeN,aAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport './IsInSlideShow.scss';\r\n\r\n\r\nconst IsInSlideShow = props => {\r\n    return (\r\n        <div className='IsInSlideShow VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Slide Show</p>\r\n            </div>\r\n            <div className=\"editor \">\r\n                <Switch name='inSlideShow' onChange={ e =>{\r\n                    console.log( e)\r\n                }\r\n                    // props.onChangeHandler(e)}\r\n                } checked={ props.postData.inSlideShow }/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default IsInSlideShow;"]},"metadata":{},"sourceType":"module"}