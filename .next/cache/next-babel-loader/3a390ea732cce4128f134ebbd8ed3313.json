{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\n\nvar PostCategoriesTagsActors = function PostCategoriesTagsActors(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState([]),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var newItemsElement = useRef(null);\n  useEffect(function () {\n    if (props.isNewPost) {}\n\n    console.log(props);\n  }, []);\n\n  var deleteItem = function deleteItem(e) {// contextData.setPostData({\n    //     ...contextData.postData,\n    //     post: {\n    //         ...contextData.postData.post,\n    //         tags: contextData.postData.post.tags.filter(tag => {\n    //             return tag != e.target.name\n    //         })\n    //     }\n    // })\n  }; // useEffect(()=>{\n  //     if (contextData.editingPostData.format === 'video'){\n  //         contextData.dispatchEditingPostData(editingPostData=>({\n  //             ...editingPostData,\n  //             tags:[],\n  //             categories:[],\n  //             actors:[]\n  //         }))\n  //     }else {\n  //         contextData.dispatchEditingPostData(editingPostData=>({\n  //             ...editingPostData,\n  //             tags:[],\n  //             categories:[]\n  //         }))\n  //     }\n  // },[ contextData.editingPostData.format]);\n\n\n  var addNewItem = function addNewItem() {\n    var newItems;\n\n    if (newItemsElement.current.value.includes(',')) {\n      newItems = [].concat(_toConsumableArray(contextData.editingPostData[props.type]), _toConsumableArray(newItemsElement.current.value.split(',')));\n    } else {\n      newItems = [].concat(_toConsumableArray(contextData.editingPostData[props.type]), [newItemsElement.current.value]);\n    }\n\n    contextData.dispatchEditingPostData(function (editingPostData) {\n      return _objectSpread({}, editingPostData, _defineProperty({}, props.type, newItems));\n    });\n  };\n\n  var renderTags = items.map(function (item) {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"tagElement\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: function onClick(e) {\n        return deleteItem(e);\n      },\n      className: \"fas fa-times-circle\"\n    }));\n  });\n  return __jsx(\"div\", {\n    className: \"PostCategoriesTagsActors\"\n  }, __jsx(\"div\", {\n    className: \"addNewTag\"\n  }, __jsx(\"input\", {\n    ref: newItemsElement,\n    type: \"text\"\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return addNewItem();\n    }\n  }, \" Add\")), __jsx(\"span\", null, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"tags\"\n  }, renderTags));\n};\n\nexport default PostCategoriesTagsActors;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors.js"],"names":["React","useEffect","useState","useContext","useRef","AppContext","PostCategoriesTagsActors","props","contextData","items","setItems","newItemsElement","isNewPost","console","log","deleteItem","e","addNewItem","newItems","current","value","includes","editingPostData","type","split","dispatchEditingPostData","renderTags","map","item"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,EAA4CC,MAA5C,QAAyD,OAAzD;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AACA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,KAAK,EAAI;AACtC,MAAMC,WAAW,GAAGL,UAAU,CAACE,UAAD,CAA9B;;AADsC,kBAEZH,QAAQ,CAAC,EAAD,CAFI;AAAA,MAE/BO,KAF+B;AAAA,MAExBC,QAFwB;;AAGtC,MAAIC,eAAe,GAAGP,MAAM,CAAC,IAAD,CAA5B;AACAH,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGM,KAAK,CAACK,SAAT,EAAmB,CAElB;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,GALQ,EAKP,EALO,CAAT;;AAOA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAVD,CAXsC,CAsBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAIC,QAAJ;;AACA,QAAIP,eAAe,CAACQ,OAAhB,CAAwBC,KAAxB,CAA8BC,QAA9B,CAAuC,GAAvC,CAAJ,EAAgD;AAC5CH,MAAAA,QAAQ,gCAAQV,WAAW,CAACc,eAAZ,CAA4Bf,KAAK,CAACgB,IAAlC,CAAR,sBAAmDZ,eAAe,CAACQ,OAAhB,CAAwBC,KAAxB,CAA8BI,KAA9B,CAAoC,GAApC,CAAnD,EAAR;AACH,KAFD,MAEM;AACFN,MAAAA,QAAQ,gCAAQV,WAAW,CAACc,eAAZ,CAA4Bf,KAAK,CAACgB,IAAlC,CAAR,IAAgDZ,eAAe,CAACQ,OAAhB,CAAwBC,KAAxE,EAAR;AACH;;AACDZ,IAAAA,WAAW,CAACiB,uBAAZ,CAAoC,UAAAH,eAAe;AAAA,+BAC5CA,eAD4C,sBAE9Cf,KAAK,CAACgB,IAFwC,EAElCL,QAFkC;AAAA,KAAnD;AAIH,GAXD;;AAcA,MAAIQ,UAAU,GAAGjB,KAAK,CAACkB,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC/B,WACI;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,SAAS,EAAC;AAA1B,OACI,iBAAIA,IAAJ,CADJ,EAEI;AAAQ,MAAA,IAAI,EAAEA,IAAd;AAAoB,MAAA,OAAO,EAAE,iBAACZ,CAAD;AAAA,eAAOD,UAAU,CAACC,CAAD,CAAjB;AAAA,OAA7B;AAAmD,MAAA,SAAS,EAAC;AAA7D,MAFJ,CADJ;AAMH,GAPgB,CAAjB;AAUA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,GAAG,EAAEL,eAAZ;AAA6B,IAAA,IAAI,EAAC;AAAlC,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMM,UAAU,EAAhB;AAAA;AAAjB,YAFJ,CADJ,EAKI,gDALJ,EAMI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKS,UADL,CANJ,CADJ;AAYH,CA7ED;;AA8EA,eAAepB,wBAAf","sourcesContent":["import React,{useEffect,useState,useContext,useRef} from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nconst PostCategoriesTagsActors = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [items, setItems] = useState([]);\r\n    let newItemsElement = useRef(null);\r\n    useEffect(()=>{\r\n        if(props.isNewPost){\r\n\r\n        }\r\n        console.log(props )\r\n    },[]);\r\n\r\n    const deleteItem = (e) => {\r\n        // contextData.setPostData({\r\n        //     ...contextData.postData,\r\n        //     post: {\r\n        //         ...contextData.postData.post,\r\n        //         tags: contextData.postData.post.tags.filter(tag => {\r\n        //             return tag != e.target.name\r\n        //         })\r\n        //     }\r\n        // })\r\n    };\r\n    // useEffect(()=>{\r\n    //     if (contextData.editingPostData.format === 'video'){\r\n    //         contextData.dispatchEditingPostData(editingPostData=>({\r\n    //             ...editingPostData,\r\n    //             tags:[],\r\n    //             categories:[],\r\n    //             actors:[]\r\n    //         }))\r\n    //     }else {\r\n    //         contextData.dispatchEditingPostData(editingPostData=>({\r\n    //             ...editingPostData,\r\n    //             tags:[],\r\n    //             categories:[]\r\n    //         }))\r\n    //     }\r\n    // },[ contextData.editingPostData.format]);\r\n\r\n\r\n\r\n    const addNewItem = () => {\r\n        let newItems;\r\n        if (newItemsElement.current.value.includes(',')){\r\n            newItems =  [...contextData.editingPostData[props.type],...newItemsElement.current.value.split(',')]\r\n        }else {\r\n            newItems =  [...contextData.editingPostData[props.type],newItemsElement.current.value]\r\n        }\r\n        contextData.dispatchEditingPostData(editingPostData=>({\r\n            ...editingPostData,\r\n            [props.type]:newItems\r\n        }))\r\n    };\r\n\r\n\r\n    let renderTags = items.map(item => {\r\n        return (\r\n            <div key={item} className='tagElement'>\r\n                <p>{item}</p>\r\n                <button name={item} onClick={(e) => deleteItem(e)} className='fas fa-times-circle'/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className='PostCategoriesTagsActors'>\r\n            <div className=\"addNewTag\">\r\n                <input ref={newItemsElement} type='text'/>\r\n                <button onClick={() => addNewItem()}> Add</button>\r\n            </div>\r\n            <span>Separate tags with commas</span>\r\n            <div className=\"tags\">\r\n                {renderTags}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PostCategoriesTagsActors;"]},"metadata":{},"sourceType":"module"}