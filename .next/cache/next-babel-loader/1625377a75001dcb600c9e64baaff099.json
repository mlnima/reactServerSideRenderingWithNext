{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport './Loading.scss';\nimport { AppContext } from \"../../../context/AppContext\";\n\nconst Loading = () => {\n  const contextData = useContext(AppContext);\n\n  const onStopLoadingHandler = () => {\n    contextData.dispatchState(_objectSpread({}, contextData.state, {\n      loading: false\n    }));\n  };\n\n  if (contextData.state.loading) {\n    return __jsx(\"div\", {\n      className: \"Loading\"\n    }, __jsx(\"div\", {\n      className: \"lds-ring\"\n    }, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null)), __jsx(\"button\", {\n      className: \"stopLoading fas fa-times\",\n      onClick: () => onStopLoadingHandler()\n    }));\n  } else return null;\n};\n\nexport default Loading;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/includes/Loading/Loading.js"],"names":["React","useContext","AppContext","Loading","contextData","onStopLoadingHandler","dispatchState","state","loading"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAGH,UAAU,CAACC,UAAD,CAA9B;;AACA,QAAMG,oBAAoB,GAAG,MAAI;AAC7BD,IAAAA,WAAW,CAACE,aAAZ,mBACOF,WAAW,CAACG,KADnB;AAEIC,MAAAA,OAAO,EAAC;AAFZ;AAIH,GALD;;AAMA,MAAIJ,WAAW,CAACG,KAAZ,CAAkBC,OAAtB,EAA+B;AAC3B,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OAEI,kBAFJ,EAGI,kBAHJ,EAKI,kBALJ,EAOI,kBAPJ,CAFJ,EAYI;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAE,MAAIH,oBAAoB;AAA9E,MAZJ,CADJ;AAgBH,GAjBD,MAiBO,OAAO,IAAP;AACV,CA1BD;;AA4BA,eAAeF,OAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport './Loading.scss'\r\nimport { AppContext } from \"../../../context/AppContext\";\r\n\r\n\r\nconst Loading = () => {\r\n    const contextData = useContext(AppContext);\r\n    const onStopLoadingHandler = ()=>{\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading:false\r\n        })\r\n    }\r\n    if (contextData.state.loading) {\r\n        return (\r\n            <div className='Loading'>\r\n\r\n                <div className=\"lds-ring\">\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n\r\n                    <div></div>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n                <button className='stopLoading fas fa-times' onClick={()=>onStopLoadingHandler()}/>\r\n            </div>\r\n        );\r\n    } else return null\r\n};\r\n\r\nexport default Loading;\r\n"]},"metadata":{},"sourceType":"module"}