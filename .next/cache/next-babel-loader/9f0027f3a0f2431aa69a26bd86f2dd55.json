{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport { updateSetting, getSetting } from \"../../../_variables/ajaxVariables\";\n\nvar settings = function settings(props) {\n  var _useState = useState({\n    title: '',\n    themeColor: '',\n    description: '',\n    Keywords: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    console.log(state);\n  }, [state]);\n  useEffect(function () {\n    getSetting('identity').then(function (res) {\n      setState(_objectSpread({}, state, {}, res.data.setting.data));\n    });\n  }, []);\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    updateSetting('identity', state);\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"form\", {\n    id: \"site-settings-form\",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    }\n  }, __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Title\"), __jsx(\"input\", {\n    name: \"title\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Theme Color\"), __jsx(\"input\", {\n    name: \"themeColor\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Description\"), __jsx(\"input\", {\n    name: \"description\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  })), __jsx(\"div\", {\n    className: \"site-settings-form-section\"\n  }, __jsx(\"p\", null, \"Keywords\"), __jsx(\"input\", {\n    name: \"keywords\"\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"save settings\")));\n};\n\nsettings.getInitialProps = function _callee(_ref) {\n  var pathname, query, req, res, err;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = _ref.pathname, query = _ref.query, req = _ref.req, res = _ref.res, err = _ref.err;\n          return _context.abrupt(\"return\", {\n            name: 'test'\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default settings;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/index.js"],"names":["React","useEffect","useState","useContext","AdminLayout","updateSetting","getSetting","settings","props","title","themeColor","description","Keywords","state","setState","console","log","then","res","data","setting","onSubmitHandler","e","preventDefault","onChangeHandler","target","name","value","getInitialProps","pathname","query","req","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport { updateSetting,getSetting } from \"../../../_variables/ajaxVariables\";\r\n\r\nconst settings = props => {\r\n    const [ state, setState ] = useState({\r\n        title: '',\r\n        themeColor: '',\r\n        description: '',\r\n        Keywords: []\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        console.log(state)\r\n    }, [state]);\r\n\r\n\r\n    useEffect(()=>{\r\n     getSetting('identity').then(res=>{\r\n         setState({\r\n             ...state,\r\n             ...res.data.setting.data\r\n         })\r\n     })\r\n    },[ ]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        updateSetting('identity', state)\r\n    };\r\n\r\n    const onChangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <AdminLayout>\r\n            <form id='site-settings-form' onSubmit={ e => onSubmitHandler(e) }>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Title</p>\r\n                    <input name='title' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Theme Color</p>\r\n                    <input name='themeColor' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Description</p>\r\n                    <input name='description' onChange={e=>onChangeHandler(e)}/>\r\n                </div>\r\n                <div className=\"site-settings-form-section\">\r\n                    <p>Keywords</p>\r\n                    <input name='keywords'/>\r\n                </div>\r\n                <button type='submit'>save settings</button>\r\n            </form>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nsettings.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    return { name: 'test' }\r\n}\r\nexport default settings;"]},"metadata":{},"sourceType":"module"}