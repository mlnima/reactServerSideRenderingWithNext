{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AdminLayout from '../../../components/layouts/AdminLayout';\nimport { fileUpload } from '../../../_variables/ajaxVariables';\n\nvar gallery = function gallery(props) {\n  var uploadInputElement = useRef(null);\n\n  var _useState = useState({\n    selectedFiles: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    return _regeneratorRuntime.async(function onChangeHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(e.target.files);\n            setState({\n              selectedFiles: e.target.files\n            }); // selectedFileFormData.append('token',localStorage.wt)\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var onUploadHandler = function onUploadHandler() {\n    var selectedFileFormData = new FormData();\n    selectedFileFormData.append('selectedFileFormData', e.target.files[0]);\n    fileUpload(selectedFileFormData, 'test');\n    console.log(selectedFileFormData);\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"gallery\"\n  }, __jsx(\"div\", {\n    className: \"uploadControl\"\n  }, __jsx(\"input\", {\n    ref: uploadInputElement,\n    type: \"file\",\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return uploadInputElement.current.click();\n    }\n  }, \"Upload\"))));\n};\n\nexport default gallery;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/gallery/index.js"],"names":["React","useEffect","useState","useContext","useRef","AdminLayout","fileUpload","gallery","props","uploadInputElement","selectedFiles","state","setState","onChangeHandler","e","console","log","target","files","onUploadHandler","selectedFileFormData","FormData","append","display","current","click"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAAQC,UAAR,QAAyB,mCAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,MAAMC,kBAAkB,GAAGL,MAAM,CAAC,IAAD,CAAjC;;AADqB,kBAEOF,QAAQ,CAAC;AAC/BQ,IAAAA,aAAa,EAAC;AADiB,GAAD,CAFf;AAAA,MAEbC,KAFa;AAAA,MAENC,QAFM;;AAKrBX,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AAECN,YAAAA,QAAQ,CAAC;AACLF,cAAAA,aAAa,EAAEI,CAAC,CAACG,MAAF,CAASC;AADnB,aAAD,CAAR,CAHmB,CAMpB;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAI;AACxB,QAAIC,oBAAoB,GAAG,IAAIC,QAAJ,EAA3B;AACAD,IAAAA,oBAAoB,CAACE,MAArB,CAA4B,sBAA5B,EAAoDR,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApD;AACAZ,IAAAA,UAAU,CAACc,oBAAD,EAAsB,MAAtB,CAAV;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAaI,oBAAb;AACH,GALD;;AASA,SACI,MAAC,WAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,GAAG,EAAGX,kBAAb;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,KAAK,EAAG;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAtD;AAA4E,IAAA,QAAQ,EAAE,kBAAAT,CAAC;AAAA,aAAED,eAAe,CAACC,CAAD,CAAjB;AAAA;AAAvF,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAG;AAAA,aAAML,kBAAkB,CAACe,OAAnB,CAA2BC,KAA3B,EAAN;AAAA;AAAlB,cAFJ,CADJ,CADJ,CADJ;AAWH,CArCD;;AAsCA,eAAelB,OAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout';\r\nimport {fileUpload} from '../../../_variables/ajaxVariables'\r\n\r\nconst gallery = props => {\r\n    const uploadInputElement = useRef(null)\r\n    const [ state, setState ] = useState({\r\n          selectedFiles:[]\r\n    });\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const onChangeHandler = async e => {\r\n        console.log(e.target.files )\r\n\r\n         setState({\r\n             selectedFiles: e.target.files\r\n         })\r\n        // selectedFileFormData.append('token',localStorage.wt)\r\n    }\r\n\r\n    const onUploadHandler = ()=>{\r\n        let selectedFileFormData = new FormData()\r\n        selectedFileFormData.append('selectedFileFormData', e.target.files[0]);\r\n        fileUpload(selectedFileFormData,'test')\r\n        console.log( selectedFileFormData)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className='gallery'>\r\n                <div className='uploadControl'>\r\n                    <input ref={ uploadInputElement } type=\"file\" style={ { display: 'none' } } onChange={e=>onChangeHandler(e)}/>\r\n                    <button onClick={ () => uploadInputElement.current.click() }>Upload</button>\r\n                </div>\r\n\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default gallery;\r\n"]},"metadata":{},"sourceType":"module"}