{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport AppLayout from \"../../components/layouts/AppLayout\";\nimport axios from \"axios\";\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\nimport withRouter from \"next/dist/client/with-router\";\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\nimport Head from \"next/head\";\n\nconst Post = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n  return __jsx(AppLayout, null, __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, props.post.title), __jsx(\"meta\", {\n    name: \"description\",\n    content: props.post.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: \"key,word,for,SEO\"\n  }), \"/*\", __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"The Rock\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"video.movie\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"http://www.imdb.com/title/tt0117500/\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"http://ia.media-imdb.com/images/rock.jpg\"\n  }), \"https://ogp.me/ */\"), __jsx(\"div\", {\n    className: \"post\"\n  }, __jsx(PostSidebar, null), __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(Iframe, {\n    iframeCode: props.post.videoEmbedCode,\n    meta: {\n      description: props.post.description,\n      title: props.post.title,\n      duration: props.post.duration,\n      thumbnailUrl: props.post.mainThumbnail,\n      embedURL: props.post.videoEmbedCode,\n      uploadDate: props.post.lastModify\n    }\n  }), __jsx(DownloadLink, {\n    downloadLink: props.post.videoEmbedCode\n  }), __jsx(PostInfo, {\n    title: props.post.title,\n    description: props.post.description,\n    tags: props.post.tags,\n    categories: props.post.categories\n  })))));\n};\n\nPost.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let post;\n  const body = {\n    postTitle: query.postTitle\n  };\n\n  try {\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body);\n    post = postData.data.post;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    post,\n    query\n  };\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/post/index.js"],"names":["React","useEffect","useState","useContext","AppLayout","axios","getPost","Iframe","PostInfo","DownloadLink","withRouter","PostSidebar","Head","Post","props","state","setState","console","log","post","title","description","videoEmbedCode","duration","thumbnailUrl","mainThumbnail","embedURL","uploadDate","lastModify","tags","categories","getInitialProps","pathname","query","req","res","err","body","postTitle","postData","data","e","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport DownloadLink from \"../../components/includes/Post/DownloadLink/DownloadLink\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\r\nimport Head from \"next/head\";\r\n\r\nconst Post = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log(props )\r\n    }, [props]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <>\r\n                <Head>\r\n                    <title>{props.post.title}</title>\r\n                    <meta name=\"description\" content={props.post.description}/>\r\n                    <meta name=\"keywords\" content=\"key,word,for,SEO\"/>\r\n                    /*\r\n                    <meta property=\"og:title\" content=\"The Rock\" />\r\n                    <meta property=\"og:type\" content=\"video.movie\" />\r\n                    <meta property=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\" />\r\n                    <meta property=\"og:image\" content=\"http://ia.media-imdb.com/images/rock.jpg\" />\r\n\r\n                    https://ogp.me/\r\n                    */\r\n\r\n                </Head>\r\n            <div className='post'>\r\n                <PostSidebar/>\r\n                <div className=\"main\">\r\n                    <Iframe iframeCode={ props.post.videoEmbedCode } meta={{\r\n                        description:props.post.description,\r\n                        title: props.post.title,\r\n                        duration: props.post.duration,\r\n                        thumbnailUrl: props.post.mainThumbnail,\r\n                        embedURL: props.post.videoEmbedCode,\r\n                        uploadDate: props.post.lastModify,\r\n                    }}/>\r\n                    <DownloadLink downloadLink={ props.post.videoEmbedCode }/>\r\n                    <PostInfo title={ props.post.title } description={ props.post.description } tags={ props.post.tags } categories={ props.post.categories }/>\r\n                </div>\r\n            </div>\r\n                </>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    const body = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    try {\r\n        const postData = await axios.post('http://localhost:3000/api/v1/posts/post', body);\r\n        post = postData.data.post\r\n    } catch ( e ) {\r\n        console.error(e)\r\n    }\r\n    return { post, query }\r\n};\r\n\r\nexport default withRouter(Post);"]},"metadata":{},"sourceType":"module"}