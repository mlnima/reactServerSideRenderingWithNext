{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\n\nvar FilterSearch = function FilterSearch(props) {\n  var searchInput = useRef(null);\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    keyword: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {}, []);\n\n  var onSearchHandler = function onSearchHandler(e) {\n    e.preventDefault();\n    contextData.dispatchAdminPostsData(function (adminPostsData) {\n      return _objectSpread({}, adminPostsData, {\n        keyword: state.keyword,\n        pageNo: 1\n      });\n    });\n  };\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, {\n      keyword: e.target.value\n    }));\n  };\n\n  var onClearHandler = function onClearHandler() {// contextData.setPostsData({\n    //     ...contextData.postsData,\n    //     keyword: '',\n    //     pageNo:1\n    // })\n    // searchInput.current.value = ''\n  };\n\n  var RenderClearBtn = function RenderClearBtn() {\n    // if (state.keyword !== '') {\n    //     return (\n    //         <button type='button' onClick={() => onClearHandler()}>x</button>\n    //     )\n    // } else\n    return null;\n  };\n\n  return __jsx(\"form\", {\n    className: \"FilterSearch\",\n    onSubmit: function onSubmit(e) {\n      return onSearchHandler(e);\n    }\n  }, __jsx(\"input\", {\n    ref: searchInput,\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    }\n  }), __jsx(RenderClearBtn, null), __jsx(\"button\", {\n    className: \"actionBtn\",\n    type: \"submit\"\n  }, \"Search Posts\"));\n};\n\nexport default FilterSearch;","map":null,"metadata":{},"sourceType":"module"}