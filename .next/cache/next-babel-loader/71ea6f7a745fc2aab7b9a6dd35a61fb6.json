{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Switch from \"react-switch\";\n\nconst ImagePreview = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: false\n  });\n\n  if (props.postData.mainThumbnail) {\n    if (state.open) {\n      return __jsx(\"div\", {\n        className: \"ImagePreview VideoInformationSection\"\n      }, __jsx(\"p\", null, \"Image Preview\"), __jsx(Switch, {\n        onChange: () => state.open ? setState(_objectSpread({}, state, {\n          open: false\n        })) : setState(_objectSpread({}, state, {\n          open: true\n        })),\n        checked: props.isChecked\n      }), __jsx(\"div\", {\n        className: \"title\"\n      }), __jsx(\"div\", {\n        className: \"editor\"\n      }, __jsx(\"img\", {\n        src: props.postData.mainThumbnail\n      })));\n    } else return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Image Preview\"), __jsx(Switch, {\n      onChange: () => state.open ? setState(_objectSpread({}, state, {\n        open: false\n      })) : setState(_objectSpread({}, state, {\n        open: true\n      })),\n      checked: props.isChecked\n    }));\n  } else return null;\n};\n\nexport default ImagePreview;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/ImagePreview/ImagePreview.js"],"names":["React","useState","Switch","ImagePreview","props","state","setState","open","postData","mainThumbnail","isChecked"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC;AAC7BM,IAAAA,IAAI,EAAC;AADwB,GAAD,CAAhC;;AAKA,MAAIH,KAAK,CAACI,QAAN,CAAeC,aAAnB,EAAiC;AAE7B,QAAIJ,KAAK,CAACE,IAAV,EAAe;AACX,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,iCADJ,EAEI,MAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,MAAIF,KAAK,CAACE,IAAN,GAAYD,QAAQ,mBAAKD,KAAL;AAAWE,UAAAA,IAAI,EAAE;AAAjB,WAApB,GAA6CD,QAAQ,mBAAKD,KAAL;AAAWE,UAAAA,IAAI,EAAE;AAAjB,WAA3E;AAAqG,QAAA,OAAO,EAAGH,KAAK,CAACM;AAArH,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC;AAAf,QAHJ,EAMI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,GAAG,EAAEN,KAAK,CAACI,QAAN,CAAeC;AAAzB,QADJ,CANJ,CADJ;AAYH,KAbD,MAaM,OACF,4BACI,iCADJ,EAEA,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAG,MAAIJ,KAAK,CAACE,IAAN,GAAYD,QAAQ,mBAAKD,KAAL;AAAWE,QAAAA,IAAI,EAAE;AAAjB,SAApB,GAA6CD,QAAQ,mBAAKD,KAAL;AAAWE,QAAAA,IAAI,EAAE;AAAjB,SAA5E;AAAsG,MAAA,OAAO,EAAGH,KAAK,CAACM;AAAtH,MAFA,CADE;AAST,GAxBD,MAwBM,OAAO,IAAP;AAET,CAjCD;;AAkCA,eAAeP,YAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport Switch from \"react-switch\";\r\nconst ImagePreview = props => {\r\n\r\n    const [state,setState]= useState({\r\n        open:false\r\n    })\r\n\r\n\r\n    if (props.postData.mainThumbnail){\r\n\r\n        if (state.open){\r\n            return (\r\n                <div className='ImagePreview VideoInformationSection'>\r\n                    <p>Image Preview</p>\r\n                    <Switch onChange={()=>state.open ?setState({...state,open: false}):setState({...state,open: true}) } checked={ props.isChecked }/>\r\n                    <div className=\"title\">\r\n\r\n                    </div>\r\n                    <div className=\"editor\">\r\n                        <img src={props.postData.mainThumbnail}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else return (\r\n            <>\r\n                <p>Image Preview</p>\r\n            <Switch onChange={ ()=>state.open ?setState({...state,open: false}):setState({...state,open: true}) } checked={ props.isChecked }/>\r\n            </>\r\n        )\r\n\r\n\r\n\r\n    }else return null\r\n\r\n};\r\nexport default ImagePreview;"]},"metadata":{},"sourceType":"module"}