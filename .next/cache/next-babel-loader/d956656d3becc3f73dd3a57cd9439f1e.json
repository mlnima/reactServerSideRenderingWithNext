{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { getPost } from '../../../_variables/ajaxPostsVariables';\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\nimport TitleDescription from \"../../../components/adminIncludes/PostComponents/TitleDescription/TitleDescription\";\nimport ActionOnPost from \"../../../components/adminIncludes/PostComponents/ActionOnPost/ActionOnPost\";\nimport DropDownWidget from \"../../../components/adminIncludes/PostComponents/DropDownWidget/DropDownWidget\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport Format from \"../../../components/adminIncludes/PostComponents/Format/Format\";\nimport PostCategoriesTagsActors from \"../../../components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors\";\nimport VideoInformation from \"../../../components/adminIncludes/PostComponents/VideoInformation/VideoInformation\";\nimport withRouter from \"next/dist/client/with-router\";\n\nconst Index = props => {\n  const contextData = useContext(AppContext);\n\n  const onChangeHandler = e => {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    if (props.query.id) {\n      contextData.functions.getPost(props.query.id).then(post => {\n        contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, post.data.post));\n      });\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: \"Post\"\n  }, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(TitleDescription, {\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    component: VideoInformation,\n    title: \"Video Information\",\n    onChangeHandler: onChangeHandler\n  })), __jsx(\"div\", {\n    className: \"side\"\n  }, __jsx(DropDownWidget, {\n    component: ActionOnPost,\n    title: \"action\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    component: Format,\n    title: \"Format\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"categories\",\n    title: \"Post Category\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"tags\",\n    title: \"Post Tags\",\n    onChangeHandler: onChangeHandler\n  }), __jsx(DropDownWidget, {\n    isNewPost: props.query.new === 'true',\n    component: PostCategoriesTagsActors,\n    type: \"actors\",\n    title: \"Post Actors\",\n    onChangeHandler: onChangeHandler\n  })))));\n};\n\nIndex.getInitialProps = async ({\n  query\n}) => {\n  return {};\n};\n\nexport default withRouter(Index);","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/post/index.js"],"names":["React","useEffect","useState","useContext","useRef","getPost","AdminLayout","TitleDescription","ActionOnPost","DropDownWidget","AppContext","Format","PostCategoriesTagsActors","VideoInformation","withRouter","Index","props","contextData","onChangeHandler","e","dispatchEditingPostData","editingPostData","target","name","value","query","id","functions","then","post","data","new","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {getPost} from '../../../_variables/ajaxPostsVariables'\r\nimport AdminLayout from \"../../../components/layouts/AdminLayout\";\r\nimport TitleDescription from \"../../../components/adminIncludes/PostComponents/TitleDescription/TitleDescription\";\r\nimport ActionOnPost from \"../../../components/adminIncludes/PostComponents/ActionOnPost/ActionOnPost\";\r\nimport DropDownWidget from \"../../../components/adminIncludes/PostComponents/DropDownWidget/DropDownWidget\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport Format from \"../../../components/adminIncludes/PostComponents/Format/Format\";\r\nimport PostCategoriesTagsActors from \"../../../components/adminIncludes/PostComponents/PostCategoriesTagsActors/PostCategoriesTagsActors\";\r\nimport VideoInformation from \"../../../components/adminIncludes/PostComponents/VideoInformation/VideoInformation\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\n\r\nconst Index = props => {\r\n    const contextData = useContext(AppContext);\r\n    const onChangeHandler = e => {\r\n        contextData.dispatchEditingPostData({\r\n            ...contextData.editingPostData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.query.id){\r\n              contextData.functions.getPost(props.query.id).then(post=>{\r\n                  contextData.dispatchEditingPostData({...contextData.editingPostData,...post.data.post})\r\n              })\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <div className='Post'>\r\n                    <div className=\"content\">\r\n                        <TitleDescription onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget component={ VideoInformation } title='Video Information' onChangeHandler={ onChangeHandler }/>\r\n                    </div>\r\n\r\n                    <div className=\"side\">\r\n                        <DropDownWidget component={ ActionOnPost } title='action' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget component={ Format } title='Format' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='categories' title='Post Category' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='tags' title='Post Tags' onChangeHandler={ onChangeHandler }/>\r\n                        <DropDownWidget isNewPost={ props.query.new === 'true' } component={ PostCategoriesTagsActors } type='actors' title='Post Actors' onChangeHandler={ onChangeHandler }/>\r\n                    </div>\r\n\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nIndex.getInitialProps = async ({ query }) => {\r\n\r\n    return { }\r\n};\r\nexport default withRouter(Index);"]},"metadata":{},"sourceType":"module"}