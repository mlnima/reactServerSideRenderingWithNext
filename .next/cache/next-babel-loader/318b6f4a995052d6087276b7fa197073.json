{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\n\nvar AdminRenderComments = function AdminRenderComments(props) {\n  var _useState = useState([]),\n      checkedItems = _useState[0],\n      setCheckedItems = _useState[1];\n\n  useEffect(function () {\n    console.log(checkedItems);\n  }, [checkedItems]);\n\n  var onChangeHandler = function onChangeHandler(e, id) {\n    e.target.checked ? setCheckedItems([].concat(_toConsumableArray(checkedItems), [id])) : setCheckedItems(checkedItems.filter(function (i) {\n      return i !== id;\n    }));\n  };\n\n  var renderComments = props.comments.map(function (comment) {\n    return __jsx(\"div\", {\n      key: props.comments.indexOf(comment),\n      className: \"adminCommentsItem\"\n    }, __jsx(\"div\", {\n      className: \"adminCommentsItemHead\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: checkedItems.includes(comment._id),\n      onChange: function onChange(e) {\n        return onChangeHandler(e, comment._id);\n      }\n    })), __jsx(\"p\", null, comment.body));\n  });\n  return __jsx(\"div\", {\n    className: \"AdminRenderComments\"\n  }, renderComments);\n};\n\nexport default AdminRenderComments;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/commentsPageComponents/AdminRenderComments/AdminRenderComments.js"],"names":["React","useEffect","useState","useContext","useRef","AdminRenderComments","props","checkedItems","setCheckedItems","console","log","onChangeHandler","e","id","target","checked","filter","i","renderComments","comments","map","comment","indexOf","includes","_id","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAAA,kBACSJ,QAAQ,CAAC,EAAD,CADjB;AAAA,MACzBK,YADyB;AAAA,MACXC,eADW;;AAGjCP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,GAFQ,EAEN,CAAEA,YAAF,CAFM,CAAT;;AAIA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAIC,EAAJ,EAAW;AAC/BD,IAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GACIP,eAAe,8BAAMD,YAAN,IAAoBM,EAApB,GADnB,GAEIL,eAAe,CAACD,YAAY,CAACS,MAAb,CAAoB,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,EAAV;AAAA,KAArB,CAAD,CAFnB;AAGH,GAJD;;AAMA,MAAMK,cAAc,GAAGZ,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO,EAAI;AACjD,WACI;AAAK,MAAA,GAAG,EAAGf,KAAK,CAACa,QAAN,CAAeG,OAAf,CAAuBD,OAAvB,CAAX;AAA6C,MAAA,SAAS,EAAC;AAAvD,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAGd,YAAY,CAACgB,QAAb,CAAsBF,OAAO,CAACG,GAA9B,CAAjC;AAAsE,MAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,eAAED,eAAe,CAACC,CAAD,EAAGS,OAAO,CAACG,GAAX,CAAjB;AAAA;AAAjF,MADJ,CADJ,EAKI,iBAAKH,OAAO,CAACI,IAAb,CALJ,CADJ;AASH,GAVsB,CAAvB;AAWA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACMP,cADN,CADJ;AAKH,CA7BD;;AA8BA,eAAeb,mBAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst AdminRenderComments = props => {\r\n    const [ checkedItems, setCheckedItems ] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log(checkedItems)\r\n    }, [ checkedItems ]);\r\n\r\n    const onChangeHandler = (e, id) => {\r\n        e.target.checked ?\r\n            setCheckedItems([ ...checkedItems, id ]) :\r\n            setCheckedItems(checkedItems.filter(i => i !== id))\r\n    }\r\n\r\n    const renderComments = props.comments.map(comment => {\r\n        return (\r\n            <div key={ props.comments.indexOf(comment) } className='adminCommentsItem'>\r\n                <div className=\"adminCommentsItemHead\">\r\n                    <input type='checkbox' checked={ checkedItems.includes(comment._id) } onChange={e=>onChangeHandler(e,comment._id)}/>\r\n                </div>\r\n\r\n                <p>{ comment.body }</p>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className='AdminRenderComments'>\r\n            { renderComments }\r\n        </div>\r\n    );\r\n};\r\nexport default AdminRenderComments;\r\n"]},"metadata":{},"sourceType":"module"}