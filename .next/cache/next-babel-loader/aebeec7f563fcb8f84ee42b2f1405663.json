{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport AppLayout from '../components/layouts/AppLayout';\nimport { getMultipleSetting } from '../_variables/ajaxVariables';\n\nconst Error = ({\n  statusCode\n}) => {\n  return __jsx(AppLayout, null, __jsx(\"p\", null, statusCode ? `An error ${statusCode} occurred on server` : 'An error occurred on client'));\n};\n\nError.getInitialProps = async ({\n  res,\n  err\n}) => {\n  let settings;\n  const settingsData = await getMultipleSetting({\n    settings: ['identity', 'navigation', 'design']\n  }, true, domainName);\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return {\n    statusCode\n  };\n};\n\nexport default Error;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/_error.js"],"names":["React","useEffect","useState","useContext","useRef","AppLayout","getMultipleSetting","Error","statusCode","getInitialProps","res","err","settings","settingsData","domainName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC7B,SACI,MAAC,SAAD,QACA,iBACKA,UAAU,GACJ,YAAWA,UAAW,qBADlB,GAEL,6BAHV,CADA,CADJ;AASH,CAVD;;AAYAD,KAAK,CAACE,eAAN,GAAuB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAE3C,MAAIC,QAAJ;AACA,QAAMC,YAAY,GAAG,MAAMP,kBAAkB,CAAC;AAAEM,IAAAA,QAAQ,EAAE,CAAE,UAAF,EAAc,YAAd,EAA4B,QAA5B;AAAZ,GAAD,EAAuD,IAAvD,EAA6DE,UAA7D,CAA7C;AAEA,QAAMN,UAAU,GAAGE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,GAAjE;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAPD;;AASA,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../components/layouts/AppLayout'\r\nimport { getMultipleSetting } from '../_variables/ajaxVariables'\r\n\r\nconst Error = ({ statusCode })=> {\r\n    return (\r\n        <AppLayout>\r\n        <p>\r\n            {statusCode\r\n                ? `An error ${statusCode} occurred on server`\r\n                : 'An error occurred on client'}\r\n        </p>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nError.getInitialProps =async ({ res, err }) => {\r\n\r\n    let settings;\r\n    const settingsData = await getMultipleSetting({ settings: [ 'identity', 'navigation', 'design' ] }, true, domainName)\r\n\r\n    const statusCode = res ? res.statusCode : err ? err.statusCode : 404\r\n    return { statusCode }\r\n}\r\n\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}