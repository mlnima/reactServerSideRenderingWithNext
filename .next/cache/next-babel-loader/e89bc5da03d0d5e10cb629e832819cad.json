{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../../../../../context/AppContext\";\n\nvar Quality = function Quality(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    defaultValue: '240p'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (contextData.editingPostData.quality) {\n      setState(_objectSpread({}, state, {\n        defaultValue: contextData.editingPostData.quality\n      }));\n    }\n  }, [contextData.editingPostData.quality]);\n  return __jsx(\"div\", {\n    className: \"Quality VideoInformationSection\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"p\", null, \"Quality\")), __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(\"div\", {\n    className: \"option\"\n  }, __jsx(\"select\", {\n    name: \"quality\",\n    defaultValue: state.defaultValue,\n    onChange: function onChange(e) {\n      contextData.functions.setEditingPostData(e.target.name, e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"240p\"\n  }, \"240p\"), __jsx(\"option\", {\n    value: \"360p\"\n  }, \"360p\"), __jsx(\"option\", {\n    value: \"480p\"\n  }, \"480p\"), __jsx(\"option\", {\n    value: \"720p\"\n  }, \"720p\"), __jsx(\"option\", {\n    value: \"1080p\"\n  }, \"1080p\"), __jsx(\"option\", {\n    value: \"1440p\"\n  }, \"1440p\"), __jsx(\"option\", {\n    value: \"2060p\"\n  }, \"2060p\"), __jsx(\"option\", {\n    value: \"4120p\"\n  }, \"4120p\")))));\n};\n\nexport default Quality; //     onChange={e=>{contextData.functions.setEditingPostData(e.target.name,e.target.value)}}","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/Quality/Quality.js"],"names":["React","useEffect","useState","useContext","AppContext","Quality","props","contextData","defaultValue","state","setState","editingPostData","quality","e","functions","setEditingPostData","target","name","value"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,MAAMC,WAAW,GAAGJ,UAAU,CAACC,UAAD,CAA9B;;AADqB,kBAEKF,QAAQ,CAAC;AAC/BM,IAAAA,YAAY,EAAC;AADkB,GAAD,CAFb;AAAA,MAEdC,KAFc;AAAA,MAEPC,QAFO;;AAKrBT,EAAAA,SAAS,CAAC,YAAI;AACV,QAAIM,WAAW,CAACI,eAAZ,CAA4BC,OAAhC,EAAwC;AACpCF,MAAAA,QAAQ,mBACDD,KADC;AAEJD,QAAAA,YAAY,EAAED,WAAW,CAACI,eAAZ,CAA4BC;AAFtC,SAAR;AAIH;AAEJ,GARQ,EAQP,CAACL,WAAW,CAACI,eAAZ,CAA4BC,OAA7B,CARO,CAAT;AASA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,2BADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,YAAY,EAAEH,KAAK,CAACD,YAA3C;AAAyD,IAAA,QAAQ,EAAE,kBAAAK,CAAC,EAAE;AAACN,MAAAA,WAAW,CAACO,SAAZ,CAAsBC,kBAAtB,CAAyCF,CAAC,CAACG,MAAF,CAASC,IAAlD,EAAuDJ,CAAC,CAACG,MAAF,CAASE,KAAhE;AAAuE;AAA9I,KACI;AAAQ,IAAA,KAAK,EAAC;AAAd,YADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,YAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC;AAAd,YAHJ,EAII;AAAQ,IAAA,KAAK,EAAC;AAAd,YAJJ,EAKI;AAAQ,IAAA,KAAK,EAAC;AAAd,aALJ,EAMI;AAAQ,IAAA,KAAK,EAAC;AAAd,aANJ,EAOI;AAAQ,IAAA,KAAK,EAAC;AAAd,aAPJ,EAQI;AAAQ,IAAA,KAAK,EAAC;AAAd,aARJ,CADJ,CADJ,CAJJ,CADJ;AAqBH,CAnCD;;AAoCA,eAAeb,OAAf,C,CAEA","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport { AppContext } from \"../../../../../context/AppContext\";\r\nconst Quality = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [state, setState] = useState({\r\n        defaultValue:'240p'\r\n    });\r\n    useEffect(()=>{\r\n        if (contextData.editingPostData.quality){\r\n            setState({\r\n                ...state,\r\n                defaultValue: contextData.editingPostData.quality\r\n            })\r\n        }\r\n\r\n    },[contextData.editingPostData.quality]);\r\n    return (\r\n        <div className='Quality VideoInformationSection'>\r\n            <div className=\"title\">\r\n                <p>Quality</p>\r\n            </div>\r\n            <div className=\"editor\">\r\n                <div className=\"option\">\r\n                    <select name='quality' defaultValue={state.defaultValue} onChange={e=>{contextData.functions.setEditingPostData(e.target.name,e.target.value)}}>\r\n                        <option value='240p'>240p</option>\r\n                        <option value='360p'>360p</option>\r\n                        <option value='480p'>480p</option>\r\n                        <option value='720p'>720p</option>\r\n                        <option value='1080p'>1080p</option>\r\n                        <option value='1440p'>1440p</option>\r\n                        <option value='2060p'>2060p</option>\r\n                        <option value='4120p'>4120p</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Quality;\r\n\r\n//     onChange={e=>{contextData.functions.setEditingPostData(e.target.name,e.target.value)}}"]},"metadata":{},"sourceType":"module"}