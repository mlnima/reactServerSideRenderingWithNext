{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useContext, useState, useRef } from 'react';\nimport Head from \"next/head\"; // import '../../styles/styles.scss';\n// import '../../styles/globalAdminPanel.scss';\n\nimport TopBar from \"../adminIncludes/TopBar/AdminTopBar\";\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { withRouter } from \"next/router\";\nimport Loading from \"../includes/Loading/Loading\";\nimport { generateAbsolutePath } from '../../_variables/_variables';\nimport AlertBox from '../includes/AlertBox/AlertBox';\nimport { getSetting } from '../../_variables/ajaxVariables';\nimport Error from '../../pages/_error';\n\nconst Panel = props => {\n  const contextData = useContext(AppContext);\n  const container = useRef(null);\n  const Admin = useRef(null);\n  const {\n    0: state,\n    1: dispatchState\n  } = useState({});\n  useEffect(() => {\n    if (window.innerWidth > 768) {\n      contextData.dispatchSettings(settings => _objectSpread({}, settings, {\n        adminPanelSideBar: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    getSetting('identity', false, window.location.origin, Date.now()).then(identity => {\n      contextData.dispatchSiteIdentity(_objectSpread({}, contextData.siteIdentity, {}, identity.data.setting.data));\n    });\n    getSetting('design', false, window.location.origin, Date.now()).then(design => {\n      contextData.dispatchSiteDesign(_objectSpread({}, contextData.siteDesign, {}, design.data.setting.data));\n    });\n    getSetting('navigation', false, window.location.origin, Date.now()).then(navigationData => {\n      contextData.dispatchNavigationData([...navigationData.data.setting.data]); // if (res.data.setting) {\n      //     setState({\n      //         ...state,\n      //         data: res.data.setting.data || []\n      //     })\n      // }\n    });\n  }, []);\n\n  if (contextData.userData.role === 'administrator') {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin Panel\"), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#000000\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"link\", {\n      href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n      rel: \"stylesheet\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\"\n    })), __jsx(AlertBox, null), __jsx(\"div\", {\n      ref: container,\n      className: \"container\"\n    }, __jsx(TopBar, null), __jsx(SideBar, null), __jsx(\"div\", {\n      ref: Admin,\n      className: \"Admin\"\n    }, props.children), __jsx(Loading, null)));\n  } else return __jsx(\"h1\", null, \"Access Denied\");\n};\n\nexport default withRouter(Panel);\n{\n  /*<Error { ...props } />*/\n}","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/layouts/AdminLayout.js"],"names":["React","useEffect","useContext","useState","useRef","Head","TopBar","SideBar","AppContext","withRouter","Loading","generateAbsolutePath","AlertBox","getSetting","Error","Panel","props","contextData","container","Admin","state","dispatchState","window","innerWidth","dispatchSettings","settings","adminPanelSideBar","location","origin","Date","now","then","identity","dispatchSiteIdentity","siteIdentity","data","setting","design","dispatchSiteDesign","siteDesign","navigationData","dispatchNavigationData","userData","role","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport Head from \"next/head\";\r\n// import '../../styles/styles.scss';\r\n// import '../../styles/globalAdminPanel.scss';\r\n\r\nimport TopBar from \"../adminIncludes/TopBar/AdminTopBar\";\r\nimport SideBar from \"../adminIncludes/SideBar/SideBar\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { withRouter } from \"next/router\";\r\nimport Loading from \"../includes/Loading/Loading\";\r\nimport { generateAbsolutePath } from '../../_variables/_variables'\r\nimport AlertBox from '../includes/AlertBox/AlertBox'\r\nimport { getSetting } from '../../_variables/ajaxVariables'\r\nimport Error from '../../pages/_error'\r\n\r\nconst Panel = props => {\r\n    const contextData = useContext(AppContext);\r\n    const container = useRef(null);\r\n    const Admin = useRef(null);\r\n    const [ state, dispatchState ] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth > 768) {\r\n            contextData.dispatchSettings(settings => ({\r\n                ...settings,\r\n                adminPanelSideBar: true\r\n            }))\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getSetting('identity', false, window.location.origin,Date.now()).then(identity => {\r\n            contextData.dispatchSiteIdentity({\r\n                ...contextData.siteIdentity,\r\n                ...identity.data.setting.data\r\n            })\r\n        })\r\n        getSetting('design', false, window.location.origin,Date.now()).then(design => {\r\n            contextData.dispatchSiteDesign({\r\n                ...contextData.siteDesign,\r\n                ...design.data.setting.data\r\n            })\r\n        })\r\n        getSetting('navigation', false, window.location.origin,Date.now()).then(navigationData => {\r\n\r\n            contextData.dispatchNavigationData([\r\n\r\n                ...navigationData.data.setting.data\r\n            ])\r\n\r\n\r\n            // if (res.data.setting) {\r\n            //     setState({\r\n            //         ...state,\r\n            //         data: res.data.setting.data || []\r\n            //     })\r\n            // }\r\n        })\r\n    }, []);\r\n\r\n    if(contextData.userData.role=== 'administrator'){\r\n        return (\r\n            <>\r\n                <Head>\r\n                    <title>Admin Panel</title>\r\n                    <meta name=\"theme-color\" content=\"#000000\"/>\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\r\n                    <meta charSet=\"utf-8\"/>\r\n                    <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n                    <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n                </Head>\r\n                <AlertBox/>\r\n                <div ref={ container } className=\"container\">\r\n                    <TopBar/>\r\n                    <SideBar/>\r\n                    <div ref={ Admin } className=\"Admin\">\r\n                        { props.children }\r\n                    </div>\r\n                    <Loading/>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }else  return (\r\n        <h1>Access Denied</h1>\r\n    )\r\n\r\n};\r\n\r\nexport default withRouter(Panel);\r\n{/*<Error { ...props } />*/}"]},"metadata":{},"sourceType":"module"}