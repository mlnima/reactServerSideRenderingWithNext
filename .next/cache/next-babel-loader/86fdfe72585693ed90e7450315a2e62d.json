{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\nimport Quality from \"./Quality/Quality\";\nimport './VideoInformation.scss';\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\nimport Duration from \"./Duration/Duration\";\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\nimport { AppContext } from \"../../../../context/AppContext\";\nimport TextInput from \"./TextInput/TextInput\";\nimport RenderIframe from \"./RenderIframe/RenderIframe\";\nimport ImagePreview from \"./ImagePreview/ImagePreview\";\n\nconst VideoInformation = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    inSlideShow: false\n  });\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n\n  const onSaveChanges = () => {\n    contextData.dispatchEditingPostData(_objectSpread({}, contextData.editingPostData, {}, state));\n  };\n\n  const onchangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onDurationChangeHandler = value => {\n    setState(_objectSpread({}, state, {\n      duration: value\n    }));\n  };\n\n  const onIsInSlideShowChangeHandler = e => {\n    setState(_objectSpread({}, state, {\n      inSlideShow: e\n    }));\n  };\n\n  if (contextData.editingPostData.postType === 'video') {\n    return __jsx(\"div\", {\n      className: \"VideoInformation\"\n    }, __jsx(\"div\", {\n      className: \"saveBtn\"\n    }, __jsx(\"button\", {\n      className: \"SaveVideoDataBtn\",\n      onClick: () => onSaveChanges()\n    }, \"Save Video Data\")), __jsx(IsInSlideShow, {\n      onChangeHandler: onIsInSlideShowChangeHandler,\n      isChecked: state.inSlideShow\n    }), __jsx(Quality, {\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"videoTrailerUrl\",\n      title: \"Video Url\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(VideoEmbedCode, {\n      name: \"videoEmbedCode\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(RenderIframe, null), __jsx(Duration, {\n      onDurationChangeHandler: onDurationChangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'views',\n      onChangeHandler: onchangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'likes',\n      onChangeHandler: onchangeHandler\n    }), __jsx(ViewsLikesDisLikes, {\n      name: 'disLikes',\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"VideoTrailerUrl\",\n      title: \"Video Trailer Url\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(TextInputWithUploadBtn, {\n      name: \"mainThumbnail\",\n      title: \"Main thumbnail\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(ImagePreview, null), __jsx(TextInput, {\n      name: \"downloadLink\",\n      title: \"Download Link\",\n      onChangeHandler: onchangeHandler\n    }), __jsx(\"div\", {\n      className: \"saveBtn\"\n    }, __jsx(\"button\", {\n      className: \"SaveVideoDataBtn\",\n      onClick: () => onSaveChanges()\n    }, \"Save Video Data\")));\n  } else {\n    return __jsx(\"h3\", null, \"This Post Type Does not Support this Feature \");\n  }\n};\n\nexport default VideoInformation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/PostComponents/VideoInformation/VideoInformation.js"],"names":["React","useEffect","useState","useContext","IsInSlideShow","Quality","VideoUrls","VideoEmbedCode","Duration","ViewsLikesDisLikes","TextInputWithUploadBtn","AppContext","TextInput","RenderIframe","ImagePreview","VideoInformation","props","contextData","state","setState","inSlideShow","console","log","onSaveChanges","dispatchEditingPostData","editingPostData","onchangeHandler","e","target","name","value","onDurationChangeHandler","duration","onIsInSlideShowChangeHandler","postType"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport IsInSlideShow from \"./IsInSlideShow/IsInSlideShow\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport './VideoInformation.scss'\r\nimport VideoUrls from \"./VideoUrls/VideoUrls\";\r\nimport VideoEmbedCode from \"./VideoEmbedCode/VideoEmbedCode\";\r\nimport Duration from \"./Duration/Duration\";\r\nimport ViewsLikesDisLikes from \"./ViewsLikesDisLikes/ViewsLikesDisLikes\";\r\nimport TextInputWithUploadBtn from \"./TextInputWithUploadBtn/TextInputWithUploadBtn\";\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport TextInput from \"./TextInput/TextInput\";\r\nimport RenderIframe from \"./RenderIframe/RenderIframe\";\r\nimport ImagePreview from \"./ImagePreview/ImagePreview\";\r\n\r\nconst VideoInformation = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        inSlideShow: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(state)\r\n    }, [ state ]);\r\n\r\n    const onSaveChanges = () => {\r\n        contextData.dispatchEditingPostData({ ...contextData.editingPostData, ...state })\r\n    };\r\n\r\n    const onchangeHandler = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n    const onDurationChangeHandler = (value) => {\r\n        setState({\r\n            ...state,\r\n            duration: value\r\n        })\r\n    };\r\n    const onIsInSlideShowChangeHandler = (e) => {\r\n        setState({\r\n            ...state,\r\n            inSlideShow: e\r\n        })\r\n    };\r\n\r\n    if (contextData.editingPostData.postType === 'video') {\r\n        return (\r\n            <div className='VideoInformation'>\r\n                <div className=\"saveBtn\">\r\n                    <button className='SaveVideoDataBtn' onClick={ () => onSaveChanges() }>Save Video Data</button>\r\n                </div>\r\n\r\n                <IsInSlideShow onChangeHandler={ onIsInSlideShowChangeHandler } isChecked={ state.inSlideShow }/>\r\n                <Quality onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='videoTrailerUrl' title='Video Url' onChangeHandler={ onchangeHandler }/>\r\n                <VideoEmbedCode name='videoEmbedCode' onChangeHandler={ onchangeHandler }/>\r\n                <RenderIframe/>\r\n                <Duration onDurationChangeHandler={ onDurationChangeHandler }/>\r\n                <ViewsLikesDisLikes name={ 'views' } onChangeHandler={ onchangeHandler }/>\r\n                <ViewsLikesDisLikes name={ 'likes' } onChangeHandler={ onchangeHandler }/>\r\n                <ViewsLikesDisLikes name={ 'disLikes' } onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='VideoTrailerUrl' title='Video Trailer Url' onChangeHandler={ onchangeHandler }/>\r\n                <TextInputWithUploadBtn name='mainThumbnail' title='Main thumbnail' onChangeHandler={ onchangeHandler }/>\r\n                <ImagePreview/>\r\n                <TextInput name='downloadLink' title='Download Link' onChangeHandler={ onchangeHandler }/>\r\n                <div className=\"saveBtn\">\r\n                    <button className='SaveVideoDataBtn' onClick={ () => onSaveChanges() }>Save Video Data</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <h3>This Post Type Does not Support this Feature </h3>\r\n        )\r\n    }\r\n\r\n};\r\nexport default VideoInformation;"]},"metadata":{},"sourceType":"module"}