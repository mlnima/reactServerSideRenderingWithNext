{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { clickPathGenerator } from '../../../../_variables/_variables';\nimport './FileManagerArea.scss';\nimport { AppContext } from '../../../../context/AppContext';\nimport withRouter from 'next/dist/client/with-router';\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg';\nimport JsLogoSvg from '../../../../static/images/fontawesome/js-square-brands.svg';\nimport SliderSvg from '../../../../static/images/fontawesome/sliders-h-solid.svg';\nimport FolderSvg from '../../../../static/images/fontawesome/folder-solid.svg';\nimport SassSvg from '../../../../static/images/fontawesome/sass-brands.svg';\nimport FileSvg from '../../../../static/images/fontawesome/file-solid.svg';\n\nconst FileManagerArea = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n  useEffect(() => {}, []);\n  useEffect(() => {\n    console.log(props);\n  }, [props]);\n\n  const classGenerator = fileName => {\n    let nextClass = '';\n\n    if (props.data.clickedItem === clickPathGenerator(fileName, props.data.path)) {\n      nextClass = ' clickedItem';\n    } else {\n      nextClass = ' unClickedItem';\n    }\n  };\n\n  const logoDetector = fileName => {\n    if (fileName.includes('.js')) {\n      return JsLogoSvg;\n    } else if (fileName.includes('.env')) {\n      return SliderSvg;\n    } else if (!fileName.includes('.')) {\n      return FolderSvg;\n    } else if (fileName.includes('.scss')) {\n      return SassSvg;\n    } else return FileSvg;\n  };\n\n  const onClickHandler = e => {\n    let clickedItem = props.data.clickedItem;\n    let filePath = clickPathGenerator(e.currentTarget.name, props.data.path);\n\n    if (props.data.clickedItem === filePath) {\n      props.setStateHandler('clickedItem', '');\n    } else {\n      props.setStateHandler('clickedItem', filePath);\n      props.setStateHandler('path', filePath);\n    }\n  };\n\n  let renderDir = props.data.files.map(item => {\n    return __jsx(\"div\", {\n      key: item,\n      className: \"dirItem\"\n    }, __jsx(\"button\", {\n      // ref={() => selectedItem.current[props.data.files.indexOf(item)]}\n      className: [classGenerator(item)],\n      key: item,\n      name: item,\n      onClick: e => onClickHandler(e) // onDoubleClick={(e) => onDoubleClickHandler(e)}\n      // onContextMenu={(e) => onContextMenuHandler(e)}\n\n    }, __jsx(\"img\", {\n      className: \"fontawesomeSvgLarge\",\n      src: logoDetector(item),\n      alt: \"\"\n    })), __jsx(\"p\", null, \" \", item));\n  });\n  return __jsx(\"div\", {\n    className: \"FileManagerArea\"\n  }, renderDir);\n};\n\nexport default withRouter(FileManagerArea); // <buttonref={() => selectedItem.current[props.data.files.indexOf(item)]}\n// className={[fileLogoDetector(item)]} key={item} name={item} onClick={(e) => onClickHandler(e)}\n// onDoubleClick={(e) => onDoubleClickHandler(e)} onContextMenu={(e) => onContextMenuHandler(e)}/>","map":null,"metadata":{},"sourceType":"module"}