{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from \"../../../context/AppContext\";\nimport Link from \"next/link\";\nimport { convertVariableNameToName } from '../../../_variables/_variables';\nimport axios from \"axios\";\nimport SortUpSvg from '../../../static/images/fontawesome/sort-up-solid.svg';\nimport SortDownSvg from '../../../static/images/fontawesome/sort-down-solid.svg';\n\nvar SideBar = function SideBar(props) {\n  var contextData = useContext(AppContext);\n\n  var _useState = useState({\n    Dashboard: {\n      pathURL: '/admin',\n      subItems: []\n    },\n    Posts: {\n      pathURL: '/admin/posts',\n      subItems: []\n    },\n    FileManager: {\n      pathURL: '/admin/fileManager',\n      subItems: []\n    },\n    Comments: {\n      pathURL: '/admin/comments',\n      subItems: []\n    },\n    Contacts: {\n      pathURL: '/admin/contacts',\n      subItems: []\n    },\n    Design: {\n      pathURL: '/admin/design',\n      subItems: ['topBar', 'header', 'navigation', 'widgets', 'postPage', 'footer', 'customStyle']\n    },\n    Users: {\n      pathURL: '/admin/users',\n      subItems: []\n    },\n    Tools: {\n      pathURL: '/admin/tools',\n      subItems: ['terminal']\n    },\n    Settings: {\n      pathURL: '/admin/settings',\n      subItems: ['customScript']\n    }\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(''),\n      hovered = _useState2[0],\n      setHovered = _useState2[1]; // const generateFakeData = ()=>{\n  //     // const body = {\n  //     //     type: \"Video\",\n  //     //     size: 1000,\n  //     //     pageNo: 1,\n  //     //     fields: [\"author\", \"title\", \"imageUrl\", \"status\", \"actors\", \"tags\", \"categories\"],\n  //     //     status: \"All\",\n  //     //     author: \"All\",\n  //     //     keyword: \"\"\n  //     // };\n  //     axios.post('http://localhost:4200/server/posts/admin-postsForTest').then(res => {\n  //         const posts = res.data.posts;\n  //         posts.forEach( async post=>{\n  //             let data={\n  //                 title :post.title.en,\n  //                 categories : post.categories,\n  //                 comments :post.comments,\n  //                 actors :post.actors ,\n  //                 tags :post.tags ,\n  //                 author :'5e322f0f8b2a0637dc3b6a16',\n  //                 description : post.description.en,\n  //                 disLikes : 0,\n  //                 mainThumbnail:post.imageUrl,\n  //                 videoTrailerUrl :post.imagePreviewUrl,\n  //                 videoEmbedCode:post.iframe,\n  //                 likes : 0,\n  //                 duration:post.duration,\n  //                 quality : post.quality,\n  //                 status : 'published',\n  //                 postType : \"video\",\n  //                 sourceSite : \"Xhamster\",\n  //                 views : 0,\n  //                 lastModify:Date.now()\n  //             };\n  //\n  //             // let dataToSave = {\n  //             //     title:post.title.en,\n  //             //     author:'5e322f0f8b2a0637dc3b6a16',\n  //             //     categories:post.categories,\n  //             //     actors:post.actors,\n  //             //     tags:post.tags,\n  //             //     mainThumbnail:post.imageUrl,\n  //             //     status:post.status,\n  //             //     type:post.type\n  //             // };\n  //             await contextData.functions.savePosts(data)\n  //             // console.log(post. )\n  //         })\n  //\n  //     })\n  // };\n\n\n  var renderItems = Object.keys(state).map(function (item) {\n    var onHoverHandler = state[item].subItems.map(function (subItem) {\n      if (hovered === item) {\n        return __jsx(Link, {\n          href: state[item].pathURL + '/' + subItem\n        }, __jsx(\"a\", {\n          className: \"SideBarItem-SubItem\"\n        }, convertVariableNameToName(subItem)));\n      } else return null;\n    });\n\n    var RenderArrowsForSubMenus = function RenderArrowsForSubMenus() {\n      if (state[item].subItems.length > 0) {\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            return hovered === item ? setHovered('') : setHovered(item);\n          }\n        }, __jsx(\"img\", {\n          className: \"fontawesomeSvgVerySmall\",\n          src: hovered === item ? SortUpSvg : SortDownSvg,\n          alt: \"\"\n        }));\n      } else return null;\n    };\n\n    return __jsx(\"div\", {\n      key: item,\n      className: \"SideBarItemElement\"\n    }, __jsx(\"div\", {\n      className: \"SideBarItemTitle\",\n      onMouseOver: function onMouseOver() {\n        return setHovered(item);\n      }\n    }, __jsx(Link, {\n      href: state[item].pathURL\n    }, __jsx(\"a\", {\n      className: \"SideBarItem\"\n    }, convertVariableNameToName(item))), __jsx(RenderArrowsForSubMenus, null)), __jsx(\"div\", {\n      className: \"SideBarItemElementSubItems\"\n    }, onHoverHandler));\n  });\n\n  if (contextData.settings.adminPanelSideBar) {\n    return __jsx(\"div\", {\n      className: \"SideBar\"\n    }, renderItems);\n  } else return null;\n};\n\nexport default SideBar;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/components/adminIncludes/SideBar/SideBar.js"],"names":["React","useContext","useState","AppContext","Link","convertVariableNameToName","axios","SortUpSvg","SortDownSvg","SideBar","props","contextData","Dashboard","pathURL","subItems","Posts","FileManager","Comments","Contacts","Design","Users","Tools","Settings","state","setState","hovered","setHovered","renderItems","Object","keys","map","item","onHoverHandler","subItem","RenderArrowsForSubMenus","length","settings","adminPanelSideBar"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport Link from \"next/link\";\r\nimport {convertVariableNameToName} from '../../../_variables/_variables'\r\nimport axios from \"axios\";\r\nimport SortUpSvg from '../../../static/images/fontawesome/sort-up-solid.svg'\r\nimport SortDownSvg from '../../../static/images/fontawesome/sort-down-solid.svg'\r\n\r\nconst SideBar = props => {\r\n    const contextData = useContext(AppContext);\r\n\r\n    const [ state, setState ] = useState({\r\n        Dashboard: {\r\n            pathURL: '/admin',\r\n            subItems: []\r\n        },\r\n        Posts: {\r\n            pathURL: '/admin/posts',\r\n            subItems: []\r\n        },\r\n        FileManager: {\r\n            pathURL: '/admin/fileManager',\r\n            subItems: []\r\n        },\r\n        Comments: {\r\n            pathURL: '/admin/comments',\r\n            subItems: []\r\n        },\r\n        Contacts: {\r\n            pathURL: '/admin/contacts',\r\n            subItems: []\r\n        },\r\n        Design: {\r\n            pathURL: '/admin/design',\r\n            subItems: [ 'topBar','header','navigation','widgets','postPage','footer','customStyle' ]\r\n        },\r\n        Users: {\r\n            pathURL: '/admin/users',\r\n            subItems: []\r\n        },\r\n        Tools: {\r\n            pathURL: '/admin/tools',\r\n            subItems: ['terminal']\r\n        },\r\n        Settings: {\r\n            pathURL: '/admin/settings',\r\n            subItems: ['customScript']\r\n        }\r\n    })\r\n\r\n    const [ hovered, setHovered ] = useState('')\r\n\r\n    // const generateFakeData = ()=>{\r\n    //     // const body = {\r\n    //     //     type: \"Video\",\r\n    //     //     size: 1000,\r\n    //     //     pageNo: 1,\r\n    //     //     fields: [\"author\", \"title\", \"imageUrl\", \"status\", \"actors\", \"tags\", \"categories\"],\r\n    //     //     status: \"All\",\r\n    //     //     author: \"All\",\r\n    //     //     keyword: \"\"\r\n    //     // };\r\n    //     axios.post('http://localhost:4200/server/posts/admin-postsForTest').then(res => {\r\n    //         const posts = res.data.posts;\r\n    //         posts.forEach( async post=>{\r\n    //             let data={\r\n    //                 title :post.title.en,\r\n    //                 categories : post.categories,\r\n    //                 comments :post.comments,\r\n    //                 actors :post.actors ,\r\n    //                 tags :post.tags ,\r\n    //                 author :'5e322f0f8b2a0637dc3b6a16',\r\n    //                 description : post.description.en,\r\n    //                 disLikes : 0,\r\n    //                 mainThumbnail:post.imageUrl,\r\n    //                 videoTrailerUrl :post.imagePreviewUrl,\r\n    //                 videoEmbedCode:post.iframe,\r\n    //                 likes : 0,\r\n    //                 duration:post.duration,\r\n    //                 quality : post.quality,\r\n    //                 status : 'published',\r\n    //                 postType : \"video\",\r\n    //                 sourceSite : \"Xhamster\",\r\n    //                 views : 0,\r\n    //                 lastModify:Date.now()\r\n    //             };\r\n    //\r\n    //             // let dataToSave = {\r\n    //             //     title:post.title.en,\r\n    //             //     author:'5e322f0f8b2a0637dc3b6a16',\r\n    //             //     categories:post.categories,\r\n    //             //     actors:post.actors,\r\n    //             //     tags:post.tags,\r\n    //             //     mainThumbnail:post.imageUrl,\r\n    //             //     status:post.status,\r\n    //             //     type:post.type\r\n    //             // };\r\n    //             await contextData.functions.savePosts(data)\r\n    //             // console.log(post. )\r\n    //         })\r\n    //\r\n    //     })\r\n    // };\r\n\r\n    const renderItems = Object.keys(state).map(item => {\r\n\r\n        const onHoverHandler = state[item].subItems.map(subItem => {\r\n            if (hovered === item) {\r\n                return (\r\n                    <Link href={ state[item].pathURL + '/' + subItem }><a className='SideBarItem-SubItem'>{ convertVariableNameToName(subItem) }</a></Link>\r\n                )\r\n            } else return null\r\n\r\n        })\r\n\r\n        const RenderArrowsForSubMenus = ()=>{\r\n            if (state[item].subItems.length>0){\r\n                return(\r\n                    <button onClick={ () => hovered === item ? setHovered('') : setHovered(item) }><img className='fontawesomeSvgVerySmall' src={ hovered === item ? SortUpSvg : SortDownSvg  } alt=\"\"/></button>\r\n                )\r\n            }else return null\r\n        }\r\n\r\n        return (\r\n            <div key={ item } className='SideBarItemElement'>\r\n                <div className='SideBarItemTitle' onMouseOver={ () => setHovered(item) }>\r\n                    <Link href={ state[item].pathURL }><a className='SideBarItem' >{ convertVariableNameToName(item)  }</a></Link>\r\n                     <RenderArrowsForSubMenus/>\r\n                </div>\r\n                <div className='SideBarItemElementSubItems'>\r\n                    { onHoverHandler }\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    if (contextData.settings.adminPanelSideBar) {\r\n        return (\r\n            <div className='SideBar'>\r\n                { renderItems }\r\n                {/*<button onClick={()=>generateFakeData()}>take fake data</button>*/ }\r\n            </div>\r\n        );\r\n    } else return null\r\n};\r\nexport default SideBar;"]},"metadata":{},"sourceType":"module"}