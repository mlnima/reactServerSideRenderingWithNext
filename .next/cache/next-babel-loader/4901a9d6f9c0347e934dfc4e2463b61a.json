{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Link from \"next/link\";\nimport FA from 'react-fontawesome';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport BarsSvg from '../../../../static/images/fontawesome/bars-solid.svg'; // import  BarsIcon from '../../../../styles/icons/bars-solid.svg'\n\nvar Navigation = function Navigation(props) {\n  var contextData = useContext(AppContext);\n  var navigation = useRef(null);\n  var navigationMobileBtn = useRef(null);\n\n  var _useState = useState({\n    isOpen: false,\n    items: []\n  }),\n      navigationData = _useState[0],\n      setNavigationData = _useState[1];\n\n  useEffect(function () {\n    if (window.innerWidth < 768) {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: false\n      }));\n    } else {\n      setNavigationData(_objectSpread({}, navigationData, {\n        isOpen: true\n      }));\n    }\n  }, []);\n  useEffect(function () {\n    if (navigation.current) {\n      if (navigationData.isOpen) {\n        navigation.current.style.display = 'flex';\n        navigationMobileBtn.current.style.transform = 'rotate(-90deg)';\n      } else {\n        navigation.current.style.display = 'none';\n        navigationMobileBtn.current.style.transform = 'rotate(0deg)';\n      }\n    }\n  }, [navigationData.isOpen]);\n  useEffect(function () {\n    setNavigationData(function (navigationData) {\n      return _objectSpread({}, navigationData, {\n        items: contextData.navigationData || []\n      });\n    });\n  }, [contextData.navigationData]);\n\n  var onNavigationMobileBtnClickHandler = function onNavigationMobileBtnClickHandler() {\n    navigationData.isOpen ? setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: false\n    })) : setNavigationData(_objectSpread({}, navigationData, {\n      isOpen: true\n    }));\n  };\n\n  var renderNavigationItems = contextData.navigationData.map(function (item) {\n    return __jsx(Link, {\n      key: item.title,\n      href: item.url\n    }, __jsx(\"a\", null, item.title));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    ref: navigationMobileBtn,\n    className: \"navigationMobileBtn\",\n    onClick: function onClick() {\n      return onNavigationMobileBtnClickHandler();\n    }\n  }, \"   \", __jsx(\"img\", {\n    className: \"fontawesomeSvgMedium\",\n    src: BarsSvg,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    ref: navigation,\n    className: \"Navigation\"\n  }, renderNavigationItems));\n};\n\nexport default Navigation;","map":null,"metadata":{},"sourceType":"module"}