{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { AppContext } from \"../../../../context/AppContext\";\nimport FA from \"react-fontawesome\";\n\nconst PostCategoriesTagsActors = props => {\n  let newItemsElement = useRef(null);\n\n  const deleteItem = e => {\n    const deletedItemFromType = props.postData[props.type].filter(i => {\n      return i !== e.currentTarget.name;\n    });\n    props.onPostMetaChangeHandler(props.type, deletedItemFromType);\n  };\n\n  const addNewItem = () => {\n    if (newItemsElement.current.value.includes(',')) {\n      let newItems = newItemsElement.current.value.split(',');\n      const addedItemFromType = [...props.postData[props.type], ...newItems.map(item => item.trim())];\n      props.onPostMetaChangeHandler(props.type, addedItemFromType);\n    } else {\n      const addedItemFromType = [...props.postData[props.type], newItemsElement.current.value.trim()];\n      props.onPostMetaChangeHandler(props.type, addedItemFromType);\n    }\n  };\n\n  const addedItems = props.postData[props.type].map(item => {\n    let icon = props.type === 'tags' ? 'tags' : props.type === 'actors' ? 'star' : props.type === 'categories' ? 'folder' : '';\n    return __jsx(\"div\", {\n      key: item,\n      className: \"item\"\n    }, __jsx(\"p\", null, item), __jsx(\"button\", {\n      name: item,\n      onClick: e => deleteItem(e)\n    }, __jsx(FA, {\n      className: \"fontawesomeMedium\",\n      name: \"times\"\n    })));\n  });\n  return __jsx(\"div\", {\n    className: \"PostCategoriesTagsActors\"\n  }, __jsx(\"div\", {\n    className: \"addNewTag\"\n  }, __jsx(\"input\", {\n    ref: newItemsElement,\n    type: \"text\"\n  }), __jsx(\"button\", {\n    className: \"addBtn\",\n    onClick: () => addNewItem()\n  }, \" Add\")), __jsx(\"span\", {\n    className: \"small-info\"\n  }, \"Separate tags with commas\"), __jsx(\"div\", {\n    className: \"items\"\n  }, addedItems));\n};\n\nexport default PostCategoriesTagsActors;","map":null,"metadata":{},"sourceType":"module"}