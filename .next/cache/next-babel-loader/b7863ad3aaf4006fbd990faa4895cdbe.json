{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\nimport { getSetting } from \"../../../../_variables/ajaxVariables\";\n\nconst navigation = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    type: 'navigation',\n    items: []\n  });\n  useEffect(() => {\n    getSetting(state.type).then(res => {\n      if (res.data.setting) {\n        setState(_objectSpread({}, state, {\n          items: res.data.setting.items || []\n        }));\n      }\n    });\n  }, []);\n\n  const onSaveChangesHandler = () => {};\n\n  const onAddItemHandler = () => {};\n\n  const renderItems = state.items.map(item => {\n    return __jsx(\"div\", null, __jsx(\"p\", null, item.title));\n  });\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    id: \"navigation-setting\"\n  }, __jsx(\"form\", {\n    className: \"add-navigation-item-form\"\n  }, __jsx(\"p\", null, \"Title :\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\"\n  }), __jsx(\"p\", null, \"Url :\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"url\"\n  }), __jsx(\"select\", null, __jsx(\"option\", {\n    value: \"footer\"\n  }, \"Footer\"), __jsx(\"option\", {\n    value: \"header\"\n  }, \"Header\")), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Add\")), __jsx(\"div\", null, renderItems), __jsx(\"button\", {\n    onClick: () => onSaveChangesHandler()\n  }, \"Save\")));\n};\n\nexport default navigation;","map":{"version":3,"sources":["G:/Dev Project/reactServerSideRenderingWithNext/pages/admin/settings/navigation/index.js"],"names":["React","useEffect","useState","useContext","AdminLayout","getSetting","navigation","props","state","setState","type","items","then","res","data","setting","onSaveChangesHandler","onAddItemHandler","renderItems","map","item","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,UAAT,QAA2B,sCAA3B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,YAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAApC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACG,KAAK,CAACE,IAAP,CAAV,CAAuBE,IAAvB,CAA4BC,GAAG,IAAI;AAC/B,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClBN,QAAAA,QAAQ,mBACDD,KADC;AAEJG,UAAAA,KAAK,EAAEE,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBJ,KAAjB,IAA0B;AAF7B,WAAR;AAIH;AACJ,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMK,oBAAoB,GAAG,MAAM,CAElC,CAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM,CAE9B,CAFD;;AAIJ,QAAMC,WAAW,GAAGV,KAAK,CAACG,KAAN,CAAYQ,GAAZ,CAAgBC,IAAI,IAAE;AACtC,WACI,mBACI,iBAAIA,IAAI,CAACC,KAAT,CADJ,CADJ;AAKH,GANmB,CAApB;AAQI,SACI,MAAC,WAAD,QACI;AAAK,IAAA,EAAE,EAAC;AAAR,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI,2BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC;AAAxB,IAFJ,EAGI,yBAHJ,EAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC;AAAxB,IAJJ,EAKI,sBACI;AAAQ,IAAA,KAAK,EAAC;AAAd,cADJ,EAEI;AAAQ,IAAA,KAAK,EAAC;AAAd,cAFJ,CALJ,EASI;AAAQ,IAAA,IAAI,EAAC;AAAb,WATJ,CADJ,EAYI,mBACKH,WADL,CAZJ,EAeI;AAAQ,IAAA,OAAO,EAAE,MAAIF,oBAAoB;AAAzC,YAfJ,CADJ,CADJ;AAqBH,CAtDD;;AAuDA,eAAeV,UAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AdminLayout from \"../../../../components/layouts/AdminLayout\";\r\nimport { getSetting } from \"../../../../_variables/ajaxVariables\";\r\n\r\nconst navigation = props => {\r\n    const [ state, setState ] = useState({\r\n        type: 'navigation',\r\n        items: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSetting(state.type).then(res => {\r\n            if (res.data.setting) {\r\n                setState({\r\n                    ...state,\r\n                    items: res.data.setting.items || []\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const onSaveChangesHandler = () => {\r\n\r\n    };\r\n\r\n    const onAddItemHandler = () => {\r\n\r\n    };\r\n\r\nconst renderItems = state.items.map(item=>{\r\n    return(\r\n        <div>\r\n            <p>{item.title}</p>\r\n        </div>\r\n    )\r\n})\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div id='navigation-setting'>\r\n                <form className='add-navigation-item-form'>\r\n                    <p>Title :</p>\r\n                    <input type=\"text\" name='title'/>\r\n                    <p>Url :</p>\r\n                    <input type=\"text\" name='url'/>\r\n                    <select>\r\n                        <option value='footer'>Footer</option>\r\n                        <option value='header'>Header</option>\r\n                    </select>\r\n                    <button type='submit'>Add</button>\r\n                </form>\r\n                <div>\r\n                    {renderItems}\r\n                </div>\r\n                <button onClick={()=>onSaveChangesHandler()}>Save</button>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default navigation;"]},"metadata":{},"sourceType":"module"}