{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from \"../context/AppContext\";\nimport AppLayout from \"../components/layouts/AppLayout\";\nimport Widget from \"../components/includes/Widget/Widget\";\nimport Posts from \"../components/includes/Posts/Posts\";\nimport withRouter from \"next/dist/client/with-router\";\nimport { getPosts } from \"../_variables/ajaxPostsVariables\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { getSetting, getWidgets, getWidgetsWithData } from \"../_variables/ajaxVariables\";\nimport Text from '../components/includes/Widget/WidgetsModelsComponents/Text/Text';\nimport PaginationComponent from '../components/includes/PaginationComponent/PaginationComponent';\nimport SiteSettingSetter from '../components/includes/SiteSettingsSetter/SiteSettingsSetter';\nimport WidgetsRenderer from '../components/includes/WidgetsRenderer/WidgetsRenderer';\nimport SideBar from '../components/includes/SideBar/SideBar';\nimport H1Renderer from '../components/includes/H1Renderer/H1Renderer';\n\nconst Home = props => {\n  const contextData = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: props.identity.title || '',\n    themeColor: props.identity.themeColor || '',\n    description: props.identity.description || '',\n    keywords: props.identity.keywords || [],\n    homePageH1: props.identity.homePageH1 || 'H1 element',\n    style: {}\n  });\n  useEffect(() => {\n    console.log(props);\n\n    if (props.identity.homePageSidebar) {\n      setState({\n        style: {\n          gridArea: 'content'\n        }\n      });\n    }\n  }, [props]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(SiteSettingSetter, props), __jsx(\"div\", {\n    style: state.style,\n    className: props.identity.homePageSidebar ? 'content withSidebar' : 'content withOutSidebar'\n  }, __jsx(\"div\", {\n    className: \"HomePage\"\n  }, __jsx(H1Renderer, {\n    text: props.identity.homePageH1\n  }), __jsx(WidgetsRenderer, {\n    widgets: props.widgets,\n    position: \"home\"\n  })), __jsx(SideBar, {\n    isActive: props.identity.homePageSidebar,\n    widgets: props.widgets,\n    position: \"homePageSidebar\"\n  }))));\n};\n\nHome.getInitialProps = async ({\n  pathname,\n  query,\n  req,\n  res,\n  err\n}) => {\n  let navigation;\n  let identity;\n  let widgets;\n\n  try {\n    const identityData = await getSetting('identity');\n    const navigationData = await getSetting('navigation');\n    const widgetsData = await getWidgetsWithData('all');\n    identity = identityData.data.setting ? identityData.data.setting.data : {};\n    navigation = navigationData.data.setting ? navigationData.data.setting : {};\n    widgets = widgetsData.data.widgets ? widgetsData.data.widgets : [];\n  } catch (e) {\n    console.error(e);\n  }\n\n  return {\n    identity,\n    navigation,\n    widgets\n  };\n};\n\nexport default withRouter(Home);","map":null,"metadata":{},"sourceType":"module"}