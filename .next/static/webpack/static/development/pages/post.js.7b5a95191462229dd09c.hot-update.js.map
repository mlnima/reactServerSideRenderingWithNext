{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.7b5a95191462229dd09c.hot-update.js","sources":["webpack:///./components/includes/Post/PostInfo/PostInfo.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport TagsAndCategoriesActors from \"../TagsAndCategoriesActors/TagsAndCategoriesActors\";\r\nimport FA from 'react-fontawesome'\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport { likeValueCalculator } from \"../../../../_variables/_variables\";\r\nimport { likeDislikeView } from \"../../../../_variables/ajaxPostsVariables\";\r\nimport DownloadLink from \"../DownloadLink/DownloadLink\";\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    InstapaperIcon,\r\n    LineIcon,\r\n    LinkedinIcon,\r\n    LivejournalIcon,\r\n    MailruIcon,\r\n    OKIcon,\r\n    PinterestIcon,\r\n    PocketIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    ViberIcon,\r\n    VKIcon,\r\n    WhatsappIcon,\r\n    WorkplaceIcon,\r\n} from \"react-share\";\r\nimport * as socialShare from \"react-share\"\r\nconst PostInfo = props => {\r\n    const [ state, setState ] = useState({\r\n        likeValue: 0,\r\n\r\n    });\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            likeValue: likeValueCalculator(props.likes, props.disLikes)\r\n        });\r\n\r\n        likeDislikeView(props.id, 'views')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(props.likes, props.disLikes)\r\n        console.log(likeValueCalculator(1, 1))\r\n    }, [ state ]);\r\n    return (\r\n        <div className='post-info'>\r\n            <div className=\"share\">\r\n                <socialShare.FacebookShareButton\r\n                    url={window.location.href}\r\n                    // quote={props.joke.setup + props.joke.punchline}\r\n                    // hashtag=\"#programing joke\"\r\n                >\r\n                    <socialShare.FacebookIcon size={40} logoFillColor=\"white\" />\r\n                </socialShare.FacebookShareButton>\r\n                <TwitterShareButton url={window.location.href}>\r\n                    <TwitterIcon size={40} logoFillColor=\"white\" />\r\n                </TwitterShareButton>\r\n                <TelegramShareButton url={window.location.href}>\r\n                    <TelegramIcon size={40} logoFillColor=\"white\" />\r\n                </TelegramShareButton>\r\n                <RedditShareButton url={window.location.href}>\r\n                    <RedditIcon size={40} logoFillColor=\"white\" />\r\n                </RedditShareButton>\r\n                <VKShareButton url={window.location.href}>\r\n                    <VKIcon size={40} logoFillColor=\"white\" />\r\n                </VKShareButton>\r\n                <ViberShareButton url={window.location.href}>\r\n                    <ViberIcon size={40}  logoFillColor=\"white\" />\r\n                </ViberShareButton>\r\n                <WhatsappShareButton url={window.location.href}>\r\n                    <WhatsappIcon size={40} logoFillColor=\"white\" />\r\n                </WhatsappShareButton>\r\n                <LinkedinShareButton url={window.location.href}>\r\n                    <LinkedinIcon size={40} logoFillColor=\"white\" />\r\n                </LinkedinShareButton>\r\n                <TumblrShareButton url={window.location.href}>\r\n                    <TumblrIcon size={40} logoFillColor=\"white\" />\r\n                </TumblrShareButton>\r\n                <EmailShareButton url={window.location.href}>\r\n                    <EmailIcon size={40} logoFillColor=\"white\" />\r\n                </EmailShareButton>\r\n                <InstapaperShareButton url={window.location.href}>\r\n                    <InstapaperIcon size={40} logoFillColor=\"white\" />\r\n                </InstapaperShareButton>\r\n                <LineShareButton url={window.location.href}>\r\n                    <LineIcon size={40} logoFillColor=\"white\" />\r\n                </LineShareButton>\r\n                <LivejournalShareButton url={window.location.href}>\r\n                    <LivejournalIcon size={40} logoFillColor=\"white\" />\r\n                </LivejournalShareButton>\r\n                <MailruShareButton url={window.location.href}>\r\n                    <MailruIcon size={40} logoFillColor=\"white\" />\r\n                </MailruShareButton>\r\n                <OKShareButton url={window.location.href}>\r\n                    <OKIcon size={40} logoFillColor=\"white\" />\r\n                </OKShareButton>\r\n                <OKShareButton url={window.location.href}>\r\n                    <OKIcon size={40} logoFillColor=\"white\" />\r\n                </OKShareButton>\r\n                <PinterestShareButton url={window.location.href}>\r\n                    <PinterestIcon size={40} logoFillColor=\"white\" />\r\n                </PinterestShareButton>\r\n                <PocketShareButton url={window.location.href}>\r\n                    <PocketIcon size={40} logoFillColor=\"white\" />\r\n                </PocketShareButton>\r\n                <WorkplaceShareButton url={window.location.href}>\r\n                    <WorkplaceIcon size={40} logoFillColor=\"white\" />\r\n                </WorkplaceShareButton>\r\n            </div>\r\n\r\n            <div className='post-info-head'>\r\n                <h1>{ props.title }</h1>\r\n                <div className=\"like\">\r\n                    <button  onClick={ e => {\r\n                        likeDislikeView(props.id, 'likes')\r\n                    } }><FA className='fontawesomeMedium' name=\"thumbs-up\"/></button>\r\n                    <button  onClick={ e => {\r\n                        likeDislikeView(props.id, 'disLikes')\r\n                    } }><FA className='fontawesomeMedium' name=\"thumbs-down\"/></button>\r\n                </div>\r\n            </div>\r\n            <div className='post-info-body'>\r\n                <div className=\"views\">\r\n                    <DownloadLink downloadLink={ props.videoEmbedCode }/>\r\n                    <span>{ props.views } views</span>\r\n                    <ProgressBar value={ state.likeValue } percent={false}/>\r\n                    <div className='post-rate'>\r\n                        <div>\r\n                            { state.likeValue } %\r\n                        </div>\r\n                        <div className='like-disLike-count'>\r\n                        <span className='like-disLike-count-items'>\r\n                            <FA className='fontawesomeMedium' name=\"thumbs-up\"/>\r\n                            { props.likes }\r\n                        </span>\r\n                            <span  className='like-disLike-count-items'>\r\n                            <FA className='fontawesomeMedium' name=\"thumbs-down\"/>\r\n                                { props.disLikes }\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"meta-description\">\r\n                    <div className=\"description\">{ props.description }</div>\r\n                    <TagsAndCategoriesActors type='actors' data={ props.actors }/>\r\n                    <TagsAndCategoriesActors type='tags' data={ props.tags }/>\r\n                    <TagsAndCategoriesActors type='categories' data={ props.categories }/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PostInfo;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAsCA;AACA;AAAA;AAAA;AAEA;AADA;AADA;AAAA;AACA;AAIA;AACA;AAEA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAJA;AAKA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}