{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.b9f860aaa1f5c12a84f5.hot-update.js","sources":["webpack:///./components/includes/Post/TagsAndCategoriesActors/TagsAndCategoriesActors.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport Link from \"next/link\";\r\nimport FA from 'react-fontawesome'\r\n\r\nconst TagsAndCategoriesActors = props => {\r\n    const [ state, setState ] = useState({\r\n        data: props.data || [],\r\n        type: props.type || 'tags',\r\n        fontawesome: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        let fontawesome = '';\r\n        switch ( props.type ) {\r\n            case 'actors':\r\n                fontawesome = 'star'\r\n                break\r\n            case 'tags':\r\n                fontawesome = 'tags'\r\n                break\r\n            case 'categories':\r\n                fontawesome = 'cat'\r\n                break\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            fontawesome\r\n        })\r\n    }, []);\r\n\r\n    const renderData = state.data.map(item => {\r\n        const path = '/' + state.type + '/' + item;\r\n        return (\r\n            <Link href={ path } key={ item }><a className={ state.type }>{ item }</a></Link>\r\n        )\r\n    });\r\n\r\n    if (props.data.length > 1) {\r\n        return (\r\n            <div className={ state.type + ' tags-categories-actors' }>\r\n                <span><FA className='fontawesomeMedium' name={ state.fontawesome }/> { state.type.charAt(0).toUpperCase() + state.type.substring(1) }:</span>\r\n                <div className=\"content\">\r\n                    { renderData }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\nexport default TagsAndCategoriesActors;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AAEA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAEA;AACA;AAAA;;;;A","sourceRoot":""}