{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.f7c97a006f1457db57ef.hot-update.js","sources":["webpack:///./components/includes/Posts/Posts.js","webpack:///./components/includes/Sidebar/Sidebar.js","webpack:///./components/includes/VideoElement/VideoElement.js","webpack:///./components/includes/Widget/Widget.js","webpack:///./components/includes/Widget/WidgetFooter/WidgetFooter.js","webpack:///./components/includes/Widget/WidgetHeader/WidgetHeader.js","webpack:///./components/includes/Widget/WidgetPagination/WidgetPagination.js","webpack:///./components/includes/Widget/WidgetText/WidgetText.js","webpack:///./components/includes/Widget/WidgetsModelsComponents/Text/Text.js","webpack:///./components/includes/WidgetsRenderer/WidgetsRenderer.js","webpack:///./pages/post/index.js"],"sourcesContent":["import React, { Component, useEffect, useState, useContext } from 'react';\r\n\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport VideoElement from \"../VideoElement/VideoElement\";\r\n\r\nimport withRouter from \"next/dist/client/with-router\";\r\n\r\n\r\nconst Posts = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ postsData, setPostsData ] = useState({\r\n        pageNo: 1,\r\n        size: 12,\r\n        totalPosts: 0,\r\n        postType: 'all',\r\n        keyword: '',\r\n        status: 'all',\r\n        author: 'all',\r\n        fields: [ 'title', 'mainThumbnail', 'quality', 'likes', 'disLikes', 'views', 'duration' ],\r\n        checkedPosts: [],\r\n    });\r\n    const [ posts, setPosts ] = useState([]);\r\n\r\n\r\n    const renderPosts = props.posts.map(post => {\r\n        return (\r\n            <VideoElement key={ post._id } state={ post }/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='Videos'>\r\n            <div className='videoContent'>\r\n                { renderPosts }\r\n            </div>\r\n            {/*<Pagination { ...props } postsData={ postsData } setPostsData={ setPostsData }/>*/ }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Posts)","import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport WidgetsRenderer from '../WidgetsRenderer/WidgetsRenderer'\r\n\r\nconst Sidebar = props => {\r\n\r\n    if (props.isActive){\r\n    return (\r\n        <aside id='site-sidebar'>\r\n            <WidgetsRenderer {...props} />\r\n        </aside>\r\n    );\r\n    }else return null;\r\n};\r\nexport default Sidebar;\r\n","import React, {useState, useContext, useRef, useEffect} from 'react';\r\n\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport Link from \"next/link\";\r\n// import {Link} from \"react-router-dom\";\r\nimport {AppContext} from \"../../../context/AppContext\";\r\n// import {withRouter} from \"react-router-dom\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport FA  from 'react-fontawesome'\r\n// import {deletedVideoAutoRemover} from \"../../../variables/ajaxRequestVariables\";\r\n\r\nconst VideoElement = props => {\r\n    let qualityLabel = useRef(null);\r\n    let durationLabel = useRef(null);\r\n    let viewLabel = useRef(null);\r\n    let element = useRef(null)\r\n    let videoElement = useRef(null)\r\n    let contextData = useContext(AppContext);\r\n    let path = '/post/' + props.state._id + '/' + props.state.title;\r\n\r\n    let [state, setState] = useState({\r\n            isHover: false,\r\n            isWatched: false\r\n        });\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     console.log( props.state)\r\n    // },[ ]);\r\n    useEffect(() => {\r\n        hoverCleaner()\r\n    }, [state.isHover]);\r\n    useEffect(() => {\r\n        if (contextData.state.videoPreviewID !== props.state._id) {\r\n            setState({\r\n                ...state,\r\n                isHover: false\r\n            })\r\n        }\r\n    }, [contextData.state.videoPreviewID]);\r\n\r\n    let isHoverHandler = () => {\r\n        if (props.state.videoTrailerUrl){\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                videoPreviewID: props.state._id\r\n            });\r\n            state.isHover ? setState({...state, isHover: false}) : setState({...state, isHover: true})\r\n        }\r\n\r\n    };\r\n    const hoverCleaner = () => {\r\n        if (props.state.videoTrailerUrl){\r\n            if (state.isHover) {\r\n                qualityLabel.current.style.visibility = 'hidden';\r\n                durationLabel.current.style.visibility = 'hidden';\r\n                viewLabel.current.style.visibility = 'hidden';\r\n            } else {\r\n                qualityLabel.current.style.visibility = 'visible';\r\n                durationLabel.current.style.visibility = 'visible';\r\n                viewLabel.current.style.visibility = 'visible';\r\n            }\r\n        }\r\n    };\r\n    const imageContent = () => {\r\n        let dataToRender = () => {\r\n            if (state.isHover && props.state._id === contextData.state.videoPreviewID && props.state.videoTrailerUrl) {\r\n                return (\r\n                    <video ref={videoElement} src={props.state.videoTrailerUrl} autoPlay={true} loop={true}\r\n                           onMouseOut={e => {\r\n\r\n                               isHoverHandler()\r\n\r\n                           }}\r\n                    />)\r\n\r\n            } else if (!state.isHover) {\r\n                return (<img src={props.state.mainThumbnail} alt={props.state.title} onError={err=>{\r\n                    // deletedVideoAutoRemover(props.state)\r\n                    console.log( props.state)\r\n                }} onMouseEnter={() =>\r\n\r\n                    isHoverHandler()\r\n\r\n                }/>)\r\n            }\r\n        };\r\n        return dataToRender()\r\n    };\r\n    const VideoPreviewMobileBtnLogo = () => {\r\n        let element = <i className=\"fas fa-fast-forward\"/>\r\n        if (state.isHover) {\r\n            element = <i className=\"fas fa-stop\"/>\r\n        } else {\r\n            element = <i className=\"fas fa-fast-forward\"/>\r\n        }\r\n        return element\r\n    };\r\n    const MobilePreviewBtn = ()=>{\r\n        if (props.state.videoTrailerUrl){\r\n            return (\r\n                <button className='videoPreviewMobile' onClick={() => {\r\n                    contextData.dispatchState({\r\n                        ...contextData.state,\r\n                        videoPreviewID: props.state._id\r\n                    });\r\n                    state.isHover ? setState({...state, isHover: false}) : setState({...state, isHover: true})\r\n                }}>   <VideoPreviewMobileBtnLogo/>  </button>\r\n            )\r\n        }else return null\r\n\r\n    }\r\n    return (\r\n        < div ref={element} className='videoElementDiv'>\r\n            <Link as={`/${props.state.title}`} href={{\r\n                pathname:'/post',\r\n                query:{\r\n                    postTitle:props.state.title\r\n                }\r\n            }}>\r\n                <a>\r\n                <div className='VideoElement' key={props.state.title}>\r\n                    <div className=\"image\">\r\n                        <span ref={qualityLabel} className='quality'>{props.state.quality}</span>\r\n                        {imageContent()}\r\n                        <span ref={viewLabel} className='views'><FA className='fontawesomeSmall' name=\"eye\" />{props.state.views}</span>\r\n                        <span ref={durationLabel} className='duration'>{props.state.duration}</span>\r\n\r\n                    </div>\r\n                    <ProgressBar value={contextData.functions.likeValueCalculator(props.state.likes, props.state.disLikes)} percent={true}/>\r\n                    <h3>{props.state.title}</h3>\r\n                </div>\r\n                </a>\r\n            </Link>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(VideoElement);","import React, { useEffect, useState, useContext } from 'react';\r\nimport WidgetHeader from \"./WidgetHeader/WidgetHeader\";\r\nimport WidgetFooter from \"./WidgetFooter/WidgetFooter\";\r\nimport WidgetText from \"./WidgetText/WidgetText\";\r\nimport WidgetPagination from './WidgetPagination/WidgetPagination'\r\n\r\nconst Widget = props => {\r\n\r\n    const RenderComponent = () => {\r\n        if (props.component) {\r\n            return (\r\n                <props.component  { ...props }/>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <div className='Widget'>\r\n            <WidgetHeader { ...props }/>\r\n            <WidgetText { ...props }/>\r\n            <RenderComponent/>\r\n            <WidgetFooter  { ...props }/>\r\n        </div>\r\n    );\r\n};\r\nexport default Widget;","import React from 'react';\r\n\r\nimport Link from \"next/link\";\r\nconst WidgetFooter = props => {\r\n\r\n    if (props.redirectTo && props.redirectToTitle ){\r\n        return (\r\n            <div className='WidgetFooter'>\r\n                <Link href={props.redirectTo} ><a>{props.redirectToTitle}</a></Link>\r\n            </div>\r\n        );\r\n    }else return null\r\n\r\n};\r\n\r\nexport default WidgetFooter;\r\n","import React, { useEffect } from 'react';\r\nimport Link from 'next/link'\r\n\r\nconst WidgetHeader = props => {\r\n\r\n\r\n\r\n    const RenderTitle = () => {\r\n        if (props.title) {\r\n            return (\r\n                <p className='WidgetHeaderTitle'>{ props.title }</p>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const RenderRedirectLink = () => {\r\n        if (props.redirectLink && props.redirectToTitle) {\r\n            return (\r\n                <Link href={ props.redirectLink }><a>{ props.redirectToTitle }</a></Link>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    if (props.title) {\r\n        return (\r\n            <div className='WidgetHeader'>\r\n                <RenderTitle/>\r\n                <RenderRedirectLink/>\r\n            </div>\r\n        );\r\n    } else return null\r\n\r\n};\r\n\r\nexport default WidgetHeader;\r\n","import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst WidgetPagination = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, []);\r\n    if (props.pagination){\r\n        return (\r\n            <div className='widget-pagination'>\r\n                1\r\n            </div>\r\n        );\r\n    }else return null\r\n\r\n};\r\nexport default WidgetPagination;\r\n","import React from 'react';\r\nimport Text from '../WidgetsModelsComponents/Text/Text'\r\n\r\nconst WidgetText = props => {\r\n\r\n    if (props.text){\r\n        return (\r\n            <Text text={props.text} textAlign={props.textAlign}/>\r\n        )\r\n    }else return null\r\n\r\n};\r\nexport default WidgetText;\r\n","import React, { useEffect, useState, useContext, useRef } from 'react';\r\n\r\nconst Text = props => {\r\n    const spanElement = useRef(null)\r\n    const [ state, setState ] = useState({\r\n        textAlign: props.textAlign || 'center',\r\n        style: {\r\n            textAlign: props.textAlign || 'center'\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (spanElement) {\r\n            spanElement.current.innerHTML = props.text\r\n        }\r\n    }, []);\r\n    return (\r\n        <span className='widgetText' ref={ spanElement } style={ state.style }>\r\n            { props.text }\r\n        </span>\r\n    );\r\n};\r\nexport default Text;\r\n","import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport Widget from '../Widget/Widget'\r\nimport Posts from '../Posts/Posts'\r\n\r\nconst WidgetsRenderer = props => {\r\n    const [ state, setState ] = useState({});\r\n    useEffect(() => {\r\n        console.log( props)\r\n    }, [props]);\r\n\r\n\r\n    const renderWidgets = props.widgets.filter(widget=>widget.position===props.position).map(widget => {\r\n        switch ( widget.type ) {\r\n            case 'posts':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } component={ Posts } posts={ widget.posts } title={ widget.title } redirectLink={ widget.redirectLink } redirectToTitle={ widget.redirectToTitle }\r\n                            pagination={ widget.pagination }/>\r\n                )\r\n                break\r\n            case 'text':\r\n                return (\r\n                    <Widget key={ widget._id } propsKey={ widget._id } text={ widget.text } textAlign={ widget.textAlign } title={ widget.title } mainLinkUrl='/posts/' redirectToTitle='More videos'/>\r\n                )\r\n                break\r\n            default:\r\n                return null\r\n\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n        {renderWidgets}\r\n        </>\r\n    )\r\n};\r\nexport default WidgetsRenderer;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport AppLayout from \"../../components/layouts/AppLayout\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../../_variables/ajaxPostsVariables\";\r\nimport Iframe from \"../../components/includes/Post/Iframe/Iframe\";\r\nimport PostInfo from \"../../components/includes/Post/PostInfo/PostInfo\";\r\nimport withRouter from \"next/dist/client/with-router\";\r\nimport PostSidebar from \"../../components/includes/Post/PostSidebar/PostSidebar\";\r\nimport Head from \"next/head\";\r\nimport { getSetting, getWidgetsWithData } from \"../../_variables/ajaxVariables\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter'\r\nimport SideBar from '../../components/includes/Sidebar/Sidebar'\r\n\r\nconst Post = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [state,setState]=useState({\r\n        style:{}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log( props)\r\n        if (props.identity.postPageSidebar){\r\n            setState({\r\n                style: {\r\n                    gridArea:'content'\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    const RenderMeta = () => {\r\n        if (props.post.title) {\r\n            return (\r\n                <Head>\r\n                    <title>{ props.post.title }</title>\r\n                    <meta name=\"description\" content={ props.post.description }/>\r\n                    <meta name=\"keywords\" content={ [ ...props.post.tags, ...props.post.categories, ...props.post.actors ] }/>\r\n                    <meta property=\"og:title\" content={ props.post.title }/>\r\n                    <meta property=\"og:type\" content={ props.post.postType === 'video' ? props.post.postType + '.' + 'movies' : props.post.postType }/>\r\n                    {/*url should define*/ }\r\n                    <meta property=\"og:url\" content={ props.post.videoEmbedCode }/>\r\n                    <meta property=\"og:image\" content={ props.post.mainThumbnail }/>\r\n                </Head>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppLayout>\r\n                <SiteSettingSetter { ...props }/>\r\n                <RenderMeta/>\r\n                <div style={state.style} className={ props.identity.postPageSidebar ? 'post withSidebar':'post withOutSidebar'  }>\r\n\r\n                    <div className=\"main\">\r\n                        <Iframe iframeCode={ props.post.videoEmbedCode } meta={ {\r\n                            description: props.post.description,\r\n                            title: props.post.title,\r\n                            duration: props.post.duration,\r\n                            thumbnailUrl: props.post.mainThumbnail,\r\n                            embedURL: props.post.videoEmbedCode,\r\n                            uploadDate: props.post.lastModify,\r\n                        } }/>\r\n\r\n                        <PostInfo\r\n                            title={ props.post.title }\r\n                            description={ props.post.description }\r\n                            tags={ props.post.tags }\r\n                            actors={ props.post.actors }\r\n                            categories={ props.post.categories }\r\n                            id={ props.post._id }\r\n                            likes={ props.post.likes }\r\n                            disLikes={ props.post.disLikes }\r\n                            views={ props.post.views }\r\n                            videoEmbedCode={ props.post.videoEmbedCode }\r\n                        />\r\n                    </div>\r\n\r\n                    {/*<PostSidebar isActive={props.identity.postPageSidebar}/>*/}\r\n                    <SideBar isActive={props.identity.postPageSidebar} widgets={props.widgets} position='postPageSidebar' />\r\n                </div>\r\n\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let post;\r\n    let navigation;\r\n    let identity;\r\n    let widgets;\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const widgetsData = await getWidgetsWithData('all')\r\n    const postBody = {\r\n        postTitle: query.postTitle,\r\n    };\r\n    const postData = await axios.post('http://localhost:3000/api/v1/posts/post', postBody);\r\n    post = postData.data.post\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    return { post, query, navigation, identity,widgets }\r\n};\r\n\r\nexport default withRouter(Post);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAFA;AATA;AAAA;AAgBA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAIA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AADA;AAFA;AAFA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAbA;AAgBA;AAEA;AAKA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AADA;AAFA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAeA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AACA;AACA;AADA;AARA;AAAA;AACA;AADA;AAWA;AACA;AACA;AACA;AAdA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}