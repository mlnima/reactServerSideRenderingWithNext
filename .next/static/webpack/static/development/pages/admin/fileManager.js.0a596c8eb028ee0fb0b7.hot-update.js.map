{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\fileManager.js.0a596c8eb028ee0fb0b7.hot-update.js","sources":["webpack:///./pages/admin/fileManager/index.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AdminLayout from '../../../components/layouts/AdminLayout'\r\nimport FileManagerControl from '../../../components/adminIncludes/FileManagerComponents/FileManagerControl/FileManagerControl'\r\nimport FileManagerArea from '../../../components/adminIncludes/FileManagerComponents/FileManagerArea/FileManagerArea';\r\nimport { readPath } from '../../../_variables/_ajaxFilesVariables'\r\nimport { AppContext } from '../../../context/AppContext'\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport UploadedPopView from '../../../components/adminIncludes/FileManagerComponents/UploadedPopView/UploadedPopView'\r\n///static/uploads/image/2020/4/706185_561483320532764_1215505165_o.jpg\r\nconst fileManager = props => {\r\n    const contextData = useContext(AppContext);\r\n    const [ state, setState ] = useState({\r\n        path: '.',\r\n        prevPath: '.',\r\n        files: [],\r\n        clickedItem: '',\r\n        clickedItemName: '',\r\n        file: '',\r\n        editFile: false,\r\n        action: '',\r\n        _do: '',\r\n        // AlertBox:false,\r\n        DeleteAlertBox: false,\r\n        confirm: Date.now(),\r\n        message: '',\r\n        report: '',\r\n        inputBox: false,\r\n        newItemName: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        // setState({\r\n        //     ...state,\r\n        //     prevPath: state.path\r\n        // })\r\n        setData()\r\n    }, [ state.path ]);\r\n\r\n\r\n\r\n    const setData = () => {\r\n        contextData.dispatchState({\r\n            ...contextData.state,\r\n            loading: true\r\n        });\r\n        readPath(state.path).then(res => {\r\n            // console.log(res.data.type )\r\n            if (res.data.type === 'dir') {\r\n                setState({\r\n                    ...state,\r\n                    files: res.data.data,\r\n                    // prevPath: path\r\n                })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n            } else if (res.data.type === 'file') {\r\n                setState({\r\n                    ...state,\r\n                    clickedItem: state.path,\r\n                    path:state.prevPath\r\n                })\r\n                // contextData.dispatchSettings({\r\n                //     ...contextData.settings,\r\n                //     textEditorCurrentFile: res.data.data\r\n                // })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n                // props.router.push('/admin/fileManager/textEditor')\r\n            } else {\r\n                setState({\r\n                    ...state,\r\n                    error: true\r\n                })\r\n                contextData.dispatchState({\r\n                    ...contextData.state,\r\n                    loading: false\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            contextData.dispatchState({\r\n                ...contextData.state,\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    const setStateHandler = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <UploadedPopView clickedItem={ state.clickedItem } setStateHandler={ setStateHandler } state={ state } setState={ setState }/>\r\n            <div className='fileManager'>\r\n                <FileManagerControl setStateHandler={ setStateHandler } data={ state } state={ state } setState={ setState }/>\r\n                <FileManagerArea setStateHandler={ setStateHandler } data={ state } state={ state } setState={ setState }/>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\nexport default withRouter(fileManager);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAFA;AAAA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}