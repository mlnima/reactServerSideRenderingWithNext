{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\posts.js.74a9f028420e03fedde2.hot-update.js","sources":["webpack:///./components/adminIncludes/PostsComponents/Filters/FilterDropDownActions.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../../../../context/AppContext\";\r\nimport withRouter from 'next/dist/client/with-router'\r\n\r\nconst FilterDropDownActions = props => {\r\n    const contextData = useContext(AppContext);\r\n    const bulkAction = useRef(null);\r\n    const typeToDisplay = useRef(null);\r\n\r\n    const [ state, setState ] = useState({});\r\n\r\n\r\n    const onFormatChangeHandler = e => {\r\n\r\n        // if (bulkAction.current.value !== 'none') {\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         loading:true\r\n        //     });\r\n        //     postsBulkAction(contextData.postsData.checkedPosts,bulkAction.current.value).then(()=>{\r\n        //        setData()\r\n        //     }).catch(err=>{\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    const changePostsTypeToDisplay = e => {\r\n        props.router.push({\r\n            pathname:props.router.pathname,\r\n            query:{...props.query,type:e.target.value}})\r\n        // if (e.target.value !== 'none') {\r\n        //     contextData.setPostsData({\r\n        //         ...contextData.postsData,\r\n        //         type: e.target.value\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    const onEmptyTrashHandler = () => {\r\n        // emptyTrash().then(res=>{\r\n        //     if (res.data.error){\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'red'\r\n        //         })\r\n        //     }else {\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             loading: false\r\n        //         });\r\n        //         setData();\r\n        //         contextData.setState({\r\n        //             ...contextData.state,\r\n        //             report:res.data.message,\r\n        //             reportColor:'green'\r\n        //         })\r\n        //     }\r\n        // }).catch(()=>{\r\n        //     contextData.setState({\r\n        //         ...contextData.state,\r\n        //         report:'Can Not Communicate With Server'\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    const EmptyTrash = () => {\r\n        // if (contextData.postsData.status === 'Trash'){\r\n        //     return (\r\n        //         <button onClick={()=>onEmptyTrashHandler()}>Empty Trash</button>\r\n        //     )\r\n        // }else\r\n        return null\r\n    };\r\n\r\n    return (\r\n        <div className='FilterDropDownActions'>\r\n            <div className=\"bulkAction\">\r\n                <select ref={ bulkAction } placeholder='Bulk Actions'>\r\n                    <option value='none'>Bulk Actions</option>\r\n                    <option value='Published'>Published</option>\r\n                    <option value='Draft'>Draft</option>\r\n                    <option value='Trash'>Trash</option>\r\n                </select>\r\n                <button className='actionBtn' onClick={ () => onFormatChangeHandler() }>Apply</button>\r\n            </div>\r\n            <div className=\"DateCategoryFormat\">\r\n                <select ref={ typeToDisplay } onChange={ e => changePostsTypeToDisplay(e) }>\r\n                    <option value='all'>All</option>\r\n                    <option value='video'>Video</option>\r\n                    <option value='standard'>Standard</option>\r\n                </select>\r\n            </div>\r\n            <EmptyTrash/>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(FilterDropDownActions) ;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}