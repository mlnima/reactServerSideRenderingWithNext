{"version":3,"file":"static/webpack/static\\development\\pages\\posts.js.d8128016428734b7e1a9.hot-update.js","sources":["webpack:///./pages/posts/index.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport AppLayout from '../../components/layouts/AppLayout'\r\nimport { getSetting } from '../../_variables/ajaxVariables'\r\nimport { getMeta, getPosts } from '../../_variables/ajaxPostsVariables'\r\nimport SiteSettingSetter from '../../components/includes/SiteSettingsSetter/SiteSettingsSetter';\r\nimport withRouter from 'next/dist/client/with-router'\r\nimport Posts from '../../components/includes/Posts/Posts'\r\nimport Link from 'next/link'\r\nimport PaginationComponent from '../../components/includes/PaginationComponent/PaginationComponent'\r\n\r\nconst posts = props => {\r\n    const [ state, setState ] = useState({\r\n        posts: [],\r\n        totalCount: 0\r\n    });\r\n\r\n    const [ postsData, setPostsData ] = useState({\r\n        size: 30,\r\n        pageNo: 1,\r\n        postType: 'all',\r\n        fields: [ 'all' ],\r\n        keyword: '',\r\n        author: 'all',\r\n        status: 'all',\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (props.postsSource.posts) {\r\n            setState({\r\n                ...state,\r\n                posts: props.postsSource.posts,\r\n                totalCount: props.postsSource.totalCount\r\n            })\r\n        }\r\n        if (props.getPostsData) {\r\n            setPostsData(props.getPostsData)\r\n        }\r\n    }, [ props ]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='posts'>\r\n                <SiteSettingSetter  { ...props }/>\r\n                <Posts posts={ props.postsSource.posts || state.posts }/>\r\n                <PaginationComponent\r\n                    isActive={ true }\r\n                    currentPage={ postsData.pageNo }\r\n                    totalCount={ state.totalCount }\r\n                    size={ postsData.size }\r\n                    maxPage={ Math.ceil(parseInt(state.totalCount) / parseInt(postsData.size))- 1 }\r\n                    mainLinkUrl='http://localhost:3000/posts'\r\n                />\r\n            </div>\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nposts.getInitialProps = async ({ pathname, query, req, res, err }) => {\r\n    let navigation;\r\n    let identity;\r\n    let postsSource;\r\n\r\n    const getPostsData = {\r\n        size: parseInt(query.size) || 30,\r\n        pageNo: query.page || 1,\r\n        postType: query.type || 'all',\r\n        fields: [ 'all' ],\r\n        keyword: query.keyword || '',\r\n        author: query.author || 'all',\r\n        status: 'published',\r\n        tag: query.tag || 'all',\r\n        category: query.category || 'all',\r\n        sort: query.sort || 'latest',\r\n    }\r\n\r\n    const identityData = await getSetting('identity');\r\n    const navigationData = await getSetting('navigation');\r\n    const postsData = await getPosts(getPostsData)\r\n\r\n    identity = identityData.data.setting ? identityData.data.setting.data : {}\r\n    navigation = navigationData.data.setting ? navigationData.data.setting : {}\r\n    postsSource = postsData.data ? postsData.data : []\r\n    return { identity, navigation, query, postsSource, getPostsData }\r\n}\r\n\r\nexport default withRouter(posts);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AANA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AALA;AAAA;AACA;AADA;AAkBA;AAlBA;AAAA;AACA;AADA;AAmBA;AAnBA;AAAA;AACA;AADA;AAoBA;AAEA;AACA;AACA;AAxBA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA2BA;;;;A","sourceRoot":""}